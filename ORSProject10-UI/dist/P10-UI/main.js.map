{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/atms/atms.component.css","webpack:///./src/app/atms/atms.component.html","webpack:///./src/app/atms/atms.component.ts","webpack:///./src/app/atms/atmslist.component.css","webpack:///./src/app/atms/atmslist.component.html","webpack:///./src/app/atms/atmslist.component.ts","webpack:///./src/app/auth-service.service.ts","webpack:///./src/app/base-list.component.ts","webpack:///./src/app/base.component.ts","webpack:///./src/app/college/college-list.component.html","webpack:///./src/app/college/college-list.component.ts","webpack:///./src/app/college/college.component.css","webpack:///./src/app/college/college.component.html","webpack:///./src/app/college/college.component.ts","webpack:///./src/app/company/company.component.css","webpack:///./src/app/company/company.component.html","webpack:///./src/app/company/company.component.ts","webpack:///./src/app/company/companylist.component.css","webpack:///./src/app/company/companylist.component.html","webpack:///./src/app/company/companylist.component.ts","webpack:///./src/app/course/course-list.component.html","webpack:///./src/app/course/course-list.component.ts","webpack:///./src/app/course/course.component.css","webpack:///./src/app/course/course.component.html","webpack:///./src/app/course/course.component.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/customer/customerlist.component.css","webpack:///./src/app/customer/customerlist.component.html","webpack:///./src/app/customer/customerlist.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/app/employee/employeelist.component.css","webpack:///./src/app/employee/employeelist.component.html","webpack:///./src/app/employee/employeelist.component.ts","webpack:///./src/app/endpoint-service.service.ts","webpack:///./src/app/faculty/faculty-list.component.html","webpack:///./src/app/faculty/faculty-list.component.ts","webpack:///./src/app/faculty/faculty.component.css","webpack:///./src/app/faculty/faculty.component.html","webpack:///./src/app/faculty/faculty.component.ts","webpack:///./src/app/field/field.component.css","webpack:///./src/app/field/field.component.html","webpack:///./src/app/field/field.component.ts","webpack:///./src/app/field/fieldlist.component.css","webpack:///./src/app/field/fieldlist.component.html","webpack:///./src/app/field/fieldlist.component.ts","webpack:///./src/app/file/file.component.css","webpack:///./src/app/file/file.component.html","webpack:///./src/app/file/file.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/http-service.service.ts","webpack:///./src/app/inventory/inventory.component.css","webpack:///./src/app/inventory/inventory.component.html","webpack:///./src/app/inventory/inventory.component.ts","webpack:///./src/app/inventory/inventorylist.component.css","webpack:///./src/app/inventory/inventorylist.component.html","webpack:///./src/app/inventory/inventorylist.component.ts","webpack:///./src/app/issue/issue.component.css","webpack:///./src/app/issue/issue.component.html","webpack:///./src/app/issue/issue.component.ts","webpack:///./src/app/issue/issuelist.component.css","webpack:///./src/app/issue/issuelist.component.html","webpack:///./src/app/issue/issuelist.component.ts","webpack:///./src/app/job/job.component.css","webpack:///./src/app/job/job.component.html","webpack:///./src/app/job/job.component.ts","webpack:///./src/app/job/joblist.component.css","webpack:///./src/app/job/joblist.component.html","webpack:///./src/app/job/joblist.component.ts","webpack:///./src/app/loader/loader.component.css","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/loans/loans.component.css","webpack:///./src/app/loans/loans.component.html","webpack:///./src/app/loans/loans.component.ts","webpack:///./src/app/loans/loanslist.component.css","webpack:///./src/app/loans/loanslist.component.html","webpack:///./src/app/loans/loanslist.component.ts","webpack:///./src/app/login/forgotpassword.component.html","webpack:///./src/app/login/forgotpassword.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/signup.component.html","webpack:///./src/app/login/signup.component.ts","webpack:///./src/app/marksheet/getmarksheet.component.html","webpack:///./src/app/marksheet/getmarksheet.component.ts","webpack:///./src/app/marksheet/marksheet-list.component.html","webpack:///./src/app/marksheet/marksheet-list.component.ts","webpack:///./src/app/marksheet/marksheet.component.css","webpack:///./src/app/marksheet/marksheet.component.html","webpack:///./src/app/marksheet/marksheet.component.ts","webpack:///./src/app/marksheet/marksheetmerit-list.component.html","webpack:///./src/app/marksheet/marksheetmerit-list.component.ts","webpack:///./src/app/message/message-list.component.html","webpack:///./src/app/message/message-list.component.ts","webpack:///./src/app/message/message.component.css","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/order/order.component.css","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/order/orderlist.component.css","webpack:///./src/app/order/orderlist.component.html","webpack:///./src/app/order/orderlist.component.ts","webpack:///./src/app/owner/owner.component.css","webpack:///./src/app/owner/owner.component.html","webpack:///./src/app/owner/owner.component.ts","webpack:///./src/app/owner/ownerlist.component.css","webpack:///./src/app/owner/ownerlist.component.html","webpack:///./src/app/owner/ownerlist.component.ts","webpack:///./src/app/patient/patient.component.css","webpack:///./src/app/patient/patient.component.html","webpack:///./src/app/patient/patient.component.ts","webpack:///./src/app/patient/patientlist.component.css","webpack:///./src/app/patient/patientlist.component.html","webpack:///./src/app/patient/patientlist.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/product/productlist.component.css","webpack:///./src/app/product/productlist.component.html","webpack:///./src/app/product/productlist.component.ts","webpack:///./src/app/productdetails/productdetails.component.css","webpack:///./src/app/productdetails/productdetails.component.html","webpack:///./src/app/productdetails/productdetails.component.ts","webpack:///./src/app/productdetails/productdetailslist.component.css","webpack:///./src/app/productdetails/productdetailslist.component.html","webpack:///./src/app/productdetails/productdetailslist.component.ts","webpack:///./src/app/project/project.component.css","webpack:///./src/app/project/project.component.html","webpack:///./src/app/project/project.component.ts","webpack:///./src/app/project/projectlist.component.css","webpack:///./src/app/project/projectlist.component.html","webpack:///./src/app/project/projectlist.component.ts","webpack:///./src/app/role/role-list.component.html","webpack:///./src/app/role/role-list.component.ts","webpack:///./src/app/role/role.component.css","webpack:///./src/app/role/role.component.html","webpack:///./src/app/role/role.component.ts","webpack:///./src/app/route/route.component.css","webpack:///./src/app/route/route.component.html","webpack:///./src/app/route/route.component.ts","webpack:///./src/app/route/routelist.component.css","webpack:///./src/app/route/routelist.component.html","webpack:///./src/app/route/routelist.component.ts","webpack:///./src/app/service-locator.service.ts","webpack:///./src/app/spinner/spinner.component.css","webpack:///./src/app/spinner/spinner.component.html","webpack:///./src/app/spinner/spinner.component.ts","webpack:///./src/app/student/student-list.component.html","webpack:///./src/app/student/student-list.component.ts","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/subject/subject-list.component.html","webpack:///./src/app/subject/subject-list.component.ts","webpack:///./src/app/subject/subject.component.css","webpack:///./src/app/subject/subject.component.html","webpack:///./src/app/subject/subject.component.ts","webpack:///./src/app/supplier/supplier.component.css","webpack:///./src/app/supplier/supplier.component.html","webpack:///./src/app/supplier/supplier.component.ts","webpack:///./src/app/supplier/supplierlist.component.css","webpack:///./src/app/supplier/supplierlist.component.html","webpack:///./src/app/supplier/supplierlist.component.ts","webpack:///./src/app/timetable/timetable-list.component.html","webpack:///./src/app/timetable/timetable-list.component.ts","webpack:///./src/app/timetable/timetable.component.css","webpack:///./src/app/timetable/timetable.component.html","webpack:///./src/app/timetable/timetable.component.ts","webpack:///./src/app/transactions/transactions.component.css","webpack:///./src/app/transactions/transactions.component.html","webpack:///./src/app/transactions/transactions.component.ts","webpack:///./src/app/transactions/transactionslist.component.css","webpack:///./src/app/transactions/transactionslist.component.html","webpack:///./src/app/transactions/transactionslist.component.ts","webpack:///./src/app/transportation/transportation.component.css","webpack:///./src/app/transportation/transportation.component.html","webpack:///./src/app/transportation/transportation.component.ts","webpack:///./src/app/transportation/transportationlist.component.css","webpack:///./src/app/transportation/transportationlist.component.html","webpack:///./src/app/transportation/transportationlist.component.ts","webpack:///./src/app/user/changepassword.component.html","webpack:///./src/app/user/changepassword.component.ts","webpack:///./src/app/user/myprofile.component.html","webpack:///./src/app/user/myprofile.component.ts","webpack:///./src/app/user/user-list.component.html","webpack:///./src/app/user/user-list.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/utility/data-validator.ts","webpack:///./src/app/vehicletracking/vehicletracking.component.css","webpack:///./src/app/vehicletracking/vehicletracking.component.html","webpack:///./src/app/vehicletracking/vehicletracking.component.ts","webpack:///./src/app/vehicletracking/vehicletrackinglist.component.css","webpack:///./src/app/vehicletracking/vehicletrackinglist.component.html","webpack:///./src/app/vehicletracking/vehicletrackinglist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MarksheetComponent } from './marksheet/marksheet.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { CollegeComponent } from './college/college.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\r\nimport { SignUpComponent } from './login/signup.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { MessageListComponent } from './message/message-list.component';\r\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\r\nimport { CollegeListComponent } from './college/college-list.component';\r\nimport { StudentListComponent } from './student/student-list.component';\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { CourseComponent } from \"./course/course.component\";\r\nimport { SubjectComponent } from \"./subject/subject.component\"\r\nimport { Subject, from } from 'rxjs';\r\nimport { RoleListComponent } from './role/role-list.component';\r\nimport { CourseListComponent } from \"./course/course-list.component\";\r\nimport { FacultyComponent } from \"./faculty/faculty.component\";\r\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\r\nimport { TimetableComponent } from \"./timetable/timetable.component\";\r\nimport { FileComponent } from './file/file.component';\r\nimport { TimetableListComponent } from './timetable/timetable-list.component';\r\nimport { SubjectListComponent } from './subject/subject-list.component';\r\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\r\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\r\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\r\nimport { LoaderComponent } from './loader/loader.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { MyprofileComponent } from './user/myprofile.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { OrderlistComponent } from './order/orderlist.component';\r\n\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductlistComponent } from './product/productlist.component';\r\nimport { ProductdetailsComponent } from './productdetails/productdetails.component';\r\nimport { ProductdetailslistComponent } from './productdetails/productdetailslist.component';\r\nimport { PatientComponent } from './patient/patient.component';\r\nimport { PatientlistComponent } from './patient/patientlist.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { CompanylistComponent } from './company/companylist.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { InventorylistComponent } from './inventory/inventorylist.component';\r\nimport { SupplierComponent } from './supplier/supplier.component';\r\nimport { SupplierlistComponent } from './supplier/supplierlist.component';\r\nimport { VehicletrackingComponent } from './vehicletracking/vehicletracking.component';\r\nimport { VehicletrackinglistComponent } from './vehicletracking/vehicletrackinglist.component';\r\nimport { TransportationComponent } from './transportation/transportation.component';\r\nimport { TransportationlistComponent } from './transportation/transportationlist.component';\r\nimport { RouteComponent } from './route/route.component';\r\nimport { RoutelistComponent } from './route/routelist.component';\r\nimport { IssueComponent } from './issue/issue.component';\r\nimport { IssuelistComponent } from './issue/issuelist.component';\r\nimport { EmployeeComponent } from './employee/employee.component';\r\nimport { EmployeelistComponent } from './employee/employeelist.component';\r\nimport { JobComponent } from './job/job.component';\r\nimport { JoblistComponent } from './job/joblist.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { CustomerlistComponent } from './customer/customerlist.component';\r\nimport { TransactionsComponent } from './transactions/transactions.component';\r\nimport { TransactionslistComponent } from './transactions/transactionslist.component';\r\nimport { LoansComponent } from './loans/loans.component';\r\nimport { LoanslistComponent } from './loans/loanslist.component';\r\nimport { AtmsComponent } from './atms/atms.component';\r\nimport { AtmslistComponent } from './atms/atmslist.component';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { ProjectlistComponent } from './project/projectlist.component';\r\nimport { OwnerComponent } from './owner/owner.component';\r\nimport { OwnerlistComponent } from './owner/ownerlist.component';\r\nimport { FieldComponent } from './field/field.component';\r\nimport { FieldlistComponent } from './field/fieldlist.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: 'dashboard',\r\n        pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'dashboard',\r\n        component: DashboardComponent\r\n    },\r\n    {\r\n        path: 'loader',\r\n        component: LoaderComponent\r\n\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    }\r\n    ,\r\n    {\r\n        path: 'login/:userparams',\r\n        component: LoginComponent\r\n    },\r\n\r\n    {\r\n        path: 'spinner',\r\n        component: SpinnerComponent\r\n    },\r\n    {\r\n        path: 'forgotpassword',\r\n        component: ForgotPasswordComponent\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignUpComponent\r\n    },\r\n    {\r\n        path: 'message',\r\n        component: MessageComponent,\r\n\r\n    },\r\n    {\r\n        path: 'message/:id',\r\n        component: MessageComponent\r\n    },\r\n    {\r\n        path: 'messagelist',\r\n        component: MessageListComponent\r\n\r\n    },\r\n    {\r\n        path: 'marksheet',\r\n        component: MarksheetComponent\r\n\r\n    },\r\n    {\r\n        path: 'marksheet/:id',\r\n        component: MarksheetComponent\r\n\r\n    },\r\n    {\r\n        path: 'marksheetlist',\r\n        component: MarksheetListComponent\r\n\r\n    },\r\n    {\r\n        path: 'marksheetmeritlist',\r\n        component: MarksheetmeritListComponent\r\n\r\n    },\r\n    {\r\n        path: 'getmarksheet',\r\n        component: GetmarksheetComponent\r\n\r\n    },\r\n    {\r\n        path: 'college',\r\n        component: CollegeComponent\r\n\r\n    },\r\n    {\r\n        path: 'college/:id',\r\n        component: CollegeComponent\r\n\r\n    },\r\n    {\r\n        path: 'collegelist',\r\n        component: CollegeListComponent\r\n\r\n    },\r\n    {\r\n        path: 'student',\r\n        component: StudentComponent\r\n\r\n    },\r\n    {\r\n        path: 'student/:id',\r\n        component: StudentComponent\r\n\r\n    },\r\n    {\r\n        path: 'studentlist',\r\n        component: StudentListComponent\r\n\r\n    },\r\n    {\r\n        path: 'user',\r\n        component: UserComponent\r\n\r\n    },\r\n    {\r\n        path: 'user/:id',\r\n        component: UserComponent\r\n\r\n    },\r\n    {\r\n        path: 'userlist',\r\n        component: UserListComponent\r\n\r\n    },\r\n    {\r\n        path: 'role',\r\n        component: RoleComponent\r\n\r\n    },\r\n    {\r\n        path: 'rolelist',\r\n        component: RoleListComponent\r\n\r\n    },\r\n    {\r\n        path: 'role/:id',\r\n        component: RoleComponent\r\n\r\n    },\r\n    {\r\n        path: 'course',\r\n        component: CourseComponent\r\n\r\n    },\r\n    {\r\n        path: 'courselist',\r\n        component: CourseListComponent\r\n\r\n    },\r\n    {\r\n        path: 'course/:id',\r\n        component: CourseComponent\r\n\r\n    },\r\n    {\r\n\r\n        path: 'faculty',\r\n        component: FacultyComponent\r\n\r\n    },\r\n    {\r\n        path: 'facultylist',\r\n        component: FacultyListComponent\r\n\r\n    },\r\n    {\r\n        path: 'faculty/:id',\r\n        component: FacultyComponent\r\n\r\n    },\r\n    {\r\n        path: 'timetable',\r\n        component: TimetableComponent\r\n\r\n\r\n    },\r\n    {\r\n        path: 'timetablelist',\r\n        component: TimetableListComponent\r\n\r\n    },\r\n    {\r\n        path: 'timetable/:id',\r\n        component: TimetableComponent\r\n\r\n    },\r\n    {\r\n        path: 'subject',\r\n        component: SubjectComponent\r\n\r\n    },\r\n    {\r\n        path: 'subjectlist',\r\n        component: SubjectListComponent\r\n\r\n    },\r\n    {\r\n        path: 'subject/:id',\r\n        component: SubjectComponent\r\n\r\n    },\r\n    {\r\n        path: 'myprofile',\r\n        component: MyprofileComponent\r\n    },\r\n    {\r\n        path: 'file',\r\n        component: FileComponent\r\n    },\r\n    {\r\n        path: 'changepassword',\r\n        component: ChangepasswordComponent\r\n\r\n\r\n    },\r\n    {\r\n        path: 'order',\r\n        component: OrderComponent\r\n\r\n    },\r\n    {\r\n        path: 'order/:id',\r\n        component: OrderComponent\r\n\r\n    },\r\n    {\r\n        path: 'orderlist',\r\n        component: OrderlistComponent\r\n\r\n    },\r\n    {\r\n        path: 'owner',\r\n        component: OwnerComponent\r\n\r\n    },\r\n    {\r\n        path: 'owner/:id',\r\n        component: OwnerComponent\r\n\r\n    },\r\n    {\r\n        path: 'ownerlist',\r\n        component: OwnerlistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'field',\r\n        component: FieldComponent\r\n\r\n    },\r\n    {\r\n        path: 'field/:id',\r\n        component: FieldComponent\r\n\r\n    },\r\n    {\r\n        path: 'fieldlist',\r\n        component: FieldlistComponent\r\n\r\n    },\r\n\r\n\r\n    {\r\n        path: 'productdetails',\r\n        component: ProductdetailsComponent\r\n\r\n    },\r\n    {\r\n        path: 'productdetails/:id',\r\n        component: ProductdetailsComponent\r\n\r\n    },\r\n    {\r\n        path: 'productdetailslist',\r\n        component: ProductdetailslistComponent\r\n\r\n    },\r\n\r\n\r\n    {\r\n        path: 'patient',\r\n        component: PatientComponent\r\n\r\n    },\r\n    {\r\n        path: 'patient/:id',\r\n        component: PatientComponent\r\n\r\n    },\r\n    {\r\n        path: 'patientlist',\r\n        component: PatientlistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'inventory',\r\n        component: InventoryComponent\r\n\r\n    },\r\n    {\r\n        path: 'inventory/:id',\r\n        component: InventoryComponent\r\n\r\n    },\r\n    {\r\n        path: 'inventorylist',\r\n        component: InventorylistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'supplier',\r\n        component: SupplierComponent\r\n\r\n    },\r\n    {\r\n        path: 'supplier/:id',\r\n        component: SupplierComponent\r\n\r\n    },\r\n    {\r\n        path: 'supplierlist',\r\n        component: SupplierlistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'vehicletracking',\r\n        component: VehicletrackingComponent\r\n\r\n    },\r\n    {\r\n        path: 'vehicletracking/:id',\r\n        component: VehicletrackingComponent\r\n\r\n    },\r\n    {\r\n        path: 'vehicletrackinglist',\r\n        component: VehicletrackinglistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'company',\r\n        component: CompanyComponent\r\n\r\n    },\r\n    {\r\n        path: 'company/:id',\r\n        component: CompanyComponent\r\n\r\n    },\r\n    {\r\n        path: 'companylist',\r\n        component: CompanylistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'transportation',\r\n        component: TransportationComponent\r\n\r\n    },\r\n    {\r\n        path: 'transportation/:id',\r\n        component: TransportationComponent\r\n\r\n    },\r\n    {\r\n        path: 'transportationlist',\r\n        component: TransportationlistComponent\r\n\r\n    },\r\n\r\n\r\n    {\r\n        path: 'employee',\r\n        component: EmployeeComponent\r\n\r\n    },\r\n    {\r\n        path: 'employee/:id',\r\n        component: EmployeeComponent\r\n\r\n    },\r\n    {\r\n        path: 'employeelist',\r\n        component: EmployeelistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'job',\r\n        component: JobComponent\r\n\r\n    },\r\n    {\r\n        path: 'job/:id',\r\n        component: JobComponent\r\n\r\n    },\r\n    {\r\n        path: 'joblist',\r\n        component: JoblistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'customer',\r\n        component: CustomerComponent\r\n\r\n    },\r\n    {\r\n        path: 'customer/:id',\r\n        component: CustomerComponent\r\n\r\n    },\r\n    {\r\n        path: 'customerlist',\r\n        component: CustomerlistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'transactions',\r\n        component: TransactionsComponent\r\n\r\n    },\r\n    {\r\n        path: 'transactions/:id',\r\n        component: TransactionsComponent\r\n\r\n    },\r\n    {\r\n        path: 'transactionslist',\r\n        component: TransactionslistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'issue',\r\n        component: IssueComponent\r\n\r\n    },\r\n    {\r\n        path: 'issue/:id',\r\n        component: IssueComponent\r\n\r\n    },\r\n    {\r\n        path: 'issuelist',\r\n        component: IssuelistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'route',\r\n        component: RouteComponent\r\n\r\n    },\r\n    {\r\n        path: 'route/:id',\r\n        component: RouteComponent\r\n\r\n    },\r\n    {\r\n        path: 'routelist',\r\n        component: RoutelistComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'atms',\r\n        component: AtmsComponent\r\n\r\n    },\r\n    {\r\n        path: 'atms/:id',\r\n        component: AtmsComponent\r\n\r\n    },\r\n    {\r\n        path: 'atmslist',\r\n        component: AtmslistComponent\r\n\r\n    },\r\n\r\n\r\n    {\r\n        path: 'project',\r\n        component: ProjectComponent\r\n\r\n    },\r\n    {\r\n        path: 'project/:id',\r\n        component: ProjectComponent\r\n\r\n    },\r\n    {\r\n        path: 'projectlist',\r\n        component: ProjectlistComponent\r\n\r\n    },\r\n\r\n\r\n    {\r\n        path: 'loans',\r\n        component: LoansComponent\r\n\r\n    },\r\n    {\r\n        path: 'loans/:id',\r\n        component: LoansComponent\r\n\r\n    },\r\n    {\r\n        path: 'loanslist',\r\n        component: LoanslistComponent\r\n\r\n    },\r\n\r\n\r\n\r\n    {\r\n        path: 'product',\r\n        component: ProductComponent\r\n\r\n    },\r\n    {\r\n        path: 'productlist',\r\n        component: ProductlistComponent\r\n\r\n    },\r\n    {\r\n        path: 'product/:id',\r\n        component: ProductComponent\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n    exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class AppRoutingModule { }","module.exports = \".dropbtn {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 16px;\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n  }\\r\\n  \\r\\n  .dropdown {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    background-color: #f1f1f1;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n  }\\r\\n  \\r\\n  .dropdown-content a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n  }\\r\\n  \\r\\n  .app {\\r\\n    margin: 48px;\\r\\n  }\\r\\n  \\r\\n  .buttons {\\r\\n    display: flex;\\r\\n    max-width: 500px;\\r\\n    justify-content: space-evenly;\\r\\n    margin-bottom: 48px;\\r\\n\\r\\n  }\\r\\n\\r\\n  \\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtFQUNkOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQiw0Q0FBNEM7SUFDNUMsVUFBVTtFQUNaOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsY0FBYztFQUNoQjs7RUFDQTtJQUNFLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsNkJBQTZCO0lBQzdCLG1CQUFtQjs7RUFFckIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gIH1cclxuICBcclxuICAuZHJvcGRvd24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIH1cclxuICBcclxuICAuZHJvcGRvd24tY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICAgIG1pbi13aWR0aDogMTYwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIC5kcm9wZG93bi1jb250ZW50IGEge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIC5hcHAge1xyXG4gICAgbWFyZ2luOiA0OHB4O1xyXG4gIH1cclxuICBcclxuICAuYnV0dG9ucyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcclxuXHJcbiAgfVxyXG5cclxuICBcclxuICAiXX0= */\"","module.exports = \"\\r\\n  <router-outlet></router-outlet>\\r\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription, Observable,timer } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent{\r\n \r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n \r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MarksheetComponent } from './marksheet/marksheet.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { CollegeComponent } from './college/college.component';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { DataValidator } from './utility/data-validator';\r\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\r\nimport { SignUpComponent } from './login/signup.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MessageListComponent } from './message/message-list.component';\r\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\r\nimport { CollegeListComponent } from './college/college-list.component';\r\nimport { StudentListComponent } from './student/student-list.component';\r\nimport { UserComponent } from './user/user.component';\r\n\r\nimport { UserListComponent } from './user/user-list.component';\r\n\r\nimport { RoleComponent } from './role/role.component';\r\nimport { CourseComponent } from './course/course.component';\r\nimport { SubjectComponent } from './subject/subject.component';\r\nimport { RoleListComponent } from './role/role-list.component';\r\nimport { TimetableComponent } from './timetable/timetable.component';\r\nimport { CourseListComponent } from \"./course/course-list.component\";\r\nimport { FacultyComponent } from './faculty/faculty.component';\r\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\r\nimport { FileComponent } from './file/file.component';\r\nimport { TimetableListComponent } from \"./timetable/timetable-list.component\";\r\nimport { SubjectListComponent } from \"./subject/subject-list.component\";\r\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\r\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\r\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\r\nimport { LoaderComponent } from \"./loader/loader.component\";\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { MyprofileComponent } from './user/myprofile.component';\r\nimport { AuthService } from './auth-service.service';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { OrderlistComponent } from './order/orderlist.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductlistComponent } from './product/productlist.component';\r\nimport { ProductdetailsComponent } from './productdetails/productdetails.component';\r\nimport { ProductdetailslistComponent } from './productdetails/productdetailslist.component';\r\nimport { PatientComponent } from './patient/patient.component';\r\nimport { PatientlistComponent } from './patient/patientlist.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { CompanylistComponent } from './company/companylist.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { InventorylistComponent } from './inventory/inventorylist.component';\r\nimport { SupplierComponent } from './supplier/supplier.component';\r\nimport { SupplierlistComponent } from './supplier/supplierlist.component';\r\nimport { VehicletrackingComponent } from './vehicletracking/vehicletracking.component';\r\nimport { VehicletrackinglistComponent } from './vehicletracking/vehicletrackinglist.component';\r\nimport { TransportationComponent } from './transportation/transportation.component';\r\nimport { TransportationlistComponent } from './transportation/transportationlist.component';\r\nimport { RouteComponent } from './route/route.component';\r\nimport { RoutelistComponent } from './route/routelist.component';\r\nimport { IssueComponent } from './issue/issue.component';\r\nimport { IssuelistComponent } from './issue/issuelist.component';\r\nimport { EmployeeComponent } from './employee/employee.component';\r\nimport { EmployeelistComponent } from './employee/employeelist.component';\r\nimport { JobComponent } from './job/job.component';\r\nimport { JoblistComponent } from './job/joblist.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { CustomerlistComponent } from './customer/customerlist.component';\r\nimport { TransactionsComponent } from './transactions/transactions.component';\r\nimport { TransactionslistComponent } from './transactions/transactionslist.component';\r\nimport { LoansComponent } from './loans/loans.component';\r\nimport { LoanslistComponent } from './loans/loanslist.component';\r\nimport { AtmsComponent } from './atms/atms.component';\r\nimport { AtmslistComponent } from './atms/atmslist.component';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { ProjectlistComponent } from './project/projectlist.component';\nimport { OwnerComponent } from './owner/owner.component';\nimport { OwnerlistComponent } from './owner/ownerlist.component';\nimport { FieldComponent } from './field/field.component';\nimport { FieldlistComponent } from './field/fieldlist.component';\r\n\r\n\r\n\r\n\r\n\r\n// import { AuthService } from './auth.service';\r\n\r\n\r\nexport function myHttpLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MarksheetComponent,\r\n    MarksheetListComponent,\r\n    StudentComponent,\r\n    StudentListComponent,\r\n    CollegeComponent,\r\n    CollegeListComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    ForgotPasswordComponent,\r\n    SignUpComponent,\r\n    MessageComponent,\r\n    MessageListComponent,\r\n    UserComponent,\r\n    UserListComponent,\r\n\r\n    RoleComponent,\r\n    RoleListComponent,\r\n    CourseComponent,\r\n    SubjectComponent,\r\n    SubjectListComponent,\r\n    TimetableComponent,\r\n    CourseListComponent,\r\n    FacultyComponent,\r\n    FacultyListComponent,\r\n    TimetableComponent,\r\n    TimetableListComponent,\r\n    MarksheetmeritListComponent,\r\n    GetmarksheetComponent,\r\n    ChangepasswordComponent,\r\n    LoaderComponent,\r\n    FileComponent,\r\n    NavbarComponent,\r\n    SpinnerComponent,\r\n    FooterComponent,\r\n    MyprofileComponent,\r\n    OrderComponent,\r\n    OrderlistComponent,\r\n    ProductComponent,\r\n    ProductlistComponent,\r\n    ProductdetailsComponent,\r\n    ProductdetailslistComponent,\r\n    PatientComponent,\r\n    PatientlistComponent,\r\n    CompanyComponent,\r\n    CompanylistComponent,\r\n    InventoryComponent,\r\n    InventorylistComponent,\r\n    SupplierComponent,\r\n    SupplierlistComponent,\r\n    VehicletrackingComponent,\r\n    VehicletrackinglistComponent,\r\n    TransportationComponent,\r\n    TransportationlistComponent,\r\n    RouteComponent,\r\n    RoutelistComponent,\r\n    IssueComponent,\r\n    IssuelistComponent,\r\n    EmployeeComponent,\r\n    EmployeelistComponent,\r\n    JobComponent,\r\n    JoblistComponent,\r\n    CustomerComponent,\r\n    CustomerlistComponent,\r\n    TransactionsComponent,\r\n    TransactionslistComponent,\r\n    LoansComponent,\r\n    LoanslistComponent,\r\n    AtmsComponent,\r\n    AtmslistComponent,\r\n    ProjectComponent,\r\n    ProjectlistComponent,\r\n    OwnerComponent,\r\n    OwnerlistComponent,\r\n    FieldComponent,\r\n    FieldlistComponent\r\n\r\n\r\n\r\n\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: myHttpLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: AuthService, multi: true\r\n    },\r\n    HttpServiceService,\r\n    DataValidator,\r\n    CookieService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\n\r\nexport class AppModule {\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0bXMvYXRtcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add ATMs' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update ATMs' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Location' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"locationId\\\" [(ngModel)]=\\\"form.data.locationId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select location' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.locationList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.locationId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.locationId}}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Cash Available' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill-wave grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"cashAvailable\\\" [(ngModel)]=\\\"form.data.cashAvailable\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter cashAvailable' | translate }}\\\" (input)=\\\"validateCashAvailableInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.cashAvailable\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.cashAvailable }}</span>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Last Restocked Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"lastRestockedDate\\\" [value]=\\\"form.data.lastRestockedDate | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.lastRestockedDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.lastRestockedDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.lastRestockedDate\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/atmslist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-footer></app-footer>\"","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-atms',\r\n  templateUrl: './atms.component.html',\r\n  styleUrls: ['./atms.component.css']\r\n})\r\nexport class AtmsComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  input\r\n\r\n  constructor(public locator: ServiceLocatorService, private formBuilder: FormBuilder, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ATMS, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.locationId);\r\n    console.log(form.locationId);\r\n    flag = flag && validator.isNotNullObject(form.cashAvailable);\r\n    console.log(form.cashAvailable);\r\n    flag = flag && validator.isNotNullObject(form.lastRestockedDate);\r\n    console.log(form.lastRestockedDate);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.cashAvailable = data.cashAvailable;\r\n    form.lastRestockedDate = data.lastRestockedDate;\r\n    form.locationId = data.locationId;\r\n  }\r\n\r\n  validateCashAvailable(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Allow numbers, decimal point, and backspace\r\n    if (!(event.ctrlKey || event.altKey || event.metaKey) && (\r\n      (input >= '0' && input <= '9') || input === '.' || input === 'Backspace' || input === 'Delete'\r\n    )) {\r\n      // Allow input to proceed\r\n    } else {\r\n      // Prevent default action (usually a character is typed)\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // Method to handle input validation for Cash Available field\r\n  validateCashAvailableInput(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let value = inputElement.value;\r\n\r\n    // Remove non-numeric characters except decimal point\r\n    value = value.replace(/[^0-9.]/g, '');\r\n\r\n    // Remove extra decimal points\r\n    const parts = value.split('.');\r\n    if (parts.length > 2) {\r\n      value = parts[0] + '.' + parts.slice(1).join('');\r\n    }\r\n\r\n    // Limit the value to 1,000,000,000\r\n    const parsedValue = parseFloat(value);\r\n    if (!isNaN(parsedValue) && parsedValue > 1000000000) {\r\n      value = '1000000000';\r\n    }\r\n\r\n    // Update the input value\r\n    inputElement.value = value;\r\n\r\n    // Update the ngModel data\r\n    this.form.data.cashAvailable = value;\r\n  }\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0bXMvYXRtc2xpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    min-height: 100vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper full-height\\\">\\r\\n  <div class=\\\"container-fluid full-height\\\">\\r\\n    <div class=\\\"panel panel-primary full-height\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'ATMs List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lastRestockedDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search last Restocked Date' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.cashAvailable\\\"\\r\\n            (input)=\\\"validateCashInput($event)\\\" placeholder=\\\"{{ 'Search cash Available' | translate }}\\\">\\r\\n          <div *ngIf=\\\"form.inputerror.cashAvailable\\\" class=\\\"text-danger\\\">\\r\\n            {{ form.inputerror.cashAvailable }}\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"locationId\\\" [(ngModel)]=\\\"form.searchParams.locationId\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select locationId' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.locationList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-3 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/atms')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add ATMs' | translate\\r\\n            }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-3 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'Cash Available' }}</th>\\r\\n              <th>{{ 'Last Restocked Date' }}</th>\\r\\n              <th>{{ 'locationId' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.cashAvailable }}</td>\\r\\n              <td>{{ convertToLocalDate(m.lastRestockedDate) }}</td>\\r\\n              <td>{{ m.locationName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/atms/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/atmslist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-atmslist',\r\n  templateUrl: './atmslist.component.html',\r\n  styleUrls: ['./atmslist.component.css']\r\n})\r\nexport class AtmslistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {\r\n      cashAvailable: null\r\n    },\r\n    searchParams: {\r\n      cashAvailable: '',\r\n      lastRestockedDate: '',\r\n      locationId: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ATMS, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.lastRestockedDate = formattedDate;\r\n  }\r\n\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  validateCashInput(event: any) {\r\n    const value = event.target.value.trim();\r\n    const isValidNumber = /^[0-9]+(\\.[0-9]+)?$/.test(value);\r\n    const floatValue = parseFloat(value);\r\n\r\n    if (value === '') {\r\n      this.form.inputerror.cashAvailable = null; // Clear the error message\r\n    } else if (!isValidNumber || floatValue > 1000000000 || !value.includes('.')) {\r\n      this.form.inputerror.cashAvailable = 'Please type an exact cash available value (e.g., 90.9, 1000000.5)';\r\n    } else {\r\n      this.form.inputerror.cashAvailable = null;\r\n      this.form.searchParams.cashAvailable = floatValue.toString();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.form.pageNo = 0;\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.form.searchMessage = null;\r\n    super.search();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceService } from './http-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService implements HttpInterceptor {\r\n\r\n  constructor(private http: HttpServiceService) { }\r\n  \r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    if (localStorage.getItem('fname')) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n        \"withCredentials\" : \"true\",\r\n        \"name\" : \"Dipanshu\",\r\n          \r\n        \r\n        }\r\n      })\r\n    }\r\n        console.log(req.headers.get(\"Authorization\")+\"------------------->>>\")\r\n    return next.handle(req);\r\n\r\n  }\r\n\r\n}","import { OnInit, Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { ServiceLocatorService } from './service-locator.service';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from './base.component';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { element } from '@angular/core/src/render3';\r\n\r\nexport class BaseListCtl extends BaseCtl {  \r\n  \r\n    @ViewChildren(\"checkboxes\") checkboxes: QueryList<ElementRef>;\r\n  deleteRecordList: any = [];\r\n  isMasterSel:boolean = false ;\r\n  checkList=0;\r\n\r\n  constructor(public endpoint, public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(endpoint, locator, route);    \r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {   \r\n    this.preload();\r\n    this.search();\r\n    this.isMasterSel = false ;\r\n  }\r\n\r\n  display() {\r\n    this.search();\r\n  }\r\n\r\n  submit() {\r\n    this.form.pageNo=0;\r\n    if(this.form.searchParams.roleId==\"undefined\" || this.form.searchParams.id==\"undefined\"){\r\n    \r\n      this.form.searchParams={}\r\n      this.search();\r\n    }else{\r\n    this.search();\r\n    }\r\n  }\r\n  \r\n  delete(id) {\r\n    super.delete(id, function () {\r\n      this.search();\r\n    });\r\n  }\r\n\r\n\r\n  next() {\r\n    this.form.pageNo++;\r\n     this.display(); \r\n   \r\n   \r\n    this.isMasterSel = false ;  \r\n  //  this.searchOperation('previous');\r\n  }\r\n\r\nexit(){ \r\n   \r\n  location.reload();\r\n}\r\n  previous() {\r\n    if (this.form.pageNo > 0) {\r\n      this.form.pageNo--\r\n    //  this.display(); \r\n    this.isMasterSel = false ;\r\n    this.searchOperation('previous');    \r\n    }\r\n  }\r\n\r\n  \r\n\r\n  checkUncheckAll(event) {\r\n    const checked = event.target.checked;\r\n    this.checkboxes.forEach((element) => {     \r\n        element.nativeElement.checked = checked     \r\n    });   \r\n  }\r\n  checklistUpdate(){\r\n\r\n    this.isMasterSel=false;\r\n    this.checkList=0;\r\n    this.checkboxes.forEach((element) =>{\r\nif(element.nativeElement.checked==true){\r\n  this.checkList=this.checkList+1;\r\n}\r\n    });\r\n    if(this.checkList==this.form.list.length){\r\n      this.isMasterSel=true;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  \r\n//   deleteMany(){\r\n//   console.log('delete Many Records starts ');\r\n//   console.log('this.form.pageNo ' +this.form.pageNo);  \r\n//   var msg : String =''\r\n//   this.deleteRecordList.length=0;\r\n//   console.log('record deleting start ')\r\n//   var isRecordSelected:boolean = false ;\r\n \r\n//     this.checkboxes.forEach((element) => {\r\n//       if (element.nativeElement.checked) {\r\n//         // console.log('record deleting ' + element.nativeElement.id)\r\n//         this.deleteRecordList.push(element.nativeElement.id);\r\n//         isRecordSelected = true ;\r\n//       }\r\n//     });     \r\n  \r\n//     if(isRecordSelected){\r\n//       console.log('record(s) for delete ' + this.deleteRecordList)        \r\n//       this.serviceLocator.httpService.get(this.api.deleteMany + \"/\" + this.deleteRecordList + '?pageNo=' +this.form.pageNo, function (res) {\r\n//         if (res.success) {\r\n//             console.log('Inside response success ')\r\n//           //  this.deleteMany();\r\n//          //  this.form.message = \"Data is deleted\";\r\n//        //  msg =\"Data is deleted\";\r\n//         //  this.form.message = res.result.message;\r\n       \r\n//           console.log('deleteMany Calling Callback'); \r\n//           this.search();  \r\n//     } else {\r\n//       this.form.error = true;\r\n//       this.form.message = res.result.message;\r\n//     }\r\n//   });\r\n//   this.form.message = \"Data is deleted\" ;\r\n//   console.log('this.form.pageNo ' +this.form.pageNo);  \r\n  \r\n//     }else{\r\n//       this.form.message = \"Select Atleast One Record\";\r\n//         this.form.error = true;\r\n//     console.log('No record(s) for delete ')\r\n//   }\r\n//   console.log('delete Many Records ends ');\r\n// }\r\n\r\n\r\n\r\ndeleteMany(){\r\n  console.log('delete Many Records starts ');\r\n  console.log('this.form.pageNo ' +this.form.pageNo);  \r\n  this.form.error = false;\r\n  this.deleteRecordList.length=0;\r\n  console.log('record deleting start ')\r\n  var isRecordSelected:boolean = false ;\r\n \r\n    this.checkboxes.forEach((element) => {\r\n      if (element.nativeElement.checked) {\r\n        // console.log('record deleting ' + element.nativeElement.id)\r\n        this.deleteRecordList.push(element.nativeElement.id);\r\n        isRecordSelected = true ;\r\n      }\r\n    });     \r\n  \r\n    if(isRecordSelected){\r\n      console.log('record(s) for delete ' + this.deleteRecordList) ;       \r\n      super.deleteMany(this.deleteRecordList + '?pageNo=' +this.form.pageNo,function(){\r\n      //  this.search();  \r\n            \r\n      });  \r\n    }else{\r\n      this.form.message = \"Select Atleast One Record\";\r\n        this.form.error = true;\r\n    console.log('No record(s) for delete ')\r\n  }\r\n  this.isMasterSel = false ;  \r\n  console.log('delete Many Records ends ');\r\n}\r\n\r\n\r\ngenerateReport(){\r\n  \r\n}\r\n\r\n}\r\n\r\n","import { OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from './service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { formatNumber } from '@angular/common';\r\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\r\n\r\n\r\nexport class BaseCtl implements OnInit {\r\n\r\n  public api = {\r\n    endpoint: null,\r\n    get: null,\r\n    save: null,\r\n    search: null,\r\n    delete: null,\r\n    deleteMany: null,\r\n    preload: null,\r\n    report: null,\r\n    address: null\r\n  }\r\n\r\n  initApi(ep) {\r\n    this.api.endpoint = ep;\r\n    this.api.get = ep + \"/get\";\r\n    this.api.save = ep + \"/save\";\r\n    this.api.search = ep + \"/search\";\r\n    this.api.delete = ep + \"/delete\";\r\n    this.api.deleteMany = ep + \"/deleteMany\";\r\n    this.api.preload = ep + \"/preload\";\r\n    this.api.report = ep + \"/report\";\r\n    this.api.address = ep + \"/address\";\r\n\r\n    console.log(\"API\", this.api);\r\n  }\r\n\r\n  /**\r\n   * Form contains preload data, error/sucess message \r\n   */\r\n  public form: any = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n    pageNo: 0\r\n\r\n  };\r\n  nextList = 0;\r\n  /**\r\n   * Initialize services \r\n   * \r\n   * @param serviceLocator \r\n   * @param route \r\n   */\r\n  constructor(public endpoint, public serviceLocator: ServiceLocatorService, public route: ActivatedRoute) {\r\n\r\n    var _self = this;\r\n\r\n    _self.initApi(endpoint);\r\n\r\n    /**\r\n     * Get primary key from path variale\r\n     */\r\n    serviceLocator.getPathVariable(route, function (params) {\r\n      _self.form.data.id = params[\"id\"];\r\n      console.log('I GOT ID', _self.form.data.id);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n    this.preload();\r\n    if (this.form.data.id && this.form.data.id > 0) {\r\n      this.display();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loded preload data\r\n   */\r\n  preload() {\r\n    console.log(\"preload start\")\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.preload, function (res) {\r\n      console.log(\"base list preload\", _self.api.preload)\r\n      console.log('prelod======================', res.result)\r\n      if (res.success) {\r\n        _self.form.preload = res.result;\r\n      } else {\r\n        _self.form.error = true\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  /**\r\n   * Override by childs \r\n   * \r\n   * @param form \r\n   */\r\n  validateForm(form) {\r\n  }\r\n\r\n\r\n  /**\r\n   * Searhs records \r\n   */\r\n  search() {\r\n    console.log(\"search start\")\r\n    var _self = this;\r\n    console.log(\"Search Form\", _self.form.searchParams);\r\n    this.serviceLocator.httpService.post(_self.api.search + \"/\" + _self.form.pageNo, _self.form.searchParams, function (res) {\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.list = res.result.data;\r\n        _self.nextList = res.result.nextList;\r\n\r\n\r\n        if (_self.form.list.length == 0) {\r\n\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\", _self.form.list.length);\r\n      } else {\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  searchOperation(operation: String) {\r\n    console.log(\"previous/next search start\")\r\n    var _self = this;\r\n    console.log(\"Search Form\", _self.form.searchParams);\r\n    this.serviceLocator.httpService.post(_self.api.search + \"/\" + _self.form.pageNo, _self.form.searchParams, function (res) {\r\n\r\n      if (operation == 'next' || operation == 'previous') {\r\n        _self.nextList = res.result.nextList;\r\n        _self.form.message = null;\r\n        _self.form.error = false;\r\n      }\r\n\r\n      if (res.success) {\r\n        _self.form.list = res.result.data;\r\n        if (_self.form.list.length == 0) {\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\", _self.form.list.length);\r\n      } else {\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Contains display logic. It fetches data from database for the primary key \r\n   */\r\n  display() {\r\n\r\n    var _self = this;\r\n    console.log('Inside display method');\r\n    this.serviceLocator.httpService.get(_self.api.get + \"/\" + _self.form.data.id, function (res) {\r\n      _self.form.data.id = 0;\r\n      if (res.success) {\r\n        _self.populateForm(_self.form.data, res.result.data);\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Populate HTML form data\r\n   * Overridden by child classes.\r\n   * \r\n   * @param form \r\n   * @param data \r\n   */\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'formid in base ctl populate form');\r\n  }\r\n\r\n  /**\r\n   * Contains submit logic. It saves data\r\n   */\r\n\r\n\r\n  submit() {\r\n    var _self = this;\r\n\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(\"form data going to be submit\" + this.form.data);\r\n    //  console.log(\"form data going to be submit\" + this.studentId);\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        //  console.log(\"--------------------.\");\r\n        //return _self.form.data.id ;\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data.id;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  delete(id, callback?) {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.delete + \"/\" + id, function (res) {\r\n      if (res.success) {\r\n        _self.form.message = \"Data is deleted\";\r\n        if (callback) {\r\n          console.log('Response Success and now Calling Callback');\r\n          //  callback();  \r\n          this.search();\r\n        }\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteMany(id, callback?) {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.post(_self.api.deleteMany + \"/\" + id, this.form.data, function (res) {\r\n      if (res.success) {\r\n        _self.form.message = \"Data is deleted\";\r\n\r\n        if (callback) {\r\n          console.log('Response Success and now Calling Callback');\r\n          _self.form.list = res.result.data;\r\n          console.log(\"List ::  \", + res.data);\r\n          console.log(\"List Size\", _self.form.list.length);\r\n          //  callback();       \r\n        }\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  generateReport() {\r\n    var _self = this;\r\n    console.log('********* Generating Report ********************');\r\n    this.serviceLocator.httpService.get(_self.api.report, function (res) {\r\n\r\n      if (res.success) {\r\n        console.log('*********  Report Generated ********************');\r\n        alert('pass');\r\n\r\n      } else {\r\n        console.log('********* Error in Generating Report  ********************');\r\n        alert('fail');\r\n      }\r\n    });\r\n\r\n  }\r\n  /**\r\n   * Forward to page\r\n   * @param page \r\n   */\r\n\r\n  forward(page) {\r\n    console.log(page + '--->>page value');\r\n    this.serviceLocator.forward(page);\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%;\\r\\nbackground: url(assets/files/211.jpg) no-repeat center center;\\r\\n background-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n       <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'College List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div> \\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{'Search Name' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select name' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/college')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add College' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n     \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Name' | translate }}</th>\\r\\n                <th>{{'Address' | translate }}</th>\\r\\n                <th>{{'Phone' | translate }}</th>\\r\\n                <th>{{'City' | translate }}</th>\\r\\n                <th>{{'State' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.address }} </td>\\r\\n                <td> {{ m.phoneNo }} </td>\\r\\n                <td> {{ m.city }} </td>\\r\\n                <td> {{ m.state }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/college/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n            </table>\\r\\n              <table style=\\\"width: 100%;\\\">\\r\\n                <tr>\\r\\n                  <td style=\\\"width: 50%;\\\">\\r\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                }} </button></td>\\r\\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/collegelist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n    \\r\\n    \\r\\n            \\r\\n                <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                  translate }}</button></td>\\r\\n                </tr>\\r\\n                </table>\\r\\n    \\r\\n            \\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-college-list',\r\n  templateUrl: './college-list.component.html',\r\n  styleUrls: ['./college.component.css']\r\n})\r\nexport class CollegeListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.COLLEGE, locator, route);\r\n  }\r\n\r\n}","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add College' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update College' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.name}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Address' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"addr\\\" [(ngModel)]=\\\"form.data.address\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Address' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.address}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'City' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-location-arrow grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"form.data.city\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter City' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.city}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'State' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-address-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"state\\\" [(ngModel)]=\\\"form.data.state\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter State' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Phone No.' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phnNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Phone No.' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/collegelist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-college',\r\n  templateUrl: './college.component.html',\r\n  styleUrls: ['./college.component.css']\r\n})\r\nexport class CollegeComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.COLLEGE, locator, route);\r\n  }\r\n\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.address = data.address;\r\n    form.state = data.state;\r\n    form.city = data.city;\r\n    form.phoneNo = data.phoneNo;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvY29tcGFueS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Company' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Company' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Experience(In Years)' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"experienceId\\\" [(ngModel)]=\\\"form.data.experienceId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Experience' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.experienceList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.experienceId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.experienceId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Mobile' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Mobile' | translate }}\\\" maxlength=\\\"10\\\" (keypress)=\\\"validatePhone($event)\\\">\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.mobile\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.mobile}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Date of Joining' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dateOfJoining\\\" [value]=\\\"form.data.dateOfJoining | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dateOfJoining=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.dateOfJoining\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfJoining\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Email' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter email' | translate }}\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.email\\\" class=\\\"alertRedColor\\\">{{form.inputerror.email}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/companylist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.css']\r\n})\r\nexport class CompanyComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.COMPANY, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.experienceId);\r\n    console.log(form.experienceId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.mobile);\r\n    console.log(form.mobile);\r\n    flag = flag && validator.isNotNullObject(form.dateOfJoining);\r\n    console.log(form.dateOfJoining);\r\n    flag = flag && validator.isNotNullObject(form.email);\r\n    console.log(form.email);\r\n\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.mobile = data.mobile;\r\n    form.dateOfJoining = data.dateOfJoining;\r\n    form.experienceId = data.experienceId;\r\n    form.email = data.email;\r\n    \r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    if (!/^[a-zA-Z]+$/.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvY29tcGFueWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Company List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\r\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\r\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfJoining\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfJoining' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"experience\\\" [(ngModel)]=\\\"form.searchParams.experienceId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select Experience' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.experienceList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/company')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Company' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'name' }}</th>\\r\\n              <th>{{ 'mobile' }}</th>\\r\\n              <th>{{ 'dateOfJoining' }}</th>\\r\\n              <th>{{ 'experience' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.mobile }}</td>\\r\\n              <td>{{ convertToLocalDate(m.dateOfVisit) }}</td>\\r\\n              <td>{{ m.experienceName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/company/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/companylist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n            translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-companylist',\r\n  templateUrl: './companylist.component.html',\r\n  styleUrls: ['./companylist.component.css']\r\n})\r\nexport class CompanylistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      experienceList: [] // Initialize customer list\r\n    },\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n\r\n      name: '',\r\n      mobile: '',\r\n      date: '', // Initialize date field\r\n      dateOfJoining: '',\r\n      experienceId: null,\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.COMPANY, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name and mobile fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\"\\r\\n style=\\\"padding-top: 3%;\\r\\npadding-bottom: 15%;\\r\\nbackground: url(assets/files/wav1.jpg) no-repeat center center;\\r\\n background-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\nheight:90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Course List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select CourseName' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.duration\\\"\\r\\n            placeholder=\\\"{{'Search Duration' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/course')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Course' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Name' | translate }}</th>\\r\\n                <th>{{'Duration' | translate }}</th>\\r\\n                <th>{{'Description' | translate }}</th>\\r\\n                <th>{{'Edit' | translate }}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.courseName}} </td>\\r\\n                <td> {{ m.duration }} </td>\\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/course/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n              \\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/courselist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-course-list',\r\n  templateUrl: './course-list.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.COURSE, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvdXJzZS9jb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:15%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Course' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Course' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.data.courseName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Course Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.courseName}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Duration' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\" >\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n            \\r\\n                <select class=\\\"form-control\\\" name=\\\"duration\\\"\\r\\n                  [(ngModel)]=\\\"form.data.duration\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n                  <option [value]=\\\"1\\\">1 Year</option>\\r\\n                  <option [value]=\\\"2\\\">2 Year</option>\\r\\n                  <option [value]=\\\"3\\\">3 Year</option>\\r\\n                  <option [value]=\\\"4\\\">4 Year</option>\\r\\n                  <option [value]=\\\"5\\\">5 Year</option>\\r\\n\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.duration}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea class=\\\"form-control\\\" placeholder=\\\"{{'Enter Description' | translate }}\\\" name=\\\"description\\\"\\r\\n                  [(ngModel)]=\\\"form.data.description\\\"></textarea>\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/courselist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List\\r\\n                ' | translate }}              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseComponent extends BaseCtl {\r\n\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.COURSE, locator, route);\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n \r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.courseName);\r\n    flag = flag && validator.isNotNullObject(form.duration);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.courseName = data.courseName;\r\n    form.duration = data.duration;\r\n    form.description = data.description;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Customer' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Customer' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Gender' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"genderId\\\" [(ngModel)]=\\\"form.data.genderId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select gender' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.genderList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.genderId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.genderId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keydown)=\\\"validateNameInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Phone Number' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"form.data.phoneNumber\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter phoneNumber' | translate }}\\\" maxlength=\\\"10\\\" (keypress)=\\\"validatePhone($event)\\\">\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.phoneNumber\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.phoneNumber}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Date of Birth' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dateOfBirth\\\" [value]=\\\"form.data.dateOfBirth | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dateOfBirth=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.dateOfBirth\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfBirth\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/customerlist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.CUSTOMER, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.genderId);\r\n    console.log(form.genderId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.phoneNumber);\r\n    console.log(form.phoneNumber);\r\n    flag = flag && validator.isNotNullObject(form.dateOfBirth);\r\n    console.log(form.dateOfBirth);\r\n\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.phoneNumber = data.phoneNumber;\r\n    form.dateOfBirth = data.dateOfBirth;\r\n    form.genderId = data.genderId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    if (!/^[a-zA-Z]+$/.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateNameInput(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Allow alphanumeric characters and space, prevent all others\r\n    if (!/^[a-zA-Z\\s]*$/.test(input) && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Customer List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNumber\\\"\\r\\n            placeholder=\\\"{{ 'Search phoneNumber' | translate }}\\\" (input)=\\\"validateInput($event, 'phoneNumber')\\\">\\r\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfBirth\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfBirth' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"genderId\\\" [(ngModel)]=\\\"form.searchParams.genderId\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select gender' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.genderList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/customer')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add customer' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'name' }}</th>\\r\\n              <th>{{ 'Phone Number' }}</th>\\r\\n              <th>{{ 'Date Of Birth' }}</th>\\r\\n              <th>{{ 'gender' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.phoneNumber }}</td>\\r\\n              <td>{{ convertToLocalDate(m.dateOfBirth) }}</td>\\r\\n              <td>{{ m.genderName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/customer/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/customerlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n            translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-customerlist',\r\n  templateUrl: './customerlist.component.html',\r\n  styleUrls: ['./customerlist.component.css']\r\n})\r\nexport class CustomerlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      customerList: [] // Initialize customer list\r\n    },\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n      name: '',\r\n      phoneNumber: '',\r\n      date: '', // Initialize date field\r\n      dateOfJoining: '',\r\n      customerId: null,\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.CUSTOMER, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name and mobile fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'phoneNumber') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type a 10 digit number';\r\n      } else if (value.length > 10) {\r\n        this.isValidMobileInput = false;\r\n        this.mobileErrorMessage = 'Phone number cannot exceed 10 digits';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Invalid name input: numbers are not allowed';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <app-navbar></app-navbar>\\r\\n<div>\\r\\n    <p class=\\\"text-info font-weight-bold\\\" style=\\\"padding-left: 30%; font-size: 70px;\\\">WELCOME TO ORS</p>\\r\\n    <div style=\\\"background-image: url(../../assets/files/IndexView.png); \\r\\n        -webkit-background-size: cover;\\r\\n        -moz-background-size: cover;\\r\\n        -o-background-size: cover;\\r\\n        background-size: 100%;\\r\\n        padding-bottom:18%;\\r\\n        padding-top: 5%;\\r\\n        \\\">\\r\\n        <p class=\\\"text-white font-weight-bold\\\" style=\\\"padding-top: 10%; padding-left: 25%; font-size: 20px;\\\">.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<app-footer></app-footer> -->\\r\\n\\r\\n\\r\\n<style>\\r\\n  body{\\r\\n  \\r\\n  background-image: url('<%=ORSView.APP_CONTEXT%>/img/201.webp');\\r\\n      background-size: 100%;\\r\\n  \\r\\n  \\r\\n  }\\r\\n  .cl{\\r\\n    font-family: Lucida Calligraphy; \\r\\n  \\r\\n   /*  font-family: Monotype Corsiva;\\r\\n    \\r\\n   font-family: Footlight MT Light; */\\r\\n    }\\r\\n  </style>\\r\\n<app-navbar></app-navbar>\\r\\n\\r\\n<div>  \\r\\n  <!-- <div class=\\\"img-fluid\\\" style=\\\"background-image: url(../../assets/files/welcomeView2.png); \\r\\n      -webkit-background-size: cover;\\r\\n      -moz-background-size: cover;\\r\\n      -o-background-size: cover;\\r\\n      background-size: 100%;\\r\\n      padding-bottom:18%;\\r\\n      padding-top: 5%;\\r\\n      \\\">\\r\\n      <p class=\\\"text-white font-weight-bold\\\" style=\\\"padding-top: 10%; padding-left: 25%; font-size: 20px;\\\">.</p>\\r\\n  </div> -->\\r\\n\\r\\n  <div class=\\\"row \\\" style=\\\"padding-bottom: 14%;\\r\\n   background: url(assets/files/1026.jpg) no-repeat center center;\\r\\n   \\r\\n  background-attachment: fixed;\\r\\n  background-size: cover; width:cover;\\r\\n    height: 120vh;\\\">\\r\\n    <p class=\\\"text-cs1 font-family ml-4 font-weight-bold\\\" style=\\\"padding-top: 1%; \\r\\n    padding-left: 36%;font-size: 45px; color: rgb(4, 204, 226);\\\">{{'WELCOME TO ORS' | translate}}</p></div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Employee' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Employee' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Department' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"departmentId\\\" [(ngModel)]=\\\"form.data.departmentId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select department' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.departmentList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.departmentId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.departmentId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\" maxlength=\\\"30\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Last Employer Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastEmployerName\\\" [(ngModel)]=\\\"form.data.lastEmployerName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter last Employer Name' | translate }}\\\" maxlength=\\\"30\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.lastEmployerName\\\" class=\\\"alertRedColor\\\">{{form.inputerror.lastEmployerName}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Date Of Joining' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dateOfJoining\\\" [value]=\\\"form.data.dateOfJoining | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dateOfJoining=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.dateOfJoining\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfJoining\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/employeelist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\nexport class EmployeeComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.EMPLOYEE, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.departmentId);\r\n    console.log(form.departmentId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.lastEmployerName);\r\n    console.log(form.lastEmployerName);\r\n    flag = flag && validator.isNotNullObject(form.dateOfJoining);\r\n    console.log(form.dateOfJoining);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.lastEmployerName = data.lastEmployerName;\r\n    form.dateOfJoining = data.dateOfJoining;\r\n    form.departmentId = data.departmentId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  validateAlphabetInput(event: KeyboardEvent) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Employee List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n        <!--  <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\r\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\r\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfJoining\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfJoining' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lastEmployerName\\\"\\r\\n            placeholder=\\\"{{ 'Search lastEmployerName' | translate }}\\\"  maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'lastEmployerName')\\\">\\r\\n            <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ employerErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"departmentId\\\" [(ngModel)]=\\\"form.searchParams.departmentId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select department' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.departmentList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/employee')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Employee' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'name' }}</th>\\r\\n              <th>{{ 'last employer name' }}</th>\\r\\n              <th>{{ 'date of joining' }}</th>\\r\\n              <th>{{ 'department' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.lastEmployerName }}</td>\\r\\n              <td>{{ convertToLocalDate(m.dateOfJoining) }}</td>\\r\\n              <td>{{ m.departmentName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/inventory/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/employeelist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n            translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-employeelist',\r\n  templateUrl: './employeelist.component.html',\r\n  styleUrls: ['./employeelist.component.css']\r\n})\r\nexport class EmployeelistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      departmentList: [] // Initialize customer list\r\n    },\r\n    data: { id: null },\r\n    inputerror: { quantity: '', productName: '' },\r\n    searchParams: {\r\n      name: '',\r\n      date: '', // Initialize date field\r\n      departmentId: null, // Initialize customerId to null\r\n      lastEmployerName: '',\r\n     dateOfJoining: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  employerErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.EMPLOYEE, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name and mobile fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    }else if (field === 'lastEmployerName') {\r\n        this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n        if (!this.isValidNameInput) {\r\n          this.employerErrorMessage = 'Please type alphabets only';\r\n        } else {\r\n          this.employerErrorMessage = '';\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class EndpointServiceService {\r\n\r\n  constructor() { }\r\n\r\n  public SERVER_URL = \"http://localhost:8084\";\r\n  public MESSAGE = this.SERVER_URL + \"/Message\";\r\n  public USER = this.SERVER_URL + \"/User\";\r\n  public OWNER = this.SERVER_URL + \"/Owner\";\r\n  public FIELD = this.SERVER_URL + \"/Field\";\r\n  public SHOPPING = this.SERVER_URL + \"/Shopping\";\r\n  public PAYMENT = this.SERVER_URL + \"/Payment\";\r\n  public CLIENT = this.SERVER_URL + \"/Client\";\r\n  public ATMS = this.SERVER_URL + \"/ATMs\";\r\n  public CUSTOMER = this.SERVER_URL + \"/Customer\";\r\n  public TRANSACTIONS = this.SERVER_URL + \"/Transactions\";\r\n  public ROUTE = this.SERVER_URL + \"/Route\";\r\n  public LOANS = this.SERVER_URL + \"/Loans\";\r\n  public PROJECT = this.SERVER_URL + \"/Project\";\r\n  public JOB = this.SERVER_URL + \"/Job\";\r\n  public ISSUE = this.SERVER_URL + \"/Issue\";\r\n  public PRIORITY = this.SERVER_URL + \"/Priority\";\r\n  public EMPLOYEE = this.SERVER_URL + \"/Employee\";\r\n  public TRANSPORTATION = this.SERVER_URL + \"/Transportation\";\r\n  public COMPANY = this.SERVER_URL + \"/Company\";\r\n  public ROLE = this.SERVER_URL + \"/Role\";\r\n  public ORDER = this.SERVER_URL + \"/Order\";\r\n  public SUPPLIER = this.SERVER_URL + \"/Supplier\";\r\n  public INVENTORY = this.SERVER_URL + \"/Inventory\";\r\n  public VEHICLETRACKING = this.SERVER_URL + \"/VehicleTracking\";\r\n  public PRODUCTDETAILS = this.SERVER_URL + \"/ProductDetails\";\r\n  public PRODUCT = this.SERVER_URL + \"/Product\";\r\n  public PATIENT = this.SERVER_URL + \"/Patient\";\r\n  public COLLEGE = this.SERVER_URL + \"/College\";\r\n  public MARKSHEET = this.SERVER_URL + \"/Marksheet\";\r\n  public STUDENT = this.SERVER_URL + \"/Student\";\r\n  public SUBJECT = this.SERVER_URL + \"/Subject\";\r\n  public FACULTY = this.SERVER_URL + \"/Faculty\";\r\n  public COURSE = this.SERVER_URL + \"/Course\";\r\n  public TIMETABLE = this.SERVER_URL + \"/TimeTable\";\r\n  public JASPERREPORT = this.SERVER_URL + \"/Jasper\";\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Faculty List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\r\\n            placeholder=\\\"{{'Search College' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n\\r\\n        \\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/faculty')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Faculty' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate}}</th>\\r\\n                <th>{{'Name' | translate}}</th>\\r\\n                <th>{{'DOB' | translate}}</th>\\r\\n                <th>{{'Gender' | translate}}</th>\\r\\n                <th>{{'College' | translate}}</th>\\r\\n                <th>{{'Course' | translate}}</th>\\r\\n                <th>{{'Subject' | translate}}</th>\\r\\n                <th>{{'Mobile' | translate}}</th>\\r\\n                <th>{{'Email' | translate}}</th>\\r\\n                <th>{{'Qualification' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td>{{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td>{{ m.firstName }} {{m.lastName}} </td>\\r\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>{{ m.gender }} </td>\\r\\n                <td>{{m.collegeName}}</td>\\r\\n                <td>{{m.courseName}}</td>\\r\\n                <td>{{m.subjectName}}</td>\\r\\n                <td>{{ m.phoneNo}}</td>\\r\\n                <td>{{m.email}}</td>\\r\\n                <td>{{m.qualification}}</td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/faculty/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash  text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/facultylist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-faculty-list',\r\n  templateUrl: './faculty-list.component.html',\r\n  styleUrls: ['./faculty.component.css']\r\n})\r\nexport class FacultyListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.FACULTY, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhY3VsdHkvZmFjdWx0eS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Faculty'\\r\\n            | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update\\r\\n            Faculty' | translate}}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate}} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Qualification' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"qualification\\\" [(ngModel)]=\\\"form.data.qualification\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Your Qualification' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile No' | translate}} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                  required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/facultylist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' |\\r\\n                translate}}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-faculty',\r\n  templateUrl: './faculty.component.html',\r\n  styleUrls: ['./faculty.component.css']\r\n})\r\nexport class FacultyComponent extends BaseCtl {\r\n\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.FACULTY, locator, route);\r\n  }\r\n\r\n  \r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    console.log(form.firstName)\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    console.log(form.lastName)\r\n    flag = flag && validator.isNotNullObject(form.email);\r\n    console.log(form.email)\r\n    flag = flag && validator.isNotNullObject(form.qualification);\r\n    console.log(form.qualification)\r\n    flag = flag && validator.isNotNullObject(form.gender);\r\n    console.log(form.gender)\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    console.log(form.phoneNo+\"in validateForm----------------------------\");\r\n    \r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    console.log(form.courseId)\r\n    flag = flag && validator.isNotNullObject(form.collegeId);\r\n    console.log(form.collegeId)\r\n    flag = flag && validator.isNotNullObject(form.subjectId);\r\n    console.log(form.subjectId)\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.subjectId = data.subjectId;\r\n    console.log(form.subjectId+'subject--');\r\n    form.collegeId = data.collegeId;\r\n    form.courseId = data.courseId;\r\n    console.log(form.courseId+'course ----');\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.email = data.email;\r\n    form.qualification = data.qualification;\r\n    form.gender = data.gender;\r\n    form.dob = data.dob;\r\n    form.phoneNo = data.phoneNo;\r\n    console.log(\"phoneno----------------\"+form.phoneNo);\r\n    \r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpZWxkL2ZpZWxkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n\\r\\n  .container-fluid {\\r\\n    padding: 2% 0;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Field' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Field' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Type' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"typeId\\\" [(ngModel)]=\\\"form.data.typeId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Type' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.typeList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.typeId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.typeId }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Label' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-heading\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"labell\\\" [(ngModel)]=\\\"form.data.labell\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter label' | translate }}\\\" maxlength=\\\"30\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.labell\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.labell }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-align-left grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control textarea-height\\\"\\r\\n                  placeholder=\\\"{{ 'Enter description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.description }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Active' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"active\\\" id=\\\"active\\\" [(ngModel)]=\\\"form.data.active\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n                  <option value=\\\"Yes\\\">{{'Yes' | translate }} </option>\\r\\n                  <option value=\\\"No\\\">{{'No' | translate }} </option>                \\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.active\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.active }}</span>\\r\\n            </div>      \\r\\n\\r\\n            \\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/fieldlist']\\\">{{ 'List' | translate }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-field',\r\n  templateUrl: './field.component.html',\r\n  styleUrls: ['./field.component.css']\r\n})\r\nexport class FieldComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.FIELD, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Paras----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n  validatePaymentTerm() {\r\n    const paymentTerm = this.form.data.paymentTerm;\r\n    const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\r\n    if (!paymentTermPattern.test(paymentTerm)) {\r\n      this.form.inputerror.paymentTerm = 'Invalid payment term';\r\n    } else {\r\n      delete this.form.inputerror.paymentTerm;\r\n    }\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.typeId);\r\n    console.log(form.typeId);\r\n    flag = flag && validator.isNotNullObject(form.labell);\r\n    console.log(form.labell);\r\n    flag = flag && validator.isNotNullObject(form.active);\r\n    console.log(form.active);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    console.log(form.description);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.labell = data.labell;\r\n    form.description = data.description;\r\n    form.typeId = data.typeId;\r\n    form.active = data.active;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpZWxkL2ZpZWxkbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    min-height: 100vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .btn-block {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .alert-dismissible .close {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 1.25rem 1.5rem;\\r\\n    color: inherit;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Field List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.labell\\\"\\r\\n            placeholder=\\\"{{ 'Search label' | translate }}\\\" (input)=\\\"validateInput($event, 'labell')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"active\\\" id=\\\"active\\\" [(ngModel)]=\\\"form.searchParams.active\\\"\\r\\n            style=\\\"cursor: pointer;\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n            <option value=\\\"Yes\\\">{{'Yes' | translate }} </option>\\r\\n            <option value=\\\"No\\\">{{'No' | translate }} </option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"typeId\\\" [(ngModel)]=\\\"form.searchParams.typeId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select Type' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.typeList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/field')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Field' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'label' }}</th>\\r\\n              <th>{{ 'description' }}</th>\\r\\n              <th>{{ 'type' }}</th>\\r\\n              <th>{{ 'active' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.labell }}</td>\\r\\n              <td>{{ m.description }}</td>\\r\\n              <td>{{ m.typeName }}</td>\\r\\n              <td>{{ m.active }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/field/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/fieldlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n            translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fieldlist',\r\n  templateUrl: './fieldlist.component.html',\r\n  styleUrls: ['./fieldlist.component.css']\r\n})\r\nexport class FieldlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      typeList: [] // Initialize customer list\r\n    },\r\n    data: { id: null },\r\n    inputerror: { quantity: '', productName: '' },\r\n    searchParams: {\r\n      typeId: null, // Initialize customerId to null\r\n     \r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  isValidAllowedSpeed: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  allowedSpeedErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.FIELD, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  // formatDate(event: any) {\r\n  //   const selectedDate = new Date(event);\r\n  //   const formattedDate = selectedDate.toISOString().split('T')[0];\r\n  //   this.form.searchParams.date = formattedDate;\r\n  // }\r\n\r\n  // Convert date to local format for display\r\n  // convertToLocalDate(dateString: string): string {\r\n  //   const date = new Date(dateString);\r\n  //   const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n  //   return date.toLocaleDateString(undefined, options);\r\n  // }\r\n\r\n  // Validate input for name, mobile, and allowedSpeed fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    } else if (field === 'allowedSpeed') {\r\n      if (value === '') {\r\n        this.isValidAllowedSpeed = true; // Treat empty input as valid\r\n        this.allowedSpeedErrorMessage = '';\r\n      } else {\r\n        const speed = parseInt(value, 10);\r\n        this.isValidAllowedSpeed = speed >= 70 && speed <= 150; // Check if the input is between 70 and 150\r\n        if (!this.isValidAllowedSpeed) {\r\n          this.allowedSpeedErrorMessage = 'Please type a valid allowed speed (70-150)';\r\n        } else {\r\n          this.allowedSpeedErrorMessage = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n        <h1 class=\\\"text-primary pt-4\\\">Upload Image Test Page</h1>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container row pl-4\\\">\\r\\n <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n\\r\\n        <input type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onUpload()\\\" value=\\\"upload\\\">\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<!--   \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n  \\r\\n          <div *ngIf=message>{{message}}</div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-6\\\">\\r\\n\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"image name\\\" [(ngModel)]=\\\"imageName\\\"\\r\\n  \\r\\n              name=\\\"name\\\" />\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"col-md-6\\\">\\r\\n  \\r\\n          <input type=\\\"button\\\" (click)=\\\"getImage()\\\" value=\\\"Get Image\\\">\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n            <div *ngIf=retrievedImage>\\r\\n  \\r\\n              <img [src]=\\\"retrievedImage\\\">\\r\\n  \\r\\n          </div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-file',\r\n  templateUrl: './file.component.html',\r\n  styleUrls: ['./file.component.css']\r\n})\r\n\r\n  export class FileComponent implements OnInit {\r\n\r\n    ngOnInit() {}\r\n\r\n  \r\n    fileToUpload: File = null;\r\n    constructor(private formBuilder: FormBuilder, private httpClient: HttpClient) { }\r\n\r\n    handleFileInput(files: FileList) {\r\n      this.fileToUpload = files.item(0);\r\n      console.log(this.fileToUpload);\r\n  }\r\n\r\n  onUpload() {\r\n    this.onSubmit(this.fileToUpload).subscribe(data => {\r\n      console.log(this.fileToUpload);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    \r\n  }\r\n    \r\n    \r\n    onSubmit(fileToUpload: File) {\r\n      const formData = new FormData();\r\n\r\n      formData.append('file', fileToUpload);\r\n      return this.httpClient.post(\"http://localhost:8080/User/profilePic/1\", formData,);\r\n    }\r\n\r\n}\r\n","module.exports = \"footer{\\r\\n    position: fixed;\\r\\n    \\r\\n    bottom: 0px;\\r\\n    height: 40px;\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTs7SUFFZixXQUFXO0lBQ1gsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvb3RlcntcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIFxyXG4gICAgYm90dG9tOiAwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<footer class=\\\"text-center \\\"\\r\\n style=\\\"background: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\\">\\r\\n  <!-- Copyright -->\\r\\n  <div class=\\\"text-center pt-2 pb-2 text-light\\\" >\\r\\n    &copy; {{'COPYRIGHT' | translate}}\\r\\n    <a class=\\\"text-light\\\" href=\\\"\\\">{{'NCS PVT. LTD' | translate}}</a>\\r\\n  </div>\\r\\n  <!-- Copyright -->\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router } from '@angular/router'\r\n\r\n\r\n@Injectable()\r\n\r\nexport class HttpServiceService {\r\n\r\n\r\n\r\n  form = {\r\n    message: '',\r\n    error: false\r\n  };\r\n\r\n\r\n  userparams = {\r\n    url: '',\r\n    sessionExpiredMsg: '',\r\n    methodType: '',\r\n  };\r\n\r\n\r\n  constructor(private router: Router, private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n\r\n  get(endpoint, callback) {\r\n    var self = this;\r\n    return this.httpClient.get(endpoint, { withCredentials: true }).subscribe((data) => {\r\n      console.log('Data :: ' + data);\r\n      callback(data);\r\n\r\n    }, error => {\r\n      console.log('ORS Error--', error);\r\n      if (error.status === 401) {\r\n        localStorage.clear();\r\n       self.userparams.url = this.router.url;\r\n        this.router.navigate(['/login'], {\r\n          queryParams: { errorMessage: error.error.error },\r\n        })\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  post(endpoint, bean, callback) {\r\n    var self = this;\r\n    return this.httpClient.post(endpoint, bean, { withCredentials: true }).subscribe((data) => {\r\n      console.log(data);\r\n      callback(data);\r\n\r\n    }, error => {\r\n      console.log('ORS Error--', error);\r\n      if (error.status === 401) {\r\n        localStorage.clear();\r\n        this.router.navigate(['/login'], {\r\n          queryParams: { errorMessage: error.error.error },\r\n        })\r\n      }\r\n    }); ``\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Inventory' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Inventory' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Product' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"productId\\\" [(ngModel)]=\\\"form.data.productId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select product' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.productList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.productId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.productId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Supplier Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"supplierName\\\" [(ngModel)]=\\\"form.data.supplierName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter supplierName' | translate }}\\\" \\r\\n                  (keypress)=\\\"validateAlphabetInput($event)\\\" maxlength=\\\"30\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.supplierName\\\" class=\\\"alertRedColor\\\">{{form.inputerror.supplierName}}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Quantity' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\"\\r\\n                       placeholder=\\\"{{ 'Enter quantity' | translate }}\\\" (keypress)=\\\"validateNumericInput($event)\\\" maxlength=\\\"4\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.quantity\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.quantity}}</span>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Last Updated Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"lastUpdatedDate\\\" [value]=\\\"form.data.lastUpdatedDate | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.lastUpdatedDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.lastUpdatedDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.lastUpdatedDate\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/inventorylist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.css']\r\n})\r\nexport class InventoryComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.INVENTORY, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.productId);\r\n    console.log(form.productId);\r\n    flag = flag && validator.isNotNullObject(form.supplierName);\r\n    console.log(form.supplierName);\r\n    flag = flag && validator.isNotNullObject(form.quantity);\r\n    console.log(form.quantity);\r\n    flag = flag && validator.isNotNullObject(form.lastUpdatedDate);\r\n    console.log(form.lastUpdatedDate);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.supplierName = data.supplierName;\r\n    form.quantity = data.quantity;\r\n    form.lastUpdatedDate = data.lastUpdatedDate;\r\n    form.productId = data.productId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n  validateNumericInput(event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n  \r\n    // Regular expression to test if the character is a number\r\n    const numberRegex = /^[0-9]+$/;\r\n  \r\n    // Test if the input matches the allowed characters and if the current input length is less than 4\r\n    if (!numberRegex.test(charStr) || inputElement.value.length >= 4) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnlsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Inevntory List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.supplierName\\\"\\r\\n            placeholder=\\\"{{ 'Search supplier Name' | translate }}\\\" maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n        <!--  <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\r\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\r\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lastUpdatedDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search lastUpdatedDate' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" \\r\\n                 class=\\\"form-control\\\" \\r\\n                 [(ngModel)]=\\\"form.searchParams.quantity\\\" \\r\\n                 placeholder=\\\"{{ 'Search quantity' | translate }}\\\" \\r\\n                 maxlength=\\\"4\\\" \\r\\n                 pattern=\\\"\\\\d{0,4}\\\" \\r\\n                 #quantityInput=\\\"ngModel\\\"\\r\\n                 (ngModelChange)=\\\"validateQuantity($event)\\\">\\r\\n          <div *ngIf=\\\"quantityInput.invalid && (quantityInput.dirty || quantityInput.touched)\\\" class=\\\"error-message\\\">\\r\\n            <div *ngIf=\\\"quantityInput.errors.pattern\\\">Please enter a valid quantity (up to 4 digits).</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"productId\\\" [(ngModel)]=\\\"form.searchParams.productId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select Product' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.productList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/inventory')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Inventory' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'supplier name' }}</th>\\r\\n              <th>{{ 'quantity' }}</th>\\r\\n              <th>{{ 'last updated date' }}</th>\\r\\n              <th>{{ 'product' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.supplierName }}</td>\\r\\n              <td>{{ m.quantity }}</td>\\r\\n              <td>{{ convertToLocalDate(m.lastUpdatedDate) }}</td>\\r\\n              <td>{{ m.productName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/inventory/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/inventorylist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n            translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-inventorylist',\r\n  templateUrl: './inventorylist.component.html',\r\n  styleUrls: ['./inventorylist.component.css']\r\n})\r\nexport class InventorylistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      productList: [] // Initialize customer list\r\n    },\r\n    data: { id: null },\r\n    inputerror: { quantity: '', productName: '' },\r\n    searchParams: {\r\n      quantity: '',\r\n      date: '', // Initialize date field\r\n      productId: null, // Initialize customerId to null\r\n      supplierName: '',\r\n      lastUpdateDate: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.INVENTORY, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name and mobile fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n    // Validate quantity input\r\n    validateQuantity(event: any) {\r\n      const value = event;\r\n      if (!/^\\d{0,4}$/.test(value)) {\r\n        this.form.searchParams.quantity = value.slice(0, 4).replace(/\\D/g, ''); // Allow only digits and limit to 4 characters\r\n      }\r\n    }\r\n  \r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lzc3VlL2lzc3VlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n\\r\\n  .container-fluid {\\r\\n    padding: 2% 0;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Issue' | translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Issue' | translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'StatusId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.data.statusId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select status' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.statusList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.statusId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.statusId }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Title' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-heading\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"form.data.title\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter title' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\" maxlength=\\\"30\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.title\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.title }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-home grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <textarea name=\\\"address\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control textarea-height\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Description' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\" maxlength=\\\"100\\\"></textarea>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Assign To' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"assignTo\\\" id=\\\"assignTo\\\" [(ngModel)]=\\\"form.data.assignTo\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate }} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate }} </option>\\r\\n                  <option value=\\\"Others\\\">{{'Others' | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.assignTo\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.assignTo }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Open Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"openDate\\\" [value]=\\\"form.data.openDate | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.openDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.openDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.openDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/issuelist']\\\">{{ 'List' | translate }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-issue',\r\n  templateUrl: './issue.component.html',\r\n  styleUrls: ['./issue.component.css']\r\n})\r\nexport class IssueComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ISSUE, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n  validatePaymentTerm() {\r\n    const paymentTerm = this.form.data.paymentTerm;\r\n    const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\r\n    if (!paymentTermPattern.test(paymentTerm)) {\r\n      this.form.inputerror.paymentTerm = 'Invalid payment term';\r\n    } else {\r\n      delete this.form.inputerror.paymentTerm;\r\n    }\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.statusId);\r\n    console.log(form.statusId);\r\n    flag = flag && validator.isNotNullObject(form.title);\r\n    console.log(form.title);\r\n    flag = flag && validator.isNotNullObject(form.assignTo);\r\n    console.log(form.assignTo);\r\n    flag = flag && validator.isNotNullObject(form.openDate);\r\n    console.log(form.openDate);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    console.log(form.description);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.title = data.title;\r\n    form.description = data.description;\r\n    form.openDate = data.openDate;\r\n    form.statusId = data.statusId;\r\n    form.assignTo = data.assignTo;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateAlphabetInput(event: KeyboardEvent) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lzc3VlL2lzc3VlbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    min-height: 100vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .btn-block {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .alert-dismissible .close {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 1.25rem 1.5rem;\\r\\n    color: inherit;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Issue List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.title\\\"\\r\\n            placeholder=\\\"{{ 'Search title' | translate }}\\\" maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'title')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\" maxlength=\\\"100\\\" pattern=\\\"[a-zA-Z]*\\\"\\r\\n            (ngModelChange)=\\\"validateDescription($event)\\\">\\r\\n          <div *ngIf=\\\"!isValidDescription\\\" class=\\\"text-danger\\\">{{ descriptionErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"assignTo\\\" id=\\\"assignTo\\\" [(ngModel)]=\\\"form.searchParams.assignTo\\\"\\r\\n            style=\\\"cursor: pointer;\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n            <option value=\\\"Male\\\">{{'Male' | translate }}</option>\\r\\n            <option value=\\\"Female\\\">{{'Female' | translate }}</option>\\r\\n            <option value=\\\"Others\\\">{{'Others' | translate }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.openDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search openDate' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.searchParams.statusId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select StatusId' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.statusList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/issue')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Issue' | translate\\r\\n            }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'title' }}</th>\\r\\n              <th>{{ 'description' }}</th>\\r\\n              <th>{{ 'open date' }}</th>\\r\\n              <th>{{ 'status' }}</th>\\r\\n              <th>{{ 'assign to' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.title }}</td>\\r\\n              <td>{{ m.description }}</td>\\r\\n              <td>{{ convertToLocalDate(m.openDate) }}</td>\\r\\n              <td>{{ m.statusName }}</td>\\r\\n              <td>{{ m.assignTo }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/issue/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/issuelist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-issuelist',\r\n  templateUrl: './issuelist.component.html',\r\n  styleUrls: ['./issuelist.component.css']\r\n})\r\nexport class IssuelistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      statusList: [] // Initialize customer list\r\n    },\r\n    data: { id: null },\r\n    inputerror: { quantity: '', productName: '' },\r\n    searchParams: {\r\n      title: '',\r\n      description: '',\r\n      date: '', // Initialize date field\r\n      statusId: null, // Initialize customerId to null\r\n      assignTO: '',\r\n      openDate: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  isValidAllowedSpeed: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  allowedSpeedErrorMessage: string = '';\r\n  isValidDescription: boolean = true;\r\n  descriptionErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ISSUE, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name, mobile, and allowedSpeed fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'title' || field === 'description') {\r\n      const regex = /^[A-Za-z\\s]*$/; // Updated regex to ensure no numbers\r\n      if (!regex.test(value)) {\r\n        if (field === 'title') {\r\n          this.isValidNameInput = false;\r\n          this.nameErrorMessage = 'Please type alphabets only, numbers are not allowed';\r\n        } else if (field === 'description') {\r\n          this.isValidDescription = false;\r\n          this.descriptionErrorMessage = 'Description must contain only alphabetic characters, numbers are not allowed.';\r\n        }\r\n      } else {\r\n        if (field === 'title') {\r\n          this.isValidNameInput = true;\r\n          this.nameErrorMessage = '';\r\n        } else if (field === 'description') {\r\n          this.isValidDescription = true;\r\n          this.descriptionErrorMessage = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  validateDescription(description: string) {\r\n    const alphabeticPattern = /^[a-zA-Z]*$/;\r\n    if (!alphabeticPattern.test(description)) {\r\n      this.isValidDescription = false;\r\n      this.descriptionErrorMessage = 'Description must contain only alphabetic characters.';\r\n    } else {\r\n      this.isValidDescription = true;\r\n      this.descriptionErrorMessage = '';\r\n    }\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pvYi9qb2IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Job' | translate }}</h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Job' | translate }}</h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Status' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.data.statusId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select status' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.statusList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.categoryId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.categoryId }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Title' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"form.data.title\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter title' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.title\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.title }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Experience(In years)' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"number\\\" name=\\\"experience\\\" [(ngModel)]=\\\"form.data.experience\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter experience' | translate }}\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.experience\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.experience }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Date Of Opening' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dateOfOpening\\\" [value]=\\\"form.data.dateOfOpening | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.dateOfOpening=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.dateOfOpening\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfOpening }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/joblist']\\\">{{ 'List' | translate }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-job',\r\n  templateUrl: './job.component.html',\r\n  styleUrls: ['./job.component.css']\r\n})\r\nexport class JobComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.JOB, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n  \r\n  \r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n  validatePaymentTerm() {\r\n    const paymentTerm = this.form.data.paymentTerm;\r\n    const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\r\n    if (!paymentTermPattern.test(paymentTerm)) {\r\n      this.form.inputerror.paymentTerm = 'Invalid payment term';\r\n    } else {\r\n      delete this.form.inputerror.paymentTerm;\r\n    }\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.statusId);\r\n    console.log(form.statusId);\r\n    flag = flag && validator.isNotNullObject(form.title);\r\n    console.log(form.title);\r\n    flag = flag && validator.isNotNullObject(form.experience);\r\n    console.log(form.experience);\r\n    flag = flag && validator.isNotNullObject(form.dateOfOpening);\r\n    console.log(form.dateOfOpening);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.title = data.title;\r\n    form.experience = data.experience;\r\n    form.dateOfOpening = data.dateOfOpening;\r\n    form.statusId = data.statusId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pvYi9qb2JsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  /* Adjustments for panel heading and main content wrapper */\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-bottom: 20px;\\r\\n    /* Added margin bottom for spacing */\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    padding: 20px;\\r\\n    min-height: calc(100vh - 20px);\\r\\n    /* Adjusted to ensure full height minus padding */\\r\\n    box-sizing: border-box;\\r\\n    /* Ensures padding is included in height calculation */\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n    /* Added margin bottom for spacing */\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n    overflow-x: auto;\\r\\n    /* Ensures horizontal scroll if table overflows */\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Job List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3 mb-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.title\\\"\\r\\n            placeholder=\\\"{{ 'Search title' | translate }}\\\" (input)=\\\"validateInput($event, 'title')\\\">\\r\\n          <!-- Display validation message for title -->\\r\\n          <div *ngIf=\\\"!isValidTitleInput\\\" class=\\\"text-danger\\\">{{ titleErrorMessage }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3 mb-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfOpening\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfOpening' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3 mb-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.experience\\\"\\r\\n            placeholder=\\\"{{ 'Search experience' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.searchParams.statusId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select status' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.statusList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2 mb-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2 mb-2\\\">\\r\\n          <button (click)=\\\"forward('/job')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Job' | translate\\r\\n            }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2 mb-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'Title' }}</th>\\r\\n              <th>{{ 'Experience' }}</th>\\r\\n              <th>{{ 'Date Of Opening' }}</th>\\r\\n              <th>{{ 'Status' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.title }}</td>\\r\\n              <td>{{ m.experience }}</td>\\r\\n              <td>{{ convertToLocalDate(m.dateOfOpening) }}</td>\\r\\n              <td>{{ m.statusName }}</td>\\r\\n              <td><button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/job/' + m.id)\\\"></button></td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/joblist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-joblist',\r\n  templateUrl: './joblist.component.html',\r\n  styleUrls: ['./joblist.component.css']\r\n})\r\nexport class JoblistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      statusList: []\r\n    },\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n      title: '',\r\n      date: '', // Initialize date field\r\n      statusId: null, \r\n      experience: '',\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n\r\n  isValidTitleInput: boolean = true;\r\n  titleErrorMessage: string = '';\r\n\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.JOB, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0]; // Ensure it's in ISO format\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name and mobile fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    } else if (field === 'title') {\r\n      this.isValidTitleInput = /^([A-Z][a-z]+(\\s[A-Z][a-z]+)*){1,100}$/.test(value); // Check against the specified regex\r\n      if (!this.isValidTitleInput) {\r\n        this.titleErrorMessage = 'Please enter a valid title';\r\n      } else {\r\n        this.titleErrorMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div id=\\\"loader\\\">\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"loading\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <p class=\\\"spinner-message\\\" *ngIf=\\\"message && message !== ''\\\">\\r\\n      {{message}}\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYW5zL2xvYW5zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Loans' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Loans' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'CustomerId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"customerIdId\\\" [(ngModel)]=\\\"form.data.customerIdId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select customerId' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.customerIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.customerIdId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.customerIdId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <form [formGroup]=\\\"userForm\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"loanAmount\\\">Loan Amount</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                  </div>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"loanAmount\\\" formControlName=\\\"loanAmount\\\">\\r\\n                <div *ngIf=\\\"userForm.get('loanAmount').invalid && (userForm.get('loanAmount').dirty || userForm.get('loanAmount').touched)\\\">\\r\\n                  <div *ngIf=\\\"userForm.get('loanAmount').errors?.invalidRange\\\" class=\\\"text-danger\\\">Loan amount must be between 50,000 and 1,000,000.</div>\\r\\n                </div>\\r\\n                <span *ngIf=\\\"form.inputerror.loanAmount\\\" class=\\\"alertRedColor\\\">{{form.inputerror.loanAmount}}</span>\\r\\n              </div>\\r\\n            \\r\\n              <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"userForm.invalid\\\">Submit</button> -->\\r\\n        \\r\\n\\r\\n            \\r\\n            \\r\\n            \\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Interest Rate' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"number\\\" name=\\\"interestRate\\\" [(ngModel)]=\\\"form.data.interestRate\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter interestRate' | translate }}\\\">\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.interestRate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.interestRate}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Loan Start Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"loanStartDate\\\" [value]=\\\"form.data.loanStartDate | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.loanStartDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.loanStartDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.loanStartDate\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/loanslist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n      </div>\\r\\n</form>\\r\\n</form>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-loans',\r\n  templateUrl: './loans.component.html',\r\n  styleUrls: ['./loans.component.css']\r\n})\r\nexport class LoansComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n\r\n  constructor(public locator: ServiceLocatorService,private formBuilder: FormBuilder, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.LOANS, locator, route);\r\n\r\n    this.userForm = this.formBuilder.group({\r\n      loanAmount: ['', [Validators.required, this.validateLoanAmountRange()]]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.customerIdId);\r\n    console.log(form.customerIdId);\r\n    flag = flag && validator.isNotNullObject(form.loanAmount);\r\n    console.log(form.loanAmount);\r\n    flag = flag && validator.isNotNullObject(form.interestRate);\r\n    console.log(form.interestRate);\r\n    flag = flag && validator.isNotNullObject(form.loanStartDate);\r\n    console.log(form.loanStartDate);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.loanAmount = data.loanAmount;\r\n    form.interestRate = data.interestRate;\r\n    form.loanStartDate = data.loanStartDate;\r\n    form.customerIdId = data.customerIdId;\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateLoanAmountRange(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      const value = control.value;\r\n      if (isNaN(value) || value < 50000 || value > 1000000) {\r\n        return { 'invalidRange': true };\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYW5zL2xvYW5zbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    min-height: 100vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper full-height\\\">\\r\\n  <div class=\\\"container-fluid full-height\\\">\\r\\n    <div class=\\\"panel panel-primary full-height\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Loans List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loanStartDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search loan Start Date' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loanAmount\\\"\\r\\n            placeholder=\\\"{{ 'Search loan Amount' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.interestRate\\\"\\r\\n            placeholder=\\\"{{ 'Search interest Rate' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"customerIdId\\\" [(ngModel)]=\\\"form.searchParams.customerIdId\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select customerId' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.customerIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-3 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/loans')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add loans' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-3 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'Loan Amount' }}</th>\\r\\n              <th>{{ 'Interest Rate' }}</th>\\r\\n              <th>{{ 'Loan Start Date' }}</th>\\r\\n              <th>{{ 'customerId' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.loanAmount }}</td>\\r\\n              <td>{{ m.interestRate }}</td>\\r\\n              <td>{{ convertToLocalDate(m.loanStartDate) }}</td>\\r\\n              <td>{{ m.customerIdId }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/loans/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/loanslist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-loanslist',\r\n  templateUrl: './loanslist.component.html',\r\n  styleUrls: ['./loanslist.component.css']\r\n})\r\nexport class LoanslistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n\r\n      loanAmount: '',\r\n      date: '', // Initialize date field\r\n      customerIdId: '',\r\n      interestRate: '',\r\n      loanStartDate: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.LOANS, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name and mobile fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"<app-navbar ></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  } \\r\\n  \\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom:15%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    \\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form #loginForm=\\\"ngForm\\\">\\r\\n          \\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Forgot Password' | translate}}</h1>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error == false && form.message == 'Password has been sent to email id'\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n              <button (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Reset My Password' | translate}}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  \\r\\n</div>\\r\\n  </div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgotpassword.component.html'\r\n})\r\n\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  endpoint = \"http://localhost:8084/Auth\";\r\n\r\n  form = {\r\n    error: false,\r\n    message: \"\",\r\n    loginId: '',\r\n  };\r\n\r\n  inputerror = {};\r\n  message = '';\r\n\r\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\r\n  }\r\n\r\n\r\n  validate(){\r\n    let flag = true;\r\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    this.httpService.get(_self.endpoint + \"/fp/\"+ this.form.loginId ,function (res) {\r\n\r\n      console.log('MyResponse', res);\r\n\r\n      _self.form.message = '';\r\n      _self.inputerror = {};\r\n          console.log(res.result.message+'------>msg');\r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n        console.log(_self.form.message+'-------> msg in sucess');\r\n      \r\n      }\r\n\r\n      _self.form.error = !res.success;\r\n      console.log(_self.form.error + '-----------> msg in self.form.error in res');\r\n\r\n      if (_self.form.error && res.result.inputerror) {\r\n          _self.inputerror = res.result.inputerror;\r\n          console.log(_self.inputerror + '-----------> msg in self.form.error');\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZDs7O0FBR0E7RUFDRSxZQUFZO0VBQ1osVUFBVTtHQUNUOzs7QUFFQTtJQUNDLFlBQVk7R0FDYjs7O0FBRUE7SUFDQyxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsZXJ0UmVkQ29sb3Ige1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuXHJcbi5yZXF1aXJlZC1maWVsZDo6YWZ0ZXIgeyBcdFx0XHJcbiAgY29udGVudDogXCIqXCI7XHRcdFxyXG4gIGNvbG9yOiByZWQ7XHRcdFxyXG4gICB9XHRcclxuXHJcbiAgIC5zdWNjZXNzQ29sb3J7XHJcbiAgICBjb2xvcjogZ3JlZW47XHJcbiAgIH1cclxuXHJcbiAgIC5idG4tc3BhY2Uge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<app-navbar #one></app-navbar>\\r\\n<style>\\r\\n  #nnn{\\r\\n    background: none;\\r\\n    border: none;\\r\\n  }\\r\\n  \\r\\n  </style>\\r\\n  \\r\\n  \\r\\n<style type=\\\"text/css\\\">\\r\\n  .log1 {\\r\\n    padding-top: 13%; \\r\\n  }\\r\\n  \\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n    \\r\\n  }\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n    \\r\\n  }\\r\\n  </style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 8%; padding-bottom: 8%;\\r\\nbackground: url(assets/files/Login3.jpg) no-repeat center center;\\r\\n   background-attachment: fixed;\\r\\nbackground-size: 225vh;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card input-group-addon grad\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form>\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <h1 class=\\\"text-primary font-weight-bold\\\">{{'Login' | translate}}</h1>\\r\\n          </div>\\r\\n          <input type=\\\"hidden\\\" name=\\\"log\\r\\n          inUrl\\\" [(ngModel)]=\\\"form.loginUrl\\\" class=\\\"form-control\\\">\\r\\n          <div *ngIf=\\\"form.error && form.message == 'Invalid ID or Password'\\\"\\r\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{'Invalid ID or Password' | translate}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error==false && form.message == 'Logout Successfully'\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{'Log out successfully' | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.message == 'OOPS! Your session has been expired'\\\"\\r\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{'OOPS! Your session has been expired' | translate}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span>\\r\\n            </span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n           <span  *ngIf=\\\"inputerror.loginId != null\\\"\\r\\n          class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'loginId'| translate}} </span> \\r\\n          </div>\\r\\n           <!-- <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>  -->\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span  *ngIf=\\\"inputerror.password != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span> \\r\\n\\r\\n            <!-- <span class=\\\"alertRedColor\\\">{{inputerror.password}}</span> -->\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n              <button (click)=\\\"signIn()\\\" class=\\\"btn btn-md btn-success\\\">\\r\\n                {{'Sign in' | translate}}</button>\\r\\n            </div>\\r\\n            &nbsp;&nbsp;&nbsp;\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/forgotpassword']\\\">{{'Forgot Password' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  endpoint = \"http://localhost:8084/Auth\";\r\n\r\n  form = {\r\n    error: false,\r\n    message: '',\r\n    loginId: '',\r\n    password: '',\r\n    loginUrl: '',\r\n  };\r\n\r\n  inputerror = {};\r\n  message = '';\r\n\r\n  userparams = {\r\n    url: '',\r\n    sessionExpiredMsg: '',\r\n    methodType: '',\r\n  };\r\n\r\n\r\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router,\r\n    private cookieService: CookieService, private route: ActivatedRoute, private serviceLocator: ServiceLocatorService) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  this.route.queryParams.subscribe((params) =>{\r\n    this.form.message = params['errorMessage'] || null;\r\n    console.log(\"mas>>>>>>>>>>>>>>>gg.>>\",this.form.message);\r\n    })\r\n    this.userSessionCheck();\r\n    if (this.httpService.form.error == true) {\r\n      this.form.message = this.httpService.form.message;\r\n      this.form.error = this.httpService.form.error;\r\n    }\r\n    var a = '';\r\n    this.serviceLocator.getPathVariable(this.route, function (params) {\r\n      a = params[\"userparams\"];\r\n      console.log('I GOT ID, its logout', a);\r\n    })\r\n    if (a == 'true') {\r\n      this.form.message = 'Logout Successfully';\r\n    }\r\n  }\r\n\r\n  userSessionCheck() {\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      //  this.userList = params.get('userparams');    \r\n      //  this.userparams=JSON.parse(this.route.snapshot.paramMap.get('userparams'));\r\n\r\n      this.userparams = JSON.parse(this.route.snapshot.queryParamMap.get('userparams'));\r\n      if (this.userparams != null) {\r\n        this.form.message = this.userparams.sessionExpiredMsg;\r\n        this.form.loginUrl = this.userparams.url;\r\n        //  console.log('URL-----------------------' + this.userparams.url);\r\n        //  console.log('Message-----------------------' + this.userparams.sessionExpiredMsg);\r\n        //  console.log('Method Type-----------------------' + this.userparams.methodType);\r\n      }\r\n\r\n    });\r\n    if (this.form.message != null) {\r\n      this.form.error = true;\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    let flag = true;\r\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\r\n    console.log(this.form.loginId);\r\n    flag = flag && this.dataValidator.isNotNull(this.form.password);\r\n    console.log(this.form.password);\r\n    return flag;\r\n  }\r\n\r\n\r\n  signIn() {\r\n\r\n    var _self = this;\r\n    this.form.error = false;\r\n    const requestedUrl = this.httpService.userparams.url;//to get the URI\r\n    console.log('signIn----', this.form);\r\n    this.httpService.post(this.endpoint + \"/login\", this.form, function (res) {\r\n\r\n      console.log('MyResponse', res);\r\n\r\n\r\n      _self.form.message = '';\r\n      _self.inputerror = {};\r\n      //_self.form.loginId = res.result.loginId;\r\n      if (_self.dataValidator.isNotNullObject(res.result.message)) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      _self.form.error = !res.success;\r\n\r\n      if (_self.dataValidator.isNotNullObject(res.result.inputerror)) {\r\n        _self.inputerror = res.result.inputerror;\r\n      }\r\n\r\n      if (_self.dataValidator.isTrue(res.success)) {\r\n\r\n    \r\n        localStorage.setItem(\"loginId\", res.result.loginId);\r\n  \r\n       \r\n        localStorage.setItem(\"role\", res.result.role);\r\n        localStorage.setItem(\"fname\", res.result.fname);\r\n        localStorage.setItem(\"lname\", res.result.lname);\r\n        localStorage.setItem(\"userid\", res.result.data.id);\r\n      \r\n        //   console.log(res.result.data.id + 'sessionId set ----');\r\n        //   console.log(res.result.token + '  Token set ----');\r\n\r\n\r\n        if (requestedUrl != null && requestedUrl != '') {\r\n          _self.router.navigateByUrl(requestedUrl);\r\n\r\n        } else {\r\n          _self.router.navigateByUrl('dashboard');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n   .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 25px\\r\\n  ;\\r\\n  }\\r\\n \\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\" padding-top: 4%;\\r\\n padding-bottom:0%;background-image: url(../../assets/files/wall.jpg);\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: 100%;\\r\\n  height: 120vh;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n         <form>\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <h3 class=\\\"text-primary font-weight-bold\\\">\\r\\n              {{'Sign Up' | translate}}\\r\\n            </h3>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null && form.message.length>0\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.firstName != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'firstname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.firstName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.lastName != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'lastname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.lastName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Login id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"login\\\" [(ngModel)]=\\\"form.data.login\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\r\\n\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.login != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'email'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.login}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.password != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{password | translate}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span  *ngIf=\\\"form.inputerror.phone != null\\\"\\r\\n              class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'phone'| translate}} </span>\\r\\n          </div>\\r\\n\\r\\n          <!-- <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.alternateMobile != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'mobile'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.phone}} </span> \\r\\n          <!-- </div>  -->\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n            </div> <span  *ngIf=\\\"form.inputerror.dob != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'dob'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.dob}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div> <span  *ngIf=\\\"form.inputerror.gender != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'gender'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.gender}} </span> -->\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n\\r\\n\\r\\n              <button (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Sign up' | translate}}</button>\\r\\n            </div>\\r\\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n            <div class=\\\"pt-2\\\">\\r\\n\\r\\n              <a class=\\\"btn btn-warning mr-1\\\"[routerLink]=\\\"['/signup']\\\" (click)=\\\"exit()\\\">{{'Reset' | translate}}</a>\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport {ServiceLocatorService} from '../service-locator.service';\r\nimport { format } from 'url';\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html'\r\n})\r\n\r\nexport class SignUpComponent implements OnInit {\r\n\r\n\r\n  endpoint = \"http://localhost:8084/Auth/signUp\";\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: '', //error or success message\r\n    data: { id: null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    \r\n  };\r\n  \r\n\r\n  \r\n\r\n  constructor(private serviceLocator:ServiceLocatorService, private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form);\r\n  }\r\n\r\n  /**\r\n   * Override by childs \r\n   * \r\n   * @param form \r\n   */\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n  \r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    \r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n \r\n    flag = flag && validator.isNotNullObject(form.loginId);\r\n    \r\n    flag = flag && validator.isNotNullObject(form.password);\r\n    \r\n    flag = flag && validator.isNotNullObject(form.phone);\r\n    \r\n    flag = flag && validator.isNotNullObject(form.gender);\r\n  \r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n    return flag;\r\n\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n  exit(){ \r\n   \r\n    location.reload();\r\n  }\r\n\r\n  reset(){\r\n    this.router.navigate(['/signup']);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    this.httpService.post(this.endpoint, this.form.data,function (res) {\r\n\r\n      console.log('MyResponse', res);\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n\r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      _self.form.error = !res.success;\r\n      if (_self.form.error && res.result.inputerror) {\r\n    \r\n        _self.form.inputerror = res.result.inputerror;\r\n\r\n          \r\n      }\r\n\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div  style=\\\"\\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;\\r\\npadding-top: 5%;\\r\\npadding-bottom: 24%;\\r\\nwidth:100%;\\r\\n  height: 100;\\\">\\r\\n  <form name=\\\"rollForm\\\" (ngSubmit)=\\\"go()\\\">\\r\\n    <div align=\\\"center\\\">\\r\\n      <div style=\\\"font-size: 80px;\\\">\\r\\n      <p class=\\\"font-weight-bold text-primary\\\">{{'Get Marksheet' | translate }}</p>\\r\\n    </div>\\r\\n    </div>\\r\\n    <div class=\\\"row pt-4 pb-4\\\">\\r\\n      <div class=\\\"col-sm-4 \\\"></div>\\r\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"rollNo\\\" id=\\\"rollNo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.data.rollNo\\\"\\r\\n          placeholder=\\\"{{'Enter Roll Number' | translate }}\\\">&emsp;</div>\\r\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n          {{'Search' | translate }}</button>\\r\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/getmarksheet']\\\"> {{'Reset' | translate}} </a>\\r\\n        \\r\\n        &emsp;\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-sm-3 col-xs-3\\\"></div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n  <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n    {{form.message}}\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n    {{form.message}}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"form.list.rollNo!= null\\\" >\\r\\n\\r\\n    <table width=\\\"100%\\\" class=\\\"table table-bordered table-striped table-hover\\\" border=\\\"3px\\\">\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'RollNO' | translate }}</th>\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.rollNo}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Name' | translate }}</th>\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.name}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Marks' | translate }}</th>\\r\\n        <th align=\\\"center\\\" id=\\\"po1\\\">{{'Max Marks' | translate }}</th>\\r\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Min Marks' | translate }}</th>\\r\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Marks Obtain' | translate }}</th>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Subject' | translate }}</th>\\r\\n        \\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Physics' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.physics}}*</span> -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.physics >35) ? 'green': 'red' }\\\">{{form.list.physics}}</span>\\r\\n          \\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Chemistry' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.chemistry}}*</span>  -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.chemistry >35) ? 'green': 'red' }\\\">{{form.list.chemistry}}</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Maths' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.maths}}*</span> -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.maths >35) ? 'green': 'red' }\\\">{{form.list.maths}}</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Total' | translate }}</th>\\r\\n\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">{{form.list.maths+form.list.physics+form.list.chemistry}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Percentage' | translate }}</th>\\r\\n\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">\\r\\n          {{((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 | number:'2.0-2' }}%\\r\\n        \\r\\n          \\r\\n        \\r\\n        \\r\\n        </td>\\r\\n      </tr>\\r\\n     <!--  <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Grade' | translate }}</font>\\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\r\\n          <font color=\\\"green\\\"><b>{{'PASS' | translate }}</b></font>\\r\\n        </td>\\r\\n      </tr> -->\\r\\n\\r\\n      <!-- <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>\\r\\n          <font color=\\\"red\\\"><b>F</b></font>\\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\r\\n          <font color=\\\"red\\\"><b>{{'FAIL' | translate }}</b></font>\\r\\n        </td>\\r\\n      </tr> -->\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>         \\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\"  *ngIf=\\\"((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 > 35; else elseBlock\\\">\\r\\n\\r\\n          <font color=\\\"green\\\"><b>{{'Pass' | translate }}</b></font>\\r\\n        </td>\\r\\n        <ng-template #elseBlock><td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\" ><font color=\\\"red\\\"><b>{{'Fail' | translate }}</b></font></td></ng-template>\\r\\n      </tr>\\r\\n\\r\\n    </table>\\r\\n    \\r\\n</div><div style=\\\"position: relative; clear: both;\\\">\\r\\n  <app-footer></app-footer>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from \"../http-service.service\";\r\nimport { BaseCtl } from '../base.component';\r\nimport { NgForm} from '@angular/forms';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-getmarksheet',\r\n  templateUrl: './getmarksheet.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class GetmarksheetComponent extends BaseCtl{\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null,rollNo : null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n    pageNo : 0\r\n   \r\n  };\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\r\n    super(locator.endpoints.Marksheet, locator, route);\r\n\r\n  }\r\n\r\n\r\n  \r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.rollNo);\r\n    return flag;\r\n  }\r\n  \r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.rollNo = data.rollNo;\r\n  \r\n  }\r\n  \r\n  go(){\r\n    var _self = this;\r\n    console.log(\"onClickSubmit\");\r\n    console.log(this.form.data);\r\n    console.log(this.form.data.rollNo);\r\n    \r\n    \r\n    this.httpservice.get(\"http://localhost:8084/Marksheet/rollno/\"+this.form.data.rollNo,function (res){\r\n      \r\n      if(res.success){\r\n        _self.form.list = res.result.data;\r\n        if(_self.form.list.length == 0){\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\",_self.form.list.length );\r\n      }else{\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 8%; \\r\\nbackground: url(assets/files/teahub.png) no-repeat center center;\\r\\nbackground-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <!-- <div class=\\\"col-sm-6 p-1 text-center\\\"> -->\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Marksheet List' | translate}}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row  pt-4 pb-4 \\\" style=\\\"margin-left:15%\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{'Search Name'| translate}}\\\">\\r\\n        </div>\\r\\n      \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Roll No' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.marksheetList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search'| translate}}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/marksheet')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Marksheet'| translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No'| translate}}</th>\\r\\n                <th>{{'RollNO'| translate}}</th>\\r\\n                <th>{{'Name'| translate}}</th>\\r\\n                <th>{{'Physics'| translate}}</th>\\r\\n                <th>{{'Chemistry'| translate}}</th>\\r\\n                <th>{{'Maths'| translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <!-- <td> <input type=\\\"checkbox\\\" name=\\\"list_name\\\" value=\\\"{{isMasterSel}}\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"isAllSelected()\\\"/>\\r\\n                  </td> -->\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\"\\r\\n                    value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                \\r\\n\\r\\n                <td> {{ m.rollNo }} </td>\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.physics }} </td>\\r\\n                <td> {{ m.chemistry }} </td>\\r\\n                <td> {{ m.maths }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/marksheet/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n\\r\\n                  <!-- <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <table style=\\\"width: 100%;\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"width: 50%;\\\">\\r\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                }} </button>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\"\\r\\n              [routerLink]=\\\"['/marksheetlist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                translate }}</button></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-marksheet-list',\r\n  templateUrl: './marksheet-list.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetListComponent extends BaseListCtl {\r\n  imageToShow: any;\r\n  myKey = \"\";\r\n\r\n  \r\ncreateImageFromBlob(image: Blob) {\r\n  let reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => {\r\n     this.imageToShow = reader.result;\r\n  \r\n  }, false);\r\n\r\n  if (image) {\r\n     reader.readAsDataURL(image);\r\n  }\r\n}\r\n\r\n public form = {\r\n\r\n   error: false, //error \r\n   message: null, //error or success message\r\n   preload: [], // preload data\r\n   data: { id: null}, //form data\r\n   inputerror: {}, // form input error messages\r\n   searchParams: {}, //search form\r\n   searchMessage: null, //search result message\r\n   list: [ ], // search list \r\n   pageNo: 0\r\n };\r\n\r\n\r\n selectedFile: File;\r\n retrievedImage: any;\r\n base64Data: any;\r\n retrieveResonse: any;\r\n message: string;\r\n imageName: any;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.MARKSHEET, locator, route);\r\n  }\r\n\r\n  getImage(id) {\r\n    //Make a call to Sprinf Boot to get the Image Bytes.\r\n    this.form.data.id = id;\r\n    console.log(this.form.data.id);\r\n    \r\n    this.httpClient.get('http://localhost:8084/Marksheet/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\r\n      this.createImageFromBlob(data);\r\n      this.myKey= this.form.data.id;\r\n    }, error => {\r\n      \r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFya3NoZWV0L21hcmtzaGVldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkOzs7QUFHQTtFQUNFLFlBQVk7RUFDWixVQUFVO0dBQ1Q7OztBQUVBO0lBQ0MsWUFBWTtHQUNiOzs7QUFFQTtJQUNDLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL21hcmtzaGVldC9tYXJrc2hlZXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcblxyXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxyXG4gIGNvbnRlbnQ6IFwiKlwiO1x0XHRcclxuICBjb2xvcjogcmVkO1x0XHRcclxuICAgfVx0XHJcblxyXG4gICAuc3VjY2Vzc0NvbG9ye1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICB9XHJcblxyXG4gICAuYnRuLXNwYWNlIHtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG59Il19 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Marksheet' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Marksheet' | translate}}</h2>\\r\\n          \\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Roll No' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"rollNo\\\" [(ngModel)]=\\\"form.data.rollNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Roll No' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.rollNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Student' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                \\r\\n\\r\\n                <select class=\\\"form-control\\\" required name=\\\"studentId\\\"\\r\\n                  [(ngModel)]=\\\"form.data.studentId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Student' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.studentList\\\" [value]=\\\"obj.id\\\">{{obj.firstName + ' ' +obj.lastName }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.studentId}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Physics' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phy\\\" [(ngModel)]=\\\"form.data.physics\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Physics Marks' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.physics}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Chemistry' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"chemistry\\\" [(ngModel)]=\\\"form.data.chemistry\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Chemistry Marks' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.chemistry}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Maths' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                \\r\\n                <input type=\\\"text\\\" name=\\\"math\\\" [(ngModel)]=\\\"form.data.maths\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Maths Marks'| translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.maths}} </span>\\r\\n          </div>\\r\\n         \\r\\n         \\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update'| translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/marksheetlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'Back'| translate}}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { SearchResponse, RecordResponse } from '../response';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-marksheet',\r\n  templateUrl: './marksheet.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  fileToUpload: File = null;\r\n  marksheetForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n \r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute , private httpClient: HttpClient) {\r\n    super(locator.endpoints.MARKSHEET, locator, route);\r\n\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.data.id = res.result.data;\r\n      if (_self.fileToUpload) {\r\n        console.log('Dheeraj');\r\n        _self.myFile();\r\n      }\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Dheeraj----------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  onFileSelect(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    console.log(this.fileToUpload);\r\n\r\n  }\r\n\r\n  onUpload(marksheetform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  myFile() {\r\n    console.log(this.form.data.id + 'after super.submit-----');\r\n    this.onSubmitProfile(this.fileToUpload, this.marksheetForm).subscribe(data => {\r\n      console.log(this.fileToUpload);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  onSubmitProfile(fileToUpload: File,marksheetform: FormGroup) {\r\n    const formData = new FormData();\r\n    let phone = null;\r\n    formData.append('file', fileToUpload);\r\n    console.log(this.form.data.id + 'this id number ======');\r\n    return this.httpClient.post(\"http://localhost:8084/User/profilePic/\" + this.form.data.id, formData);\r\n  }\r\n\r\n  validate() { \r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    console.log('Student name :: ' + form.name);\r\n    flag = flag && validator.isNotNullObject(form.rollNo);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.physics);\r\n    flag = flag && validator.isNotNullObject(form.chemistry);\r\n    flag = flag && validator.isNotNullObject(form.maths);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.studentId =data.studentId;\r\n    form.rollNo = data.rollNo;\r\n    form.physics = data.physics;\r\n    form.chemistry = data.chemistry;\r\n    form.maths = data.maths;\r\n    form.imageId = data.imageId;\r\n    console.log('Populated Form', form);\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 1%;padding-bottom: 1%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"col-sm-12 pt-3\\\"> \\r\\n          <h3 class=\\\"text-primary text-center font-weight-bold\\\">{{'Marksheet Merit List' | translate}}</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n       <div style=\\\"margin-left: 87%;\\\" class=\\\"pb-2\\\">\\r\\n\\r\\n        <a href=\\\"http://localhost:8084/Jasper/report\\\" class=\\\"btn btn-lg btn-primary \\\" role=\\\"button\\\"  target=\\\"blank\\\">\\r\\n          <span class=\\\"fa fa-print mr-1\\\"></span>{{'Print' | translate}}</a>\\r\\n      </div> \\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold grad\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n              <th >{{'S.No' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'RollNO' | translate}}  </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Name' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Physics' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Chemistry' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Maths' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Total' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Percentage(%)' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n          </thead>\\r\\n\\r\\n          <tbody>\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let m of form.list; let i = index\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{(form.pageNo*5)+i+ 1}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.rollNo}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.name}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.physics}}</td>\\r\\n              <td> {{m.chemistry}}</td>\\r\\n              <td> {{m.maths}}</td>\\r\\n              <td>{{m.physics+m.maths+m.chemistry}}</td>\\r\\n              <td>{{((m.physics+m.maths+m.chemistry)*100)/300 | number:'2.0-2' }}%</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n          </tbody>\\r\\n          </table>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div><app-footer>\\r\\n  \\r\\n</app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from \"../http-service.service\";\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-marksheetmerit-list',\r\n  templateUrl: './marksheetmerit-list.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetmeritListComponent extends BaseCtl{\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\r\n    super(locator.endpoints.Marksheet, locator, route);\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.getMeritList();\r\n  }\r\n\r\n  getMeritList(){\r\n    var _self = this;\r\n  \r\n    this.httpservice.get(\"http://localhost:8084/Marksheet/meritlist\",function (res){\r\n      \r\n      if(res.success){\r\n        _self.form.list = res.result.list;\r\n        if(_self.form.list.length == 0){\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\",_self.form.list.length );\r\n      }else{\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n  \r\n  \r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg); background-repeat: no-repeat, repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"col-sm-6 p-1\\\">\\r\\n          <h4 class=\\\"text-primary font-weight-bold\\\">{{'Message List' | translate}}</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subject\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.body\\\"\\r\\n            placeholder=\\\"{{'Search Body' | translate}}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate}}</button></div>\\r\\n        <div class=\\\"col=sm-1\\\">\\r\\n          <button (click)=\\\"forward('/message')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Message'| translate}}\\r\\n          </button></div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-lg-1\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous'| translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-1\\\">\\r\\n          <button (click)=\\\"next()\\\" class=\\\"btn btn-info\\\">{{'Next'| translate}} </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'| translate}}</th>\\r\\n                <th>{{'Code'| translate}}</th>\\r\\n                <th>{{'Subject' | translate}}</th>\\r\\n                <th>{{'Body'| translate}}</th>\\r\\n                <th>{{'Type'| translate}}</th>\\r\\n                <th>{{'Status'| translate}}</th>\\r\\n                <th>#</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.code }} </td>\\r\\n                <td> {{ m.subject }} </td>\\r\\n                <td> {{ m.body }} </td>\\r\\n                <td> {{ m.type }} </td>\\r\\n                <td> {{ m.status }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/message/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-message-list',\r\n  templateUrl: './message-list.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\n\r\nexport class MessageListComponent extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.MESSAGE, locator, route);\r\n  }\r\n\r\n}\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg);\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Message' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Message' | translate}} </h2>\\r\\n\\r\\n\\r\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div> -->\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Type' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comment grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"type\\\" [(ngModel)]=\\\"form.data.type\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Type' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.type}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Code' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-commenting grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"code\\\" id=\\\"code\\\" [(ngModel)]=\\\"form.data.code\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option selected=\\\"true\\\">{{'Please select'  | translate }}</option>\\r\\n                  <option value=\\\"U-FP\\\">U-FP </option>\\r\\n                  <option value=\\\"U-REG\\\">U-REG </option>\\r\\n                  <option value=\\\"U-CP\\\">U-CP</option>\\r\\n                </select>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.code}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comments grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"subject\\\" [(ngModel)]=\\\"form.data.subject\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Subject'| translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Body' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"form.data.body\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Body' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.body}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Status' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'HTML' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"html\\\" [(ngModel)]=\\\"form.data.html\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message HTML' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.html}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/messagelist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\r\\n              </button></div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\n\r\nexport class MessageComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.MESSAGE, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.type);\r\n    flag = flag && validator.isNotNullObject(form.code);\r\n    flag = flag && validator.isNotNullObject(form.subject);\r\n    flag = flag && validator.isNotNullObject(form.body);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.code = data.code;\r\n    form.type = data.type;\r\n    form.subject = data.subject;\r\n    form.body = data.body;\r\n    form.status = data.status;\r\n    form.html = data.html;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n","module.exports = \"navbar{\\r\\n    position: fixed;\\r\\n    top: 0px;\\r\\n    height: 40px;\\r\\n    width: 100%;\\r\\n    z-index: 1000;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLFFBQVE7SUFDUixZQUFZO0lBQ1osV0FBVztJQUNYLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuYXZiYXJ7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxufSJdfQ== */\"","module.exports = \"<style type=\\\"text/css\\\">\\r\\n  .raj {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  }\\r\\n\\r\\n  .c1 {\\r\\n    color: rgb(235, 6, 6);\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"header\\\">\\r\\n  <nav *ngIf=\\\"!isLogin()\\\" class=\\\"navbar navbar-expand-lg raj\\\">\\r\\n    <div class=\\\"logo\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\r\\n        <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\r\\n        <img src=\\\"assets\\\\files\\\\custom.png\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\r\\n      </a>\\r\\n    </div>\\r\\n    <select #locale (change)='changeLocale(locale.value)' class=\\\"c1\\\">\\r\\n      <option value=\\\"en\\\">{{'Select Language' | translate }}</option>\\r\\n\\r\\n      <option value=\\\"en\\\" style=\\\"color: red;\\\">English</option>\\r\\n      <option value=\\\"hi\\\" style=\\\"color: red;\\\">{{'Hindi' | translate }}</option>\\r\\n    </select>\\r\\n\\r\\n\\r\\n    <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\r\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\" style=\\\"font-size: 15px;\\\">\\r\\n      <ul class=\\\"navbar-nav ml-auto\\\" style=\\\"padding-right: 6.5%;\\\">\\r\\n\\r\\n        <li class=\\\"nav-item dropdown\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['myNav']\\\" id=\\\"navbarDropdown\\\"\\r\\n            role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n            <font style=\\\"color: white;\\\">{{'Hi,Guest'| translate}}\\r\\n            </font>\\r\\n          </a>\\r\\n\\r\\n          <div class=\\\"dropdown-menu\\\" id=\\\"myNav\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/login']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; &nbsp; {{'Log\\r\\n              in' | translate}}</a>\\r\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/signup']\\\"><i class=\\\" fa fa-users\\\"></i> &nbsp; {{'User\\r\\n              Registration' |\\r\\n              translate}}</a>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li>\\r\\n\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n  </nav>\\r\\n</div>\\r\\n\\r\\n\\r\\n<nav *ngIf=\\\"isLogin()\\\" class=\\\"navbar navbar-expand-lg raj\\\">\\r\\n\\r\\n  <div class=\\\"logo\\\">\\r\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\r\\n      <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\r\\n      <img src=\\\"assets\\\\files\\\\custom.png\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\r\\n    </a>\\r\\n  </div>\\r\\n  <!-- <strong class=\\\"text-white\\\">NCS Pvt Ltd</strong> -->\\r\\n\\r\\n\\r\\n  <select #locale (click)='changeLocale(locale.value)'>\\r\\n    <option value=\\\"en\\\">{{'Select Language' | translate }}</option>\\r\\n    <option value=\\\"en\\\">English</option>\\r\\n    <option value=\\\"hi\\\">{{'Hindi' | translate }}</option>\\r\\n  </select>\\r\\n\\r\\n\\r\\n  <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\r\\n    aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"col-sm-2\\\"></div>\\r\\n\\r\\n\\r\\n\\r\\n    <ul class=\\\"nav navbar-nav pl-2 \\\">\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'User' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/user']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add User' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/userlist']\\\"><i class=\\\"fa fa-list\\\"></i>&nbsp; {{'User List' |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      \\r\\n <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Patient' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/patient']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add patient' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/patientlist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'patient List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Supplier' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplier']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add supplier' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplierlist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'supplier List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>  \\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Vehicle Tracking' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/vehicletracking']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add vehicle tracking' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/vehicletrackinglist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'vehicle tracking List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Inventory' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/inventory']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add inventory' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/inventorylist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'inventory List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Transportation' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/transportation']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add transportation' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/transportationlist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'transportation List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Route' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/route']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add route' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/routelist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'route List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Issue' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/issue']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add issue' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/issuelist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'issue List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Employee' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/employee']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add employee' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/employeelist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'employee List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Job' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/job']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add job' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/joblist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'job List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Transactions' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/transactions']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add Transactions' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/transactionslist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'Transactions List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Owner' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/owner']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add Owner' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/ownerlist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'Owner List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Field' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/field']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add Field' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/fieldlist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'Field List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li> \\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Project' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/project']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add project' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/projectlist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'project List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n  <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'ATMs' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/atms']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add ATMs' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/atmslist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'ATMs List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Customer' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/customer']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add customer' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/customerlist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'Customer list' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <font style=\\\"color: white;\\\">{{'Company' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/company']\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add company' | translate}}\\r\\n    </a>\\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/companylist']\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'company List' | translate}}\\r\\n    </a>\\r\\n  </div>\\r\\n</li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Order' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/order']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add Order' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/orderlist']\\\"><i class=\\\"fa fa-list\\\"></i>&nbsp; {{'Order List' |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Marksheet' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheet']\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp; {{'Add Marksheet' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetlist']\\\"><i class=\\\"fa fa-paste\\\"></i>\\r\\n            &nbsp;\\r\\n            {{'Marksheet List' | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetmeritlist']\\\"><i\\r\\n              class=\\\" fa fa-list\\\"></i> &nbsp; {{'Marksheet Merit List' | translate}} </a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/getmarksheet']\\\"><i class=\\\"fa fa-copy\\\"></i> &nbsp; {{'Get Marksheet'\\r\\n            |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Role' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/role']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; {{'Add Role' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/rolelist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\r\\n            {{'Role List' |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n       <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Product' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/product']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; {{'Add product'\\r\\n            |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/productlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\r\\n            {{'Product List' |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n\\r\\n      </li> \\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'College' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/college']\\\"><i class=\\\"fa fa-university\\\"></i> &nbsp; {{'Add College' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/collegelist']\\\"><i class=\\\"fa fa-building\\\"></i>\\r\\n            &nbsp;\\r\\n            {{'College List' | translate}} </a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Course' | translate}}\\r\\n          </font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/course']\\\"><i class=\\\"fa fa-book\\\"></i> &nbsp; {{'Add Course' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/courselist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp;\\r\\n            {{'Course List'\\r\\n            | translate}} </a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Student' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/student']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Student' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/studentlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\r\\n            {{'Student\\r\\n            List' | translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Faculty' | translate}}\\r\\n          </font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/faculty']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Add Faculty' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/facultylist']\\\"><i class=\\\" fa fa-list\\\"></i> &nbsp;\\r\\n            {{'Faculty\\r\\n            List' | translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'TimeTable' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetable']\\\"><i class=\\\"fa fa-clock-o\\\"></i> &nbsp; {{'Add TimeTable'\\r\\n            | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetablelist']\\\"><i class=\\\"fa fa-list\\\"></i>\\r\\n            &nbsp;\\r\\n            {{'TimeTable List' | translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Subject' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subject']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp; {{'Add Subject' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subjectlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp;\\r\\n            {{'Subject\\r\\n            List' | translate}}\\r\\n          </a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{form.data.fname }} ({{form.data.role}})\\r\\n          </font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"forward()\\\"><i class=\\\" fa fa-user-md\\\"></i> &nbsp; {{'My Profile' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/changepassword']\\\"><i class=\\\" fa fa-key\\\"></i> &nbsp; {{'Change\\r\\n            Password' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"\\\" (click)=\\\"goToLink()\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp;{{'Java Doc' |\\r\\n            translate}}</a>\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\" fa fa-lock\\\"></i> &nbsp;&nbsp;{{'Log Out' |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { HttpServiceService} from '../http-service.service';\r\nimport { ServiceLocatorService} from '../service-locator.service';\r\n\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport { HttpClient} from '@angular/common/http'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  loginId: string;\r\n  userid : string;\r\n \r\n  constructor(private translate: TranslateService, private route : ActivatedRoute, private httpService : HttpServiceService,private myservice: HttpClient ,private servicelocator : ServiceLocatorService) { \r\n\r\n    console.log('DefaultLang ' + localStorage.getItem(\"locale\"));\r\n    if(localStorage.getItem(\"locale\")!=null){\r\n    translate.setDefaultLang(localStorage.getItem(\"locale\"));\r\n    }else{\r\n      translate.setDefaultLang(\"en\");\r\n    }\r\n   \r\n  }\r\n\r\n  changeLocale(locale:string){\r\n    localStorage.setItem(\"locale\",locale);\r\n    this.translate.use(localStorage.getItem(\"locale\"));\r\n     console.log('Locale ' + locale);\r\n   }\r\n\r\n   public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    firstName : null,\r\n    data: { id: null, fname: null, lname : null, role: null, loginId : null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n  \r\n  };\r\n  ngOnInit() {\r\n    // var _self = this;\r\n    // this.httpService.get(\"http://localhost:8080/Auth/menu\",function (res){\r\n      \r\n    //   if(res.success){\r\n    //     _self.form.list = res.result.list;\r\n      \r\n    //   }else{\r\n    //     _self.form.error = false;\r\n    //     _self.form.message = res.result.message;\r\n    //   }\r\n    //   console.log('FORM', _self.form);\r\n    // });\r\n  }\r\n\r\n  forward(){\r\n    this.userid = localStorage.getItem(\"userid\");\r\n    console.log('UID---' + this.userid)\r\n    \r\n    this.servicelocator.forward(\"/user/\"+this.userid);\r\n   \r\n  }\r\n  isLogin() {\r\n    let check = localStorage.getItem('fname');\r\n    if (check != \"null\" && check != null) {\r\n      this.form.data.fname = localStorage.getItem(\"fname\");\r\n      this.form.data.lname = localStorage.getItem(\"lname\");\r\n      this.form.data.loginId = localStorage.getItem(\"loginId\");\r\n      this.form.data.role = localStorage.getItem(\"role\"); \r\n\r\n\r\n     // console.log('fname is ---->>>' + this.form.data.fname);\r\n      return true;\r\n    } else {\r\n      return false;\r\n  }\r\n  }\r\n  goToLink() {\r\n    window.open('assets/doc/index.html', '_blank');\r\n  }\r\n  logout() {\r\n    var _self = this;\r\n\r\n    console.log('Logout', this.form);\r\n\r\n    // let url = this.servicelocator.endpoints.getEndpoint(this.servicelocator.endpoints.AUTH, \"logout\");\r\n\r\n    // this.servicelocator.httpService.post(url, this.form, function (res, error) {\r\n\r\n    //   if (error) {\r\n    //     alert(error);\r\n    //     return;\r\n    //   }\r\n    //   _self.loginId = \"null\";\r\n    //   localStorage.removeItem(\"token\");\r\n    //   localStorage.removeItem(\"fname\");\r\n    //   localStorage.removeItem(\"lname\");\r\n    //   localStorage.removeItem(\"loginId\");\r\n    //   localStorage.removeItem(\"role\")\r\n\r\n\r\n\r\n    //   console.log('After logout jsessionid---' +localStorage.getItem(\"JSESSIONID\") + \"  logout Pushpendra Singh Kushwah\");\r\n    \r\n\r\n      \r\n    //   this.form.message = \"Logout Successfully\";\r\n    //   console.log(this.form.message);\r\n    //  _self.servicelocator.router.navigateByUrl('/login/true');\r\n       _self.httpService.get(\"http://localhost:8084/Auth/logout\",function (res){\r\n      _self.servicelocator.router.navigateByUrl('/login/true');\r\n        if(res.success){\r\n          localStorage.clear();\r\n          _self.form.message = res.result.message;\r\n      //     _self.form.list = res.result.data;\r\n      //     localStorage.removeItem(\"JSESSIONID\");\r\n      //     _self.servicelocator.router.navigateByUrl('/login');\r\n      //     if(_self.form.list.length == 0){\r\n      //       _self.form.message = \"No record found\";\r\n      //       _self.form.error = true;\r\n      //     }\r\n      //     console.log(\"List Size\",_self.form.list.length );\r\n      //   }else{\r\n      //     _self.form.error = false;\r\n      //     _self.form.message = res.result.message;\r\n      //   }\r\n      //   console.log('FORM', _self.form);\r\n      };\r\n\r\n    });\r\n\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL29yZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    width: 100%;\\r\\n    /* Adjusted width to fill its container */\\r\\n    max-width: 600px;\\r\\n    /* Added max-width for a responsive design */\\r\\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\\r\\n    /* Added box-shadow for a better look */\\r\\n    margin-bottom: 20px;\\r\\n    /* Added margin bottom for spacing */\\r\\n    margin: auto;\\r\\n    /* Centering the card horizontally */\\r\\n  }\\r\\n\\r\\n  .container-fluid {\\r\\n    min-height: 100vh;\\r\\n    padding: 2% 0;\\r\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    /* Center content horizontally */\\r\\n    justify-content: space-between;\\r\\n    /* Ensure content spacing */\\r\\n  }\\r\\n\\r\\n  .content {\\r\\n    flex: 1;\\r\\n    /* Allows the content area to expand */\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    /* Center content horizontally */\\r\\n    align-items: center;\\r\\n    /* Center content vertically */\\r\\n    padding: 20px;\\r\\n    width: 100%;\\r\\n    /* Ensure content stretches */\\r\\n    max-width: 800px;\\r\\n    /* Adjusted max-width for content */\\r\\n  }\\r\\n\\r\\n  app-footer {\\r\\n    width: 100%;\\r\\n    flex-shrink: 0;\\r\\n    /* Prevents footer from shrinking */\\r\\n  }\\r\\n\\r\\n  form {\\r\\n    width: 100%;\\r\\n    /* Ensures form stretches to fit container */\\r\\n    max-width: 600px;\\r\\n    /* Adjust as needed for form width */\\r\\n  }\\r\\n\\r\\n  h2 {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n\\r\\n  .alert {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Order' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Order' | translate }}\\r\\n          </h2>\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{ 'Customer' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n              </div>\\r\\n              <select class=\\\"form-control\\\" name=\\\"customerIdId\\\" [(ngModel)]=\\\"form.data.customerId\\\"\\r\\n                aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"undefined\\\">{{ 'Select customer' | translate }}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.customerList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.customerId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.customerId}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{ 'Product Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-box grey-text\\\"></i></div>\\r\\n                <!-- Changed icon for product name -->\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" name=\\\"productName\\\" [(ngModel)]=\\\"form.data.productName\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{ 'Enter productName' | translate }}\\\" (keypress)=\\\"validateProductName($event)\\\"\\r\\n                maxlength=\\\"20\\\" minlength=\\\"3\\\">\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.productName\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.productName}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{ 'Quantity' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-sort-numeric-up grey-text\\\"></i></div>\\r\\n                <!-- Changed icon for quantity -->\\r\\n              </div>\\r\\n              <input type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{ 'Enter quantity' | translate }}\\\" (keypress)=\\\"validateQuantity($event)\\\">\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.quantity\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.quantity}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{ 'Order Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n              </div>\\r\\n              <input type=\\\"date\\\" name=\\\"orderDate\\\" [value]=\\\"form.data.orderDate | date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.orderDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.orderDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.orderDate }}</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/orderlist']\\\">{{ 'List' | translate }}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n\r\n  constructor(public locator: ServiceLocatorService, private formBuilder: FormBuilder, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ORDER, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.customerId);\r\n    console.log(form.customerId);\r\n    flag = flag && validator.isNotNullObject(form.quantity);\r\n    console.log(form.quantity);\r\n    flag = flag && validator.isNotNullObject(form.productName);\r\n    console.log(form.productName);\r\n    flag = flag && validator.isNotNullObject(form.orderDate);\r\n    console.log(form.orderDate);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.productName = data.productName;\r\n    form.quantity = data.quantity;\r\n    form.orderDate = data.orderDate;\r\n    form.customerId = data.customerId;\r\n  }\r\n\r\n  validateProductName(event: KeyboardEvent) {\r\n    const input = event.target as HTMLInputElement;\r\n    const pattern = /^[a-zA-Z]*$/;\r\n    const currentValue = input.value;\r\n    const key = event.key;\r\n\r\n    if (!pattern.test(key)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Ensure the total length is between 3 and 20\r\n    if (currentValue.length + 1 > 20) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateQuantity(event: KeyboardEvent) {\r\n    const input = event.target as HTMLInputElement;\r\n    const pattern = /^[0-9]*$/;\r\n    const key = event.key;\r\n\r\n    // Allow numbers only\r\n    if (!pattern.test(key)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Ensure the value is between 1 and 1000\r\n    const currentValue = input.value + key;\r\n    if (parseInt(currentValue) > 1000) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL29yZGVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    min-height: 100vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper full-height\\\">\\r\\n  <div class=\\\"container-fluid full-height\\\">\\r\\n    <div class=\\\"panel panel-primary full-height\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Order List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.orderDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search order Date' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.quantity\\\"\\r\\n            (ngModelChange)=\\\"validateQuantity()\\\" (blur)=\\\"clearQuantityError()\\\"\\r\\n            placeholder=\\\"{{ 'Search quantity' | translate }}\\\">\\r\\n          <div *ngIf=\\\"form.inputerror.quantity\\\" class=\\\"text-danger\\\">{{ form.inputerror.quantity }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.productName\\\"\\r\\n            (input)=\\\"validateProductName($event)\\\" (focus)=\\\"clearProductNameError()\\\"\\r\\n            placeholder=\\\"{{ 'Search productName' | translate }}\\\">\\r\\n          <div *ngIf=\\\"form.inputerror.productName\\\" class=\\\"text-danger\\\">{{ form.inputerror.productName }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"customer\\\" [(ngModel)]=\\\"form.searchParams.customerId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select Customer' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.customerList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row mt-3 justify-content-center\\\">\\r\\n          <div class=\\\"col-md-2\\\">\\r\\n            <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-2\\\">\\r\\n            <button (click)=\\\"forward('/order')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Order' |\\r\\n              translate\\r\\n              }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-2\\\">\\r\\n            <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-3 justify-content-center\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"table-responsive mt-3\\\">\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{ 'S.No' }}</th>\\r\\n                <th>{{ 'Quantity' }}</th>\\r\\n                <th>{{ 'product Name' }}</th>\\r\\n                <th>{{ 'Order Date' }}</th>\\r\\n                <th>{{ 'customer' }}</th>\\r\\n                <th>{{ 'Edit' }}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n                <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n                <td>{{ m.quantity }}</td>\\r\\n                <td>{{ m.productName }}</td>\\r\\n                <td>{{ convertToLocalDate(m.orderDate) }}</td>\\r\\n                <td>{{ m.customerName }}</td>\\r\\n                <td>\\r\\n                  <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/order/' + m.id)\\\"></button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n            }}</button>\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/orderlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-orderlist',\r\n  templateUrl: './orderlist.component.html',\r\n  styleUrls: ['./orderlist.component.css']\r\n})\r\nexport class OrderlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      customerList: [] // Initialize customer list\r\n    },\r\n    data: { id: null },\r\n    inputerror: { quantity: '', productName: '' },\r\n    searchParams: {\r\n      quantity: '',\r\n      date: '', // Initialize date field\r\n      customerId: null, // Initialize customerId to null\r\n      productName: '',\r\n      orderDate: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ORDER, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for quantity field\r\n  validateQuantity() {\r\n    const quantity = this.form.searchParams.quantity;\r\n    if (quantity === null || isNaN(Number(quantity)) || Number(quantity) <= 0 || Number(quantity) > 1000) {\r\n      this.form.inputerror.quantity = 'Invalid quantity. Please enter a number between 1 and 1000.';\r\n    } else {\r\n      this.form.inputerror.quantity = ''; // Clear error message if quantity is valid\r\n    }\r\n  }\r\n\r\n  // Clear quantity input error message when field is cleared\r\n  clearQuantityError() {\r\n    if (!this.form.searchParams.quantity) {\r\n      this.form.inputerror.quantity = '';\r\n    }\r\n  }\r\n\r\n  validateProductName(event: any) {\r\n    const value = event.target.value.trim();\r\n    const regex = /^[a-zA-Z]{1,20}$/; // Alphabetic characters only, length between 3 and 20\r\n\r\n    if (value === '') {\r\n      this.form.inputerror.productName = null; // Clear the error message if the field is empty\r\n    } else if (!regex.test(value)) {\r\n      this.form.inputerror.productName = 'Product Name should contain only alphabetic characters and be between 3 to 20 characters long';\r\n    } else {\r\n      this.form.inputerror.productName = null;\r\n      this.form.searchParams.productName = value;\r\n    }\r\n  }\r\n\r\n  // Clear productName error on input field focus\r\n  clearProductNameError() {\r\n    this.form.inputerror.productName = null;\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n\r\n    // Check if there are any input errors\r\n    if (this.form.inputerror.quantity || this.form.inputerror.productName) {\r\n      return; // Do not proceed with search if there are errors\r\n    }\r\n\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL293bmVyL293bmVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Owner' | translate }}</h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Owner' | translate }}</h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'VehicleId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.data.vehicleIdId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select vehicleId' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.vehicleIdId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.vehicleIdId }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Insurance Amount' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"insuranceAmount\\\" [(ngModel)]=\\\"form.data.insuranceAmount\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter payment term' | translate }}\\\" (keypress)=\\\"validateNumberInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.insuranceAmount\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.insuranceAmount }}</span>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n            \\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'DOB' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.dob\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dob }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/ownerlist']\\\">{{ 'List' | translate }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-owner',\r\n  templateUrl: './owner.component.html',\r\n  styleUrls: ['./owner.component.css']\r\n})\r\nexport class OwnerComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.OWNER, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.vehicleIdId);\r\n    console.log(form.vehicleIdId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.insuranceAmount);\r\n    console.log(form.insuranceAmount);\r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n    console.log(form.dob);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.insuranceAmount = data.insuranceAmount;\r\n    form.dob = data.dob;\r\n    form.vehicleIdId = data.vehicleIdId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateNumberInput(event: KeyboardEvent) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Allow only digits\r\n    if (!/^\\d$/.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL293bmVyL293bmVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  /* Adjustments for panel heading and main content wrapper */\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-bottom: 20px; /* Added margin bottom for spacing */\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    padding: 20px;\\r\\n    min-height: calc(100vh - 20px); /* Adjusted to ensure full height minus padding */\\r\\n    box-sizing: border-box; /* Ensures padding is included in height calculation */\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px; /* Added margin bottom for spacing */\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n    overflow-x: auto; /* Ensures horizontal scroll if table overflows */\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Owner List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dob\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dob' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.insuranceAmount\\\"\\r\\n            placeholder=\\\"{{ 'Search insuranceAmount' | translate }}\\\" (input)=\\\"validateInput($event, 'insuranceAmount')\\\">\\r\\n          <div *ngIf=\\\"insuranceAmountErrorMessage\\\" class=\\\"text-danger\\\">{{ insuranceAmountErrorMessage }}</div>\\r\\n        </div>\\r\\n        \\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.searchParams.vehicleIdId\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select vehicleId' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/owner')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add owner' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'Name' }}</th>\\r\\n              <th>{{ 'Insurance Amount' }}</th>\\r\\n              <th>{{ 'dob' }}</th>\\r\\n              <th>{{ 'vehicleId' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.insuranceAmount }}</td>\\r\\n              <td>{{ convertToLocalDate(m.dob) }}</td>\\r\\n              <td>{{ m.vehicleIdId }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/owner/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/ownerlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-ownerlist',\r\n  templateUrl: './ownerlist.component.html',\r\n  styleUrls: ['./ownerlist.component.css']\r\n})\r\nexport class OwnerlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n      name: '',\r\n      insuranceAmount: '',\r\n      dob: '', // Initialize date field\r\n      vehicleIdId: '',\r\n      date: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  insuranceAmountErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.OWNER, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0]; // Ensure it's in ISO format\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options: any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name, mobile, and insuranceAmount fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    } else if (field === 'insuranceAmount') {\r\n      const amount = parseFloat(value);\r\n      if (isNaN(amount) || amount < 10000 || amount > 500000) {\r\n        this.insuranceAmountErrorMessage = 'Please type a value between 10000 to 500000';\r\n      } else {\r\n        this.insuranceAmountErrorMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQvcGF0aWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Patient' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Patient' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Disease' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"diseaseId\\\" [(ngModel)]=\\\"form.data.diseaseId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select disease' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.diseaseList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.diseaseId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.diseaseId}}</span>\\r\\n            </div>\\r\\n\\r\\n           \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" maxlength=\\\"30\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n     \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Email' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" maxlength=\\\"50\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.email\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.email }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Mobile' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Mobile' | translate }}\\\" maxlength=\\\"10\\\" (keypress)=\\\"validatePhone($event)\\\">\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.mobile\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.mobile}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Date of Visit' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dateOfVisit\\\" \\r\\n                       [value]=\\\"form.data.dateOfVisit | date:'yyyy-MM-dd'\\\"\\r\\n                       (input)=\\\"form.data.dateOfVisit=parseDate($event.target.value)\\\"\\r\\n                       [min]=\\\"today\\\"\\r\\n                       class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.dateOfVisit\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfVisit }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/patientlist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.css']\r\n})\r\nexport class PatientComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  today: string;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.PATIENT, locator, route);\r\n    const todayDate = new Date();\r\n    this.today = todayDate.toISOString().split('T')[0];\r\n  }\r\n\r\n\r\n  // ngOnInit() {\r\n  //   const todayDate = new Date();\r\n  //   this.today = todayDate.toISOString().split('T')[0];\r\n  // }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.diseaseId);\r\n    console.log(form.diseaseId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.email);\r\n    console.log(form.email);\r\n    flag = flag && validator.isNotNullObject(form.mobile);\r\n    console.log(form.mobile);\r\n    flag = flag && validator.isNotNullObject(form.dateOfVisit);\r\n    console.log(form.dateOfVisit);\r\n\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.email = data.email;\r\n    form.mobile = data.mobile;\r\n    form.dateOfVisit = data.dateOfVisit;\r\n    form.diseaseId = data.diseaseId;\r\n\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQvcGF0aWVudGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Patient List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n            <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\r\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\"maxlength=\\\"10\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\r\\n            <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfVisit\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfVisit' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"diseaseId\\\" [(ngModel)]=\\\"form.searchParams.diseaseId\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select disease' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.diseaseList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/patient')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Patient' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'name' }}</th>\\r\\n              <th>{{ 'email' }}</th>\\r\\n              <th>{{ 'mobile' }}</th>\\r\\n              <th>{{ 'dateOfVisit' }}</th>\\r\\n              <th>{{ 'disease' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.email }}</td>\\r\\n              <td>{{ m.mobile }}</td>\\r\\n              <td>{{ convertToLocalDate(m.dateOfVisit) }}</td>\\r\\n              <td>{{ m.diseaseName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/patient/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/patientlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n            translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-patientlist',\r\n  templateUrl: './patientlist.component.html',\r\n  styleUrls: ['./patientlist.component.css']\r\n})\r\nexport class PatientlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n      date: '' // Initialize date field\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n  isValidMobileInput: boolean;\r\n  mobileErrorMessage: string;\r\n  isValidNameInput: boolean;\r\n  nameErrorMessage: string;\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.PATIENT, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value);\r\n      this.mobileErrorMessage = this.isValidMobileInput ? '' : 'Please type numbers only';\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value);\r\n      this.nameErrorMessage = this.isValidNameInput ? '' : 'Please type alphabets only';\r\n    } \r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvcHJvZHVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168),\\r\\n        rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 7%; padding-bottom:15%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Product'\\r\\n            |\\r\\n            translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update\\r\\n            Product' |\\r\\n            translate }}</h2>\\r\\n\\r\\n\\r\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div> -->\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Product Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/productlist')\\\" class=\\\"btn btn-md btn-warning\\\">\\r\\n                {{'List' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css']\r\n})\r\nexport class ProductComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.PRODUCT, locator, route);\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.description = data.description;\r\n    form.status = data.status;\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvcHJvZHVjdGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15;\\r\\n background: url(assets/files/back1.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Product List' | translate}}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{'Search Name' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n                  </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n            placeholder=\\\"{{'Search Description' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Product' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.productList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/product')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Priority' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-primary\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No' | translate }}</th>\\r\\n                <th>{{'Name' | translate }}</th>\\r\\n                <th>{{'Description' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\"\\r\\n                    value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/product/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                                    </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <table style=\\\"width: 100%;\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"width: 50%;\\\">\\r\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                }} </button>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\">\\r\\n              <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/productlist']\\\" (click)=\\\"exit()\\\">{{'Back' |\\r\\n                translate}}</a>\\r\\n            </td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                translate }}</button></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-productlist',\r\n  templateUrl: './productlist.component.html',\r\n  styleUrls: ['./productlist.component.css']\r\n})\r\nexport class ProductlistComponent extends BaseListCtl {\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.PRODUCT, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RkZXRhaWxzL3Byb2R1Y3RkZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Product Details' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Product Details' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Category' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.categoryId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Category' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.categoryId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.categoryId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-tag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Price' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-dollar-sign grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"number\\\" name=\\\"price\\\" [(ngModel)]=\\\"form.data.price\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Price' | translate }}\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.price\\\" class=\\\"alertRedColor\\\">{{ 'price' | translate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Date of Purchase' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dateOfPurchase\\\" [value]=\\\"form.data.dateOfPurchase | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dateOfPurchase=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.dateOfPurchase\\\" class=\\\"alertRedColor\\\">{{ 'dateOfPurchase' | translate\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/productdetailslist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-productdetails',\r\n  templateUrl: './productdetails.component.html',\r\n  styleUrls: ['./productdetails.component.css']\r\n})\r\nexport class ProductdetailsComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.PRODUCTDETAILS, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.categoryId);\r\n    console.log(form.categoryId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.price);\r\n    console.log(form.price);\r\n    flag = flag && validator.isNotNullObject(form.dateOfPurchase);\r\n    console.log(form.dateOfPurchase);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    console.log(form.description);\r\n\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.price = data.price;\r\n    form.dateOfPurchase = data.dateOfPurchase;\r\n    form.description = data.description;\r\n    form.categoryId = data.categoryId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RkZXRhaWxzL3Byb2R1Y3RkZXRhaWxzbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Product Details List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.price\\\"\\r\\n            placeholder=\\\"{{ 'Search price' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfPurchase\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfPurchase' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.searchParams.categoryId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\" value=\\\"\\\">{{ 'Select category' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <button (click)=\\\"forward('/productdetails')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{ 'Add Product Details' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' | translate }}</th>\\r\\n              <th>{{ 'name' | translate }}</th>\\r\\n              <th>{{ 'price' | translate }}</th>\\r\\n              <th>{{ 'dateOfPurchase' | translate }}</th>\\r\\n              <th>{{ 'description' | translate }}</th>\\r\\n              <th>{{ 'category' | translate }}</th>\\r\\n              <th>{{ 'Edit' | translate }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.price }}</td>\\r\\n              <td>{{ convertToLocalDate(m.dateOfPurchase) }}</td>\\r\\n              <td>{{ m.description }}</td>\\r\\n              <td>{{ m.categoryName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/productdetails/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n            }}</button>\\r\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/productdetailslist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n              translate }}</a>\\r\\n          </div>\\r\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-productdetailslist',\r\n  templateUrl: './productdetailslist.component.html',\r\n  styleUrls: ['./productdetailslist.component.css']\r\n})\r\nexport class ProductdetailslistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n      name: '', // Add name field for search\r\n      price: null,\r\n      description: '',\r\n      dateOfPurchase: '',\r\n      categoryId: null,\r\n      date: '' // Initialize date field\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.PRODUCTDETAILS, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Project' | translate }}</h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Project' | translate }}</h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Category' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.categoryId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select category' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.categoryId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.categoryId }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Project Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" maxlength=\\\"30\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Version' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"version\\\" [(ngModel)]=\\\"form.data.version\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter version' | translate }}\\\" maxlength=\\\"10\\\" (keypress)=\\\"validateNumberAndDotInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.version\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.version }}</span>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n            \\r\\n            \\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Open Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"openDate\\\" [value]=\\\"form.data.openDate | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.openDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.openDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.openDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/projectlist']\\\">{{ 'List' | translate }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent  extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.PROJECT, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n  \r\n  \r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.categoryId);\r\n    console.log(form.categoryId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.version);\r\n    console.log(form.paymentTerm);\r\n    flag = flag && validator.isNotNullObject(form.openDate);\r\n    console.log(form.openDate);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.version = data.version;\r\n    form.openDate = data.openDate;\r\n    form.categoryId = data.categoryId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateNumberInput(event: KeyboardEvent) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Allow only digits\r\n    if (!/^\\d$/.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n  validateNumberAndDotInput(event: KeyboardEvent) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Allow only digits and dot\r\n    if (!/^[\\d.]$/.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  /* Adjustments for panel heading and main content wrapper */\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-bottom: 20px; /* Added margin bottom for spacing */\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    padding: 20px;\\r\\n    min-height: calc(100vh - 20px); /* Adjusted to ensure full height minus padding */\\r\\n    box-sizing: border-box; /* Ensures padding is included in height calculation */\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px; /* Added margin bottom for spacing */\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n    overflow-x: auto; /* Ensures horizontal scroll if table overflows */\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Project List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\" maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.openDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search openDate' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.version\\\"\\r\\n            placeholder=\\\"{{ 'Search version' | translate }}\\\" (keypress)=\\\"validateNumericInput($event)\\\" maxlength=\\\"10\\\" (input)=\\\"validateInput($event, 'version')\\\">\\r\\n            <div *ngIf=\\\"!isValidVersionInput\\\" class=\\\"text-danger\\\">{{ versionErrorMessage }}</div>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.searchParams.categoryId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select Customer' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/project')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add project' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'Project Name' }}</th>\\r\\n              <th>{{ 'version' }}</th>\\r\\n              <th>{{ 'open Date' }}</th>\\r\\n              <th>{{ 'Category' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.version }}</td>\\r\\n              <td>{{ convertToLocalDate(m.openDate) }}</td>\\r\\n              <td>{{ m.categoryName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/project/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/projectlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-projectlist',\r\n  templateUrl: './projectlist.component.html',\r\n  styleUrls: ['./projectlist.component.css']\r\n})\r\nexport class ProjectlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      categoryList: [] \r\n    },\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n      name: '',\r\n      date: '', \r\n      categoryId: null, \r\n      version: '',\r\n      opendate: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n\r\n  isValidVersionInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  versionErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.PROJECT, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0]; // Ensure it's in ISO format\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name and mobile fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'version') {\r\n    this.isValidVersionInput = value.replace(/[^0-9.]/g, ''); // Allow only numbers and dots\r\n    if (!this.isValidVersionInput) {\r\n      this.versionErrorMessage = '';\r\n    }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  validateNumericInput(event: KeyboardEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n  \r\n    // Regular expression to test if the character is a number, dot, or comma\r\n    const allowedRegex = /^[0-9.,]$/;\r\n  \r\n    // Test if the input matches the allowed characters and if the current input length is less than 10\r\n    if (!allowedRegex.test(charStr) || inputElement.value.length >= 10) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  validateAlphabetInput(event: KeyboardEvent) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15;\\r\\n background: url(assets/files/back1.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n            <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n                \\r\\n                <div class=\\\"text-center\\\">\\r\\n                    <h1 class=\\\"text-primary font-weight-bold\\\">{{'Role List' | translate}}</h1>\\r\\n                  </div>\\r\\n                </div>\\r\\n          \\r\\n                <div class=\\\"row p-1\\\">\\r\\n                  <div class=\\\"col-sm-1\\\"></div>\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n                      placeholder=\\\"{{'Search Name' | translate}}\\\">\\r\\n          \\r\\n                  </div>\\r\\n                  <!-- <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n                  </div> -->\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n                      placeholder=\\\"{{'Search Description' | translate}}\\\">\\r\\n          \\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n                    <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n                      <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n                      <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n          \\r\\n                  \\r\\n                 \\r\\n                  <div class=\\\"col-sm-1 ml-3\\\">\\r\\n                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n                      {{'Search' | translate }}</button>\\r\\n                  </div>\\r\\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                  <div class=\\\"col-lg-2 ml-4\\\">\\r\\n                    <button (click)=\\\"forward('/role')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Role' | translate}}\\r\\n                    </button>\\r\\n                  </div>\\r\\n          \\r\\n                  <div class=\\\"col-sm-1\\\">\\r\\n                    <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n                      {{'Delete'| translate}}</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n            <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n                {{form.message}}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n                {{form.message}}\\r\\n              </div>\\r\\n\\r\\n          \\r\\n\\r\\n            <div class=\\\"p-1\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-primary\\\">\\r\\n                        <thead class=\\\"thead-light text-uppercase\\\">\\r\\n                            <tr>\\r\\n                                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                                <th>{{'S.No' | translate }}</th>\\r\\n                                <th>{{'Name' | translate }}</th>\\r\\n                                <th>{{'Description' | translate }}</th>\\r\\n                                <th>{{'Edit' | translate}}</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                                </td>\\r\\n                                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                                <td> {{ m.name }} </td>\\r\\n                                <td> {{ m.description }} </td>\\r\\n                                <td>\\r\\n                                    <a (click)=\\\"forward( '/role/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                                    </a>\\r\\n                                    <!-- /\\r\\n                                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                                    </a> -->\\r\\n                                </td>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div><table style=\\\"width: 100%;\\\">\\r\\n                    <tr>\\r\\n                      <td style=\\\"width: 50%;\\\">\\r\\n                  <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                    }} </button></td>\\r\\n                    <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                    <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\">\\r\\n                      <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/rolelist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n        \\r\\n          \\r\\n          \\r\\n                \\r\\n                    <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                      translate }}</button></td>\\r\\n                    </tr>\\r\\n                    </table>\\r\\n              \\r\\n                    \\r\\n               \\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-role-list',\r\n    templateUrl: './role-list.component.html',\r\n    styleUrls: ['./role.component.css']\r\n  })\r\n\r\n\r\n  export class RoleListComponent extends BaseListCtl {\r\n    constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n      super(locator.endpoints.ROLE, locator, route);\r\n    }\r\n  \r\n  }","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZS9yb2xlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9yb2xlL3JvbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168),\\r\\n        rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 7%; padding-bottom:15%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Role' |\\r\\n            translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Role' |\\r\\n            translate }}</h2>\\r\\n\\r\\n\\r\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div> -->\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Role Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/rolelist')\\\" class=\\\"btn btn-md btn-warning\\\">\\r\\n                {{'List' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-role',\r\n  templateUrl: './role.component.html',\r\n  styleUrls: ['./role.component.css']\r\n})\r\n\r\nexport class RoleComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.ROLE, locator, route);\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.description = data.description;\r\n    form.status = data.status;\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlL3JvdXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Route' | translate }}</h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Route' | translate }}</h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'VehicleId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.data.vehicleIdId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select vehicleId' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.vehicleIdId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.vehicleIdId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" maxlength=\\\"30\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Allowed Speed' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"allowedSpeed\\\" [(ngModel)]=\\\"form.data.allowedSpeed\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter allowedSpeed' | translate }}\\\" maxlength=\\\"3\\\" (keypress)=\\\"validateNumericInput($event)\\\" (input)=\\\"validateMaxValue()\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.allowedSpeed\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.allowedSpeed }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Start Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"startDate\\\" [value]=\\\"form.data.startDate | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.startDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.startDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.startDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/routelist']\\\">{{ 'List' | translate }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-route',\r\n  templateUrl: './route.component.html',\r\n  styleUrls: ['./route.component.css']\r\n})\r\nexport class RouteComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ROUTE, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n  \r\n  \r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.vehicleIdId);\r\n    console.log(form.vehicleIdId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.allowedSpeed);\r\n    console.log(form.allowedSpeed);\r\n    flag = flag && validator.isNotNullObject(form.startDate);\r\n    console.log(form.startDate);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.allowedSpeed = data.allowedSpeed;\r\n    form.startDate = data.startDate;\r\n    form.vehicleIdId = data.vehicleIdId;\r\n\r\n\r\n  }\r\n\r\n \r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n  validateNumericInput(event: KeyboardEvent) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a number\r\n    const numberRegex = /^[0-9]+$/;\r\n\r\n    // Test if the input matches the allowed characters and does not exceed the length\r\n    if (!numberRegex.test(charStr) || this.form.data.allowedSpeed.length >= 3) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateMaxValue() {\r\n    if (this.form.data.allowedSpeed && parseInt(this.form.data.allowedSpeed) > 170) {\r\n      this.form.data.allowedSpeed = '170'; // Reset to max allowed value\r\n    }\r\n  }\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlL3JvdXRlbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Route List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n        <!--  <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\r\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\r\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search startDate' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.allowedSpeed\\\"\\r\\n            placeholder=\\\"{{ 'Search allowedSpeed' | translate }}\\\" maxlength=\\\"3\\\" (keypress)=\\\"validateNumericInput($event)\\\" (input)=\\\"validateMaxValue()\\\">\\r\\n          <!-- <div *ngIf=\\\"!isValidAllowedSpeed\\\" class=\\\"text-danger\\\">{{ allowedSpeedErrorMessage }}</div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.searchParams.vehicleIdId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select VehicleId' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n      \\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/route')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Route' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'name' }}</th>\\r\\n              <th>{{ 'allowed Speed' }}</th>\\r\\n              <th>{{ 'Start date' }}</th>\\r\\n              <th>{{ 'vehicleId' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.allowedSpeed }}</td>\\r\\n              <td>{{ convertToLocalDate(m.startDate) }}</td>\\r\\n              <td>{{ m.vehicleIdId }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/route/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/routelist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n            translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-routelist',\r\n  templateUrl: './routelist.component.html',\r\n  styleUrls: ['./routelist.component.css']\r\n})\r\nexport class RoutelistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      vehicleIdList: [] // Initialize customer list\r\n    },\r\n    data: { id: null ,\r\n      allowedSpeed:''\r\n    },\r\n    inputerror: { quantity: '', productName: '' },\r\n    searchParams: {\r\n      name: '',\r\n      date: '', // Initialize date field\r\n      vehicleIdId: null, // Initialize vehicleIdId to null\r\n      allowedSpeed: '',\r\n      startDate: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  isValidAllowedSpeed: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  allowedSpeedErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.ROUTE, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    const options: any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name, mobile, and allowedSpeed fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    } else if (field === 'allowedSpeed') {\r\n      if (value === '') {\r\n        this.isValidAllowedSpeed = true; // Treat empty input as valid\r\n        this.allowedSpeedErrorMessage = '';\r\n      // } else {\r\n      //   const speed = parseInt(value, 10);\r\n      //   this.isValidAllowedSpeed = speed >= 70 && speed <= 150; // Check if the input is between 70 and 150\r\n      //   if (!this.isValidAllowedSpeed) {\r\n      //     this.allowedSpeedErrorMessage = 'Please type a valid allowed speed (70-150)';\r\n      //   } else {\r\n      //     this.allowedSpeedErrorMessage = '';\r\n      //   }\r\n      }\r\n    }\r\n  }\r\n  validateNumericInput(event: KeyboardEvent) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a number\r\n    const numberRegex = /^[0-9]+$/;\r\n\r\n    // Test if the input matches the allowed characters and does not exceed the length\r\n    if (!numberRegex.test(charStr) || this.form.data.allowedSpeed.length >= 3) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateMaxValue() {\r\n    if (this.form.data.allowedSpeed && parseInt(this.form.data.allowedSpeed) > 170) {\r\n      this.form.data.allowedSpeed = '170'; // Reset to max allowed value\r\n    }\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { DataValidator } from './utility/data-validator';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EndpointServiceService } from './endpoint-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServiceLocatorService {\r\n\r\n  \r\n  httpService = null;\r\n  dataValidator = null;\r\n  router = null;\r\n  endpoints = null;\r\n\r\n  constructor(private hs: HttpServiceService, private dv: DataValidator, private r: Router, private ep: EndpointServiceService) {\r\n    this.httpService = hs;\r\n    this.dataValidator = dv;\r\n    this.router = r;\r\n    this.endpoints = ep;\r\n  }\r\n \r\n  /**\r\n   * get path variable from url\r\n   * \r\n   * @param route \r\n   * @param callback \r\n   */\r\n  getPathVariable(route: ActivatedRoute, callback) {\r\n    route.params.subscribe(params => {\r\n      callback(params)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Forward to page \r\n   * \r\n   * @param page \r\n   */\r\n  forward(page){\r\n    this.router.navigateByUrl(page);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  spinner works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'Student List' | translate }}</h2>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.enrolNo\\\"\\r\\n            placeholder=\\\"{{'Search Enrollment' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\r\\n            placeholder=\\\"{{'Search College' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.email\\\"\\r\\n            placeholder=\\\"{{'Search Email' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNo\\\"\\r\\n            placeholder=\\\"{{'Search Mobile Number' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n          <button (click)=\\\"forward('/student')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Student' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No' | translate }}</th>\\r\\n                <th>{{'Enrollment No' | translate }}</th>\\r\\n                <th>{{'First Name' | translate }}</th>\\r\\n                <th>{{'Last Name' | translate }}</th>\\r\\n                <th>{{'College' | translate }}</th>\\r\\n                <th>{{'DOB' | translate }}</th>\\r\\n                <th>{{'Mobile' | translate }}</th>\\r\\n                <th>{{'Email' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td>{{m.enrolNo}}</td>\\r\\n                <td> {{ m.firstName }} </td>\\r\\n                <td> {{ m.lastName }} </td>\\r\\n                <td> {{ m.collegeName }} </td>\\r\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}}</td>\\r\\n                <td> {{ m.phoneNo }} </td>\\r\\n                <td> {{ m.email }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/student/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n              <tr> <td style=\\\"width: 50%;\\\"><button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' |\\r\\n                    translate }} </button>\\r\\n                </td>  \\r\\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/studentlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n                <td>\\r\\n                  <button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }} </button>\\r\\n                 </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-student-list',\r\n  templateUrl: './student-list.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\n\r\nexport class StudentListComponent extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.STUDENT, locator, route);\r\n  }\r\n\r\n\r\n\r\n}","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; \\r\\npadding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Student' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Student' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Enrollment No' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"enrolNo\\\" [(ngModel)]=\\\"form.data.enrolNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Enrollment Number' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.enrolNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstN\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastN\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select College' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.collegeId}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\r\\n          </div>\\r\\n          \\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"  ><b>{{'Mobile No' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\" ></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" maxlength=\\\"10\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/studentlist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-student',\r\n  templateUrl: './student.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\nexport class StudentComponent extends BaseCtl {\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.STUDENT, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    flag = flag && validator.isNotNullObject(form.enrolNo);\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    flag = flag && validator.isNotNullObject(form.email);\r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.collegeId = data.collegeId;\r\n    console.log(form.collegeId + \" inside populateForm method\");\r\n\r\n    form.email = data.email;\r\n    form.enrolNo = data.enrolNo;\r\n    form.dob = data.dob;\r\n\r\n    //let ndate = new Date(data.dob);\r\n   \r\n    //console.log(form.dob + 'date ------',ndate)\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.phoneNo = data.phoneNo;\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Subject List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\r\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/subject')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Subject' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate}}</th>\\r\\n                <th>{{'Name' | translate}}</th>\\r\\n                <th>{{'Course' | translate}}</th>\\r\\n               \\r\\n                <th>{{'Description' | translate}}</th>\\r\\n                <th>{{'Edit' | translate }}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.subjectName}} </td>\\r\\n                <td> {{ m.courseName}} </td>\\r\\n               \\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/subject/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/subjectlist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n                \\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-subject-list',\r\n  templateUrl: './subject-list.component.html',\r\n  styleUrls: ['./subject.component.css']\r\n})\r\nexport class SubjectListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.SUBJECT, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3Qvc3ViamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:13%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Subject' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Subject' | translate}}</h2>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"subjectName\\\" [(ngModel)]=\\\"form.data.subjectName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Subject Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate}}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/subjectlist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\r\\n              </button></div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { SearchResponse, RecordResponse } from '../response';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-subject',\r\n  templateUrl: './subject.component.html',\r\n  styleUrls: ['./subject.component.css']\r\n})\r\nexport class SubjectComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.SUBJECT, locator, route);\r\n\r\n  }\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.subjectName);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.subjectName = data.subjectName;\r\n    form.description = data.description;\r\n    form.courseId = data.courseId;\r\n    console.log('Populated Form', form);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBsaWVyL3N1cHBsaWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Supplier' | translate }}</h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Supplier' | translate }}</h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Category' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.categoryId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select category' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.categoryId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.categoryId }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" maxlength=\\\"30\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Payment Term' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"paymentTerm\\\" [(ngModel)]=\\\"form.data.paymentTerm\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter payment term' | translate }}\\\" maxlength=\\\"4\\\" (keypress)=\\\"validateNumberInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.paymentTerm\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.paymentTerm }}</span>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n            \\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Registration Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"registrationDate\\\" [value]=\\\"form.data.registrationDate | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.registrationDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.registrationDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.registrationDate }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/supplierlist']\\\">{{ 'List' | translate }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-supplier',\r\n  templateUrl: './supplier.component.html',\r\n  styleUrls: ['./supplier.component.css']\r\n})\r\nexport class SupplierComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.SUPPLIER, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n  \r\n  \r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.categoryId);\r\n    console.log(form.categoryId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.paymentTerm);\r\n    console.log(form.paymentTerm);\r\n    flag = flag && validator.isNotNullObject(form.registrationDate);\r\n    console.log(form.registrationDate);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.paymentTerm = data.paymentTerm;\r\n    form.registrationDate = data.registrationDate;\r\n    form.categoryId = data.categoryId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateNumberInput(event: KeyboardEvent) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Allow only digits\r\n    if (!/^\\d$/.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBsaWVyL3N1cHBsaWVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    padding: 20px;\\r\\n    min-height: calc(100vh - 20px);\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n    overflow-x: auto;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Supplier List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.registrationDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search registrationDate' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.paymentTerm\\\"\\r\\n            placeholder=\\\"{{ 'Search paymentTerm' | translate }}\\\" (input)=\\\"validateInput($event, 'paymentTerm')\\\" maxlength=\\\"4\\\">\\r\\n          <div *ngIf=\\\"!isValidPaymentTermInput\\\" class=\\\"text-danger\\\">{{ paymentTermErrorMessage }}</div>\\r\\n        </div>\\r\\n        \\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.searchParams.categoryId\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select category' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/supplier')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add supplier' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'Name' }}</th>\\r\\n              <th>{{ 'Payment Term' }}</th>\\r\\n              <th>{{ 'Registration Date' }}</th>\\r\\n              <th>{{ 'Category' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.paymentTerm }}</td>\\r\\n              <td>{{ convertToLocalDate(m.registrationDate) }}</td>\\r\\n              <td>{{ m.categoryName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/supplier/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/supplierlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-supplierlist',\r\n  templateUrl: './supplierlist.component.html',\r\n  styleUrls: ['./supplierlist.component.css']\r\n})\r\nexport class SupplierlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      categoryList: [] // Initialize customer list\r\n    },\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n      name: '',\r\n      paymentTerm: '',\r\n      registrationdate: '',\r\n      categoryId: null,\r\n      date: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  isValidPaymentTermInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  paymentTermErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.SUPPLIER, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name, mobile, and payment term fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value);\r\n      this.mobileErrorMessage = this.isValidMobileInput ? '' : 'Please type numbers only';\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value);\r\n      this.nameErrorMessage = this.isValidNameInput ? '' : 'Please type alphabets only';\r\n    } else if (field === 'paymentTerm') {\r\n      const paymentTermValue = Number(value);\r\n      this.isValidPaymentTermInput = paymentTermValue >= 0 && paymentTermValue <= 100000 && value.length <= 4;\r\n      this.paymentTermErrorMessage = this.isValidPaymentTermInput ? '' : 'Please type a numbers only';\r\n    }\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    this.form.pageNo = 0;\r\n    this.search();\r\n  }\r\n\r\n  // Search method\r\n  search() {\r\n    this.form.searchMessage = null;\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'TimeTable List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\r\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/timetable')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add TimeTable' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Semester' | translate }}</th>\\r\\n                <th>{{'ExamDate' | translate }}</th>\\r\\n                <th>{{'ExamTime' | translate }}</th>\\r\\n                <th>{{'Course' | translate }}</th>\\r\\n                <th>{{'Subject' | translate }}</th>\\r\\n                <th>{{'Description' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              \\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index;\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.semester }} </td>\\r\\n                <td> {{ m.examDate | date : 'dd-MM-yyyy' }} </td>\\r\\n                <td> {{ m.examTime }} </td>\\r\\n                <td> {{ m.courseName }} </td>\\r\\n                <td> {{ m.subjectName }} </td>\\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/timetable/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                      <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                    </a>\\r\\n                  </td> -->\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/timetablelist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n              \\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-timetable-list',\r\n  templateUrl: './timetable-list.component.html',\r\n  styleUrls: ['./timetable.component.css']\r\n})\r\nexport class TimetableListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.TIMETABLE, locator, route);\r\n    let ppSize= 0;\r\n  }\r\n  \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWV0YWJsZS90aW1ldGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add TimeTable' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update TimeTable' | translate }}</h2>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Course' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          \\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-globe grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Subject' | translate }}</option>\\r\\n            \\r\\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Semester' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list-ol grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"semester\\\" [(ngModel)]=\\\"form.data.semester\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"> {{'Please select' | translate}} </option>\\r\\n                  <option value=\\\"1 Semester\\\">1 Semester</option>\\r\\n                  <option value=\\\"2 Semester\\\">2 Semester</option>\\r\\n                  <option value=\\\"3 Semester\\\">3 Semester</option>\\r\\n                  <option value=\\\"4 Semester\\\">4 Semester</option>\\r\\n                  <option value=\\\"5 Semester\\\">5 Semester</option>\\r\\n                  <option value=\\\"6 Semester\\\">6 Semester</option>\\r\\n                  <option value=\\\"7 Semester\\\">7 Semester</option>\\r\\n                  <option value=\\\"8 Semester\\\">8 Semester</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.semester}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Date' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"examDate\\\" [value]=\\\"form.data.examDate | date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.examDate=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examDate}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Time' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"examTime\\\" [(ngModel)]=\\\"form.data.examTime\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select examTime' | translate }}</option>\\r\\n            \\r\\n                  <option selected disabled>{{'Please select' | translate }}</option>\\r\\n                  <option value=\\\"08:00 AM to 11:00 AM\\\">08:00 AM to 11:00 AM</option>\\r\\n                  <option value=\\\"12:00PM to 3:00PM\\\">12:00PM to 3:00PM</option>\\r\\n                  <option value=\\\"3:00PM to 6:00PM\\\">3:00PM to 6:00PM</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examTime}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea  name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\"  (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button  *ngIf=\\\"form.data.id>0\\\"  (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n              {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n           \\r\\n           \\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/timetablelist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-timetable',\r\n  templateUrl: './timetable.component.html',\r\n  styleUrls: ['./timetable.component.css']\r\n})\r\n\r\n\r\nexport class TimetableComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.TIMETABLE, locator, route);\r\n  }\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.semester);\r\n    flag = flag && validator.isNotNullObject(form.examDate);\r\n    console.log(form.examDate);\r\n    flag = flag && validator.isNotNullObject(form.examTime);\r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    flag = flag && validator.isNotNullObject(form.subjectId);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    \r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.courseId = data.courseId;\r\n    form.subjectId = data.subjectId;\r\n    form.semester = data.semester;\r\n    form.examDate = data.examDate;\r\n    form.examTime = data.examTime;\r\n    form.description = data.description;\r\n\r\n    console.log('Populated Form', form);\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zYWN0aW9ucy90cmFuc2FjdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Transactions' |\\r\\n              translate }}</h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Transactions' |\\r\\n              translate }}</h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'AccountId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"accountIdId\\\" [(ngModel)]=\\\"form.data.accountIdId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select accountId' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.accountIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.accountIdId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.accountIdId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Transaction Type' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"transactionType\\\" [(ngModel)]=\\\"form.data.transactionTypeId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select transactionType' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.transactionTypeList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.transactionTypeId\\\"\\r\\n                class=\\\"alertRedColor\\\">{{form.inputerror.transactionTypeId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-align-left grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control textarea-height\\\"\\r\\n                  placeholder=\\\"{{ 'Enter description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.description }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Transaction Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"transactionDate\\\" [value]=\\\"form.data.transactionDate | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.transactionDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.transactionDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.transactionDate\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/transactionslist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-transactions',\r\n  templateUrl: './transactions.component.html',\r\n  styleUrls: ['./transactions.component.css']\r\n})\r\nexport class TransactionsComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.TRANSACTIONS, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n  // validatePaymentTerm() {\r\n  //   const paymentTerm = this.form.data.paymentTerm;\r\n  //   const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\r\n  //   if (!paymentTermPattern.test(paymentTerm)) {\r\n  //     this.form.inputerror.paymentTerm = 'Invalid payment term';\r\n  //   } else {\r\n  //     delete this.form.inputerror.paymentTerm;\r\n  //   }\r\n  // }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    console.log(form.description);\r\n    flag = flag && validator.isNotNullObject(form.accountIdId);\r\n    console.log(form.accountIdId);\r\n    flag = flag && validator.isNotNullObject(form.transactionTypeId);\r\n    console.log(form.transactionTypeId);\r\n    flag = flag && validator.isNotNullObject(form.transactionDate);\r\n    console.log(form.transactionDate);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in transactioncomponent');\r\n    form.description = data.description;\r\n    form.transactionTypeId = data.transactionTypeId;\r\n    form.transactionDate = data.transactionDate;\r\n    form.accountIdId = data.accountIdId;\r\n\r\n\r\n  }\r\n\r\n  // validatePhone(event: KeyboardEvent) {\r\n  //   const input = event.key;\r\n  //   // Check if the input is a number or backspace\r\n  //   if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n  //     event.preventDefault();\r\n  //   }\r\n  //   // Limit the input to 10 characters\r\n  //   if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n  //     event.preventDefault();\r\n  //   }\r\n  // }\r\n\r\n  // validateAlphabetInput(event) {\r\n  //   const charCode = event.which || event.keyCode;\r\n  //   const charStr = String.fromCharCode(charCode);\r\n\r\n  //   // Regular expression to test if the character is a letter\r\n  //   const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n  //   // Test if the input matches the allowed characters\r\n  //   if (!letterRegex.test(charStr)) {\r\n  //     event.preventDefault();\r\n  //   }\r\n\r\n  //   // Optionally, check the entire value against the name format regex\r\n  //   const inputElement = event.target;\r\n  //   const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n  //   // Regex for valid name format \"FirstName LastName\"\r\n  //   const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n  //   // Check if the current value matches the valid name format\r\n  //   if (!nameRegex.test(inputValue)) {\r\n  //     // Handle invalid input (e.g., disable submit button, show error message)\r\n  //     // Example:\r\n  //     inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n  //   } else {\r\n  //     inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zYWN0aW9ucy90cmFuc2FjdGlvbnNsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Transaction List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.transactionDate\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search transactionDate' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"accountIdId\\\" [(ngModel)]=\\\"form.searchParams.accountIdId\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select accountId' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.accountIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"transactionTypeId\\\" [(ngModel)]=\\\"form.searchParams.transactionTypeId\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select transactionType' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.transactionTypeList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/transactions')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Transaction'\\r\\n            | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'description' }}</th>\\r\\n              <th>{{ 'accountId' }}</th>\\r\\n              <th>{{ 'Transaction Date' }}</th>\\r\\n              <th>{{ 'Transaction Type' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.description }}</td>\\r\\n              <td>{{ m.accountIdId }}</td>\\r\\n              <td>{{ convertToLocalDate(m.transactionDate) }}</td>\\r\\n              <td>{{ m.transactionTypeName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/transactions/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/transactionslist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-transactionslist',\r\n  templateUrl: './transactionslist.component.html',\r\n  styleUrls: ['./transactionslist.component.css']\r\n})\r\nexport class TransactionslistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: [],\r\n    data: { id: null },\r\n    inputerror: {},\r\n    searchParams: {\r\n      description: '',\r\n      date: '', // Initialize date field\r\n      accountIdId: '',\r\n      transactionTypeId: '',\r\n      transactionDate: ''\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  isValidAllowedSpeed: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n  allowedSpeedErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.TRANSACTIONS, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name, mobile, and allowedSpeed fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    } else if (field === 'allowedSpeed') {\r\n      if (value === '') {\r\n        this.isValidAllowedSpeed = true; // Treat empty input as valid\r\n        this.allowedSpeedErrorMessage = '';\r\n      } else {\r\n        const speed = parseInt(value, 10);\r\n        this.isValidAllowedSpeed = speed >= 70 && speed <= 150; // Check if the input is between 70 and 150\r\n        if (!this.isValidAllowedSpeed) {\r\n          this.allowedSpeedErrorMessage = 'Please type a valid allowed speed (70-150)';\r\n        } else {\r\n          this.allowedSpeedErrorMessage = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zcG9ydGF0aW9uL3RyYW5zcG9ydGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Transportation' |\\r\\n              translate }}</h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Transportation' |\\r\\n              translate }}</h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Mode' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"modeId\\\" [(ngModel)]=\\\"form.data.modeId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select mode' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.modeList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.modeId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.modeId }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-home grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <textarea name=\\\"address\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control textarea-height\\\"\\r\\n                  placeholder=\\\"{{ 'Enter Description' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\" maxlength=\\\"100\\\"></textarea>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Cost' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"cost\\\" [(ngModel)]=\\\"form.data.cost\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter cost' | translate }}\\\" maxlength=\\\"7\\\" (keypress)=\\\"validateNumericInput($event)\\\" (input)=\\\"validateMaxValue()\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.cost\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.cost }}</span>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.date=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.date\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.date }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/transportationlist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-transportation',\r\n  templateUrl: './transportation.component.html',\r\n  styleUrls: ['./transportation.component.css']\r\n})\r\nexport class TransportationComponent extends BaseCtl {\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.TRANSPORTATION, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n\r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Paras----------.\");\r\n\r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n  }\r\n\r\n  validatePaymentTerm() {\r\n    const paymentTerm = this.form.data.paymentTerm;\r\n    const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\r\n    if (!paymentTermPattern.test(paymentTerm)) {\r\n      this.form.inputerror.paymentTerm = 'Invalid payment term';\r\n    } else {\r\n      delete this.form.inputerror.paymentTerm;\r\n    }\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.modeId);\r\n    console.log(form.modeId);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    console.log(form.description);\r\n    flag = flag && validator.isNotNullObject(form.cost);\r\n    console.log(form.cost);\r\n    flag = flag && validator.isNotNullObject(form.date);\r\n    console.log(form.date);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.description = data.description;\r\n    form.cost = data.cost;\r\n    form.date = data.date;\r\n    form.modeId = data.modeId;\r\n  }\r\n\r\n  validateAlphabetInput(event: KeyboardEvent) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  validateNumericInput(event: KeyboardEvent) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a number\r\n    const numberRegex = /^[0-9]+$/;\r\n\r\n    // Test if the input matches the allowed characters and does not exceed the length\r\n    if (!numberRegex.test(charStr) || this.form.data.cost.length >= 7) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateMaxValue() {\r\n    if (this.form.data.cost && parseInt(this.form.data.cost) > 5000000) {\r\n      this.form.data.cost = '5000000'; // Reset to max allowed value\r\n    }\r\n  }\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  test() {\r\n    // Implement your test logic here\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zcG9ydGF0aW9uL3RyYW5zcG9ydGF0aW9ubGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  /* Adjustments for panel heading and main content wrapper */\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-bottom: 20px;\\r\\n    /* Added margin bottom for spacing */\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    padding: 20px;\\r\\n    min-height: calc(100vh - 20px);\\r\\n    /* Adjusted to ensure full height minus padding */\\r\\n    box-sizing: border-box;\\r\\n    /* Ensures padding is included in height calculation */\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n    /* Added margin bottom for spacing */\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n    overflow-x: auto;\\r\\n    /* Ensures horizontal scroll if table overflows */\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Transportation List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\" maxlength=\\\"100\\\" pattern=\\\"[a-zA-Z]*\\\"\\r\\n            (ngModelChange)=\\\"validateDescription($event)\\\">\\r\\n            <div *ngIf=\\\"!isValidDescription\\\" class=\\\"text-danger\\\">{{ descriptionErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.cost\\\"\\r\\n            placeholder=\\\"{{ 'Search cost' | translate }}\\\"  maxlength=\\\"7\\\" (keypress)=\\\"validateNumericInput($event)\\\" (input)=\\\"validateMaxValue()\\\">\\r\\n          <div *ngIf=\\\"!isValidCost\\\" class=\\\"text-danger\\\">{{ costErrorMessage }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"modeId\\\" [(ngModel)]=\\\"form.searchParams.modeId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select Mode' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.modeList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/transportation')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add\\r\\n            transportation' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'Description' }}</th>\\r\\n              <th>{{ 'Cost' }}</th>\\r\\n              <th>{{ 'Date' }}</th>\\r\\n              <th>{{ 'Mode' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.description }}</td>\\r\\n              <td>{{ m.cost }}</td>\\r\\n              <td>{{ convertToLocalDate(m.date) }}</td>\\r\\n              <td>{{ m.modeName }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/transportation/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/transportationlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate\\r\\n            }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-transportationlist',\r\n  templateUrl: './transportationlist.component.html',\r\n  styleUrls: ['./transportationlist.component.css']\r\n})\r\nexport class TransportationlistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      modeList: [] // Initialize customer list\r\n    },\r\n    data: { id: null ,\r\n      cost: ''\r\n    },\r\n    inputerror: { quantity: '', productName: '' },\r\n    searchParams: {\r\n      name: '',\r\n      date: '', // Initialize date field\r\n      modeId: null, // Initialize customerId to null\r\n      cost: '',\r\n      \r\n\r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0,\r\n    \r\n\r\n  };\r\n\r\n  isValidCost: boolean = true;\r\n  costErrorMessage: string = '';\r\n  isValidDescription: boolean = true;\r\n  descriptionErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.TRANSPORTATION, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0]; // Ensure it's in ISO format\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n   validateDescription(description: string) {\r\n    const alphabeticPattern = /^[a-zA-Z]*$/;\r\n    if (!alphabeticPattern.test(description)) {\r\n      this.isValidDescription = false;\r\n      this.descriptionErrorMessage = 'Description must contain only alphabetic characters.';\r\n    } else {\r\n      this.isValidDescription = true;\r\n      this.descriptionErrorMessage = '';\r\n    }\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options: any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n\r\n  validateNumericInput(event: KeyboardEvent) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a number\r\n    const numberRegex = /^[0-9]+$/;\r\n\r\n    // Test if the input matches the allowed characters and does not exceed the length\r\n    if (!numberRegex.test(charStr) || this.form.data.cost.length >= 7) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateMaxValue() {\r\n    if (this.form.data.cost && parseInt(this.form.data.cost) > 5000000) {\r\n      this.form.data.cost = '5000000'; // Reset to max allowed value\r\n    }\r\n  }\r\n  \r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n.grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  }\\r\\n  </style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom: 5%;\\r\\n background: url(assets/files/wall.jpg);\\r\\n  background-attachment: fixed;\\r\\n  background-size: cover; width:auto;\\r\\n    height: auto;\\\">\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2  class=\\\"text-primary font-weight-bold\\\">{{'Change Password' | translate }}</h2>\\r\\n    \\r\\n\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Old Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"oldPassword\\\" [(ngModel)]=\\\"form.data.oldPassword\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Old Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n        \\r\\n        <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'New Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock-alt grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"newPassword\\\" [(ngModel)]=\\\"form.data.newPassword\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{'Enter New Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>Confirm Password</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{'Confirm Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.confirmPassword}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button   (click)=\\\"changePassword()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n               {{'Update' | translate}} </button>\\r\\n            </div>\\r\\n            <input type=\\\"hidden\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\">\\r\\n            \\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\nimport {HttpServiceService } from '../http-service.service';\r\n\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changepassword.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\nexport class ChangepasswordComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, public httpService : HttpServiceService) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null, loginId : null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n    pageNo : 0\r\n  };\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.oldPassword);\r\n    flag = flag && validator.isNotNullObject(form.newPassword);\r\n    flag = flag && validator.isNotNullObject(form.confirmPassword);\r\n    return flag;\r\n  }\r\n\r\n  changePassword(){\r\n   var _self = this;\r\n   this.form.data.loginId = localStorage.getItem(\"loginId\")\r\n    this.httpService.post(\"http://localhost:8084/User/changepassword\",this.form.data,function (res){\r\n      \r\n      if(res.success){\r\n        _self.form.list = res.result.data;\r\n        _self.form.message = res.result.message;\r\n      }\r\n         });\r\n  }\r\n  }\r\n  \r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; \\r\\nbackground: url(assets/files/edc.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg\\\">\\r\\n        <form name=\\\"myProfile\\\">\\r\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'My Profile'  | translate }}</h2>\\r\\n         \\r\\n\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          \\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'login Id'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n          \\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select'  | translate }}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male'  | translate }} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female'  | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Image'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\"\\r\\n                  (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\">\\r\\n\\r\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" readonly>\\r\\n\\r\\n                  <option value=\\\"Active\\\">{{'Active'  | translate }} </option>\\r\\n                  <option value=\\\"Inactive\\\">{{'Inactive'  | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            \\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-myprofile',\r\n  templateUrl: './myprofile.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class MyprofileComponent extends BaseCtl{\r\n constructor(public locator: ServiceLocatorService, public route: ActivatedRoute,private httpClient: HttpClient) {\r\n  super(locator.endpoints.USER, locator, route);\r\n  }\r\nngOnInit(){\r\n \r\n}\r\n  \r\n\r\n}\r\n","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <!-- <div class=\\\"col-sm-5\\\"> -->\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'User List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <button class=\\\"filebtn third\\\">Button 3</button> -->\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.firstName\\\"\\r\\n            placeholder=\\\"{{'Search First Name' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dob\\\"\\r\\n            placeholder=\\\"{{'Search dob' | translate}}\\\">\\r\\n\\r\\n        </div> -->\\r\\n        \\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.searchParams.roleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/user')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add User' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\"  name=\\\"list_name\\\" value=\\\"h1\\\" \\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'Image' | translate}}</th>\\r\\n                <th>{{'First Name' | translate}}</th>\\r\\n                <th>{{'Last Name' | translate}}</th>\\r\\n                <th>{{'Login' | translate}}</th>\\r\\n                <th>{{'Status' | translate}}</th>\\r\\n                <th>{{'Role' | translate}}</th>\\r\\n                <th>{{'Phone' | translate}}</th>\\r\\n                <th>{{'DOB' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" [disabled]=\\\"m.roleName=='Admin'\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n\\r\\n                \\r\\n                <td>\\r\\n                  <div *ngIf=\\\"m.imageId\\\"> \\r\\n                    <img src=\\\"http://localhost:8084/User/profilePic/{{m.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"!m.imageId\\\">\\r\\n                    <img src=\\\"../../assets/files/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n\\r\\n                <td> {{ m.firstName }} </td>\\r\\n                <td> {{ m.lastName }} </td>\\r\\n                <td> {{ m.loginId }} </td>\\r\\n                <td> {{ m.status }} </td>\\r\\n                <td> {{ m.roleName }} </td>\\r\\n                <td> {{ m.phone }} </td>\\r\\n                <td> {{ m.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>\\r\\n\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\" [disabled]=\\\"m.roleName=='Admin'\\\" (click)=\\\"forward( '/user/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\"></button>\\r\\n                  <!-- <a (click)=\\\"forward( '/user/' +  m.id)\\\" style=\\\"\\r\\n                    cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-primary\\\"></i>\\r\\n                  </a> -->\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger \\\"></i>\\r\\n                  </a> -->\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/userlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserListComponent extends BaseListCtl {\r\n  imageToShow: any;\r\n  myKey = \"\";\r\n\r\ncreateImageFromBlob(image: Blob) {\r\n   let reader = new FileReader();\r\n   reader.addEventListener(\"load\", () => {\r\n      this.imageToShow = reader.result;\r\n   \r\n   }, false);\r\n\r\n   if (image) {\r\n      reader.readAsDataURL(image);\r\n   }\r\n}\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null}, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [ ], // search list \r\n    pageNo: 0\r\n  };\r\n\r\n\r\n\r\n  selectedFile: File;\r\n  retrievedImage: any;\r\n  base64Data: any;\r\n  retrieveResonse: any;\r\n  message: string;\r\n  imageName: any;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n\r\n\r\n  getImage(id) {\r\n    //Make a call to Sprinf Boot to get the Image Bytes.\r\n    this.form.data.id = id;\r\n    console.log(this.form.data.id);\r\n    \r\n    this.httpClient.get('http://localhost:8080/User/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\r\n      this.createImageFromBlob(data);\r\n      this.myKey= this.form.data.id;\r\n    }, error => {\r\n      \r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n ","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n.file-btn{\\r\\n    border: black;\\r\\n}\\r\\n\\r\\n\\r\\n.third {\\r\\n    border-color: #b300b3;\\r\\n    color: #695d29;\\r\\n    box-shadow: 0 0 40px 40px #3498db inset, 0 0 0 0 #3498db;\\r\\n    transition: all 150ms ease-in-out;\\r\\n  }\\r\\n\\r\\n\\r\\n.third:hover {\\r\\n    box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\\r\\n  }\\r\\n\\r\\n\\r\\n.filebtn {\\r\\n    box-sizing: border-box;\\r\\n    -webkit-appearance: none;\\r\\n       -moz-appearance: none;\\r\\n            appearance: none;\\r\\n    background-color: transparent;\\r\\n    border: 2px solid #e74c3c;\\r\\n    border-radius: 0.6em;\\r\\n    color: #e74c3c;\\r\\n    cursor: pointer;\\r\\n    display: flex;\\r\\n    align-self: center;\\r\\n    font-size: 1rem;\\r\\n    font-weight: 400;\\r\\n    line-height: 1;\\r\\n    margin: 20px;\\r\\n    padding: 1.2em 2.8em;\\r\\n    text-decoration: none;\\r\\n    text-align: center;\\r\\n    text-transform: uppercase;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    font-weight: 700;\\r\\n  }\\r\\n\\r\\n\\r\\n.filebtn:hover, .filebtn:focus {\\r\\n    color: #ffffff;\\r\\n    outline: 0;\\r\\n  }\\r\\n  \\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCOzs7QUFDQTtJQUNJLGFBQWE7QUFDakI7OztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCx3REFBd0Q7SUFFeEQsaUNBQWlDO0VBQ25DOzs7QUFDQTtJQUNFLDBEQUEwRDtFQUM1RDs7O0FBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsd0JBQXdCO09BQ3JCLHFCQUFxQjtZQUNoQixnQkFBZ0I7SUFDeEIsNkJBQTZCO0lBQzdCLHlCQUF5QjtJQUN6QixvQkFBb0I7SUFDcEIsY0FBYztJQUNkLGVBQWU7SUFJZixhQUFhO0lBR0wsa0JBQWtCO0lBQzFCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIscUNBQXFDO0lBQ3JDLGdCQUFnQjtFQUNsQjs7O0FBQ0E7SUFDRSxjQUFjO0lBQ2QsVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG4uZmlsZS1idG57XHJcbiAgICBib3JkZXI6IGJsYWNrO1xyXG59XHJcblxyXG4udGhpcmQge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjYjMwMGIzO1xyXG4gICAgY29sb3I6ICM2OTVkMjk7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgNDBweCA0MHB4ICMzNDk4ZGIgaW5zZXQsIDAgMCAwIDAgIzM0OThkYjtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDE1MG1zIGVhc2UtaW4tb3V0O1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDE1MG1zIGVhc2UtaW4tb3V0O1xyXG4gIH1cclxuICAudGhpcmQ6aG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggMCAjMzQ5OGRiIGluc2V0LCAwIDAgMTBweCA0cHggIzM0OThkYjtcclxuICB9XHJcbiAgLmZpbGVidG4ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgICAgICAgYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgI2U3NGMzYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuNmVtO1xyXG4gICAgY29sb3I6ICNlNzRjM2M7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC13ZWJraXQtYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgIC1tcy1mbGV4LWl0ZW0tYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMS4yZW0gMi44ZW07XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgfVxyXG4gIC5maWxlYnRuOmhvdmVyLCAuZmlsZWJ0bjpmb2N1cyB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG4gIFxyXG5cclxuIl19 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<style type=\\\"text/css\\\">\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 2%; padding-bottom:2%;\\r\\n\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:100%;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad \\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add User' |\\r\\n            translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update User' |\\r\\n            translate }}</h2>\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Role Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.data.roleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.roleId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'role'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.roleId}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.firstName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'firstname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.lastName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'lastname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'login Id' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.loginId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'email'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.loginId}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.password != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'password'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"number\\\" name=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.phone != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'phone'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"number\\\" name=\\\"alternateMobile\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.alternateMobile != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'mobile'| translate}} </span></div>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.alternateMobile}} </span> -->\\r\\n\\r\\n\\r\\n            <div>\\r\\n         \\r\\n             <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                  required />\\r\\n              </div>\\r\\n            </div>\\r\\n<span *ngIf=\\\"form.inputerror.dob != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'dob'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span> -->\\r\\n          </div>\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate }} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.gender != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'gender'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.gender}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Image' | translate }}</b>\\r\\n              <!-- <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"></option> -->\\r\\n              <span *ngIf=\\\"!form.data.imageId\\\" class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div *ngIf=\\\"form.data.imageId\\\">\\r\\n                <img src=\\\"http://localhost:8084/User/profilePic/{{form.data.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!form.data.imageId\\\">\\r\\n                <img src=\\\"../../assets/files/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-picture-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\" (change)=\\\"onFileSelect($event.target.files)\\\"\\r\\n                  accept=\\\"image/*\\\">\\r\\n\\r\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bell grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Status' | translate }}</option>\\r\\n                  <option value=\\\"Active\\\">{{'Active' | translate }} </option>\\r\\n                  <option value=\\\"Inactive\\\">{{'Inactive' | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.status != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'status'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span> -->\\r\\n          </div>\\r\\n          <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/userlist']\\\"\\r\\n                  style=\\\"text-decoration: none; color: white;\\\">{{'List' | translate }}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  fileToUpload: File = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n      _self.myFile();\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  onFileSelect(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    console.log(this.fileToUpload);\r\n\r\n  }\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  myFile() {\r\n    console.log(this.form.data.id + 'after super.submit-----');\r\n    this.onSubmitProfile(this.fileToUpload, this.userForm).subscribe(data => {\r\n\r\n      console.log(this.fileToUpload);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  onSubmitProfile(fileToUpload: File, userform: FormGroup) {\r\n    const formData = new FormData();\r\n    let phone = null;\r\n    formData.append('file', fileToUpload);\r\n    console.log(this.form.data.id + 'this id number ======');\r\n    return this.httpClient.post(\"http://localhost:8084/User/profilePic/\" + this.form.data.id, formData);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.roleId);\r\n    console.log(form.roleId);\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    console.log(form.firstName);\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    console.log(form.lastName);\r\n    flag = flag && validator.isNotNullObject(form.loginId);\r\n    console.log(form.loginId);\r\n    flag = flag && validator.isNotNullObject(form.password);\r\n    console.log(form.password);\r\n    flag = flag && validator.isNotNullObject(form.phone);\r\n    console.log(form.phone);\r\n    flag = flag && validator.isNotNullObject(form.alternateMobile);\r\n    console.log(form.alternateMobile);\r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n    console.log(form.dob);\r\n    flag = flag && validator.isNotNullObject(form.gender);\r\n    console.log(form.gender + 'gender--');\r\n    flag = flag && validator.isNotNullObject(form.status);\r\n    console.log(form.status + 'status---');\r\n\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in usercomponent');\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.loginId = data.loginId;\r\n    form.password = data.password;\r\n    form.gender = data.gender;\r\n    console.log(form.gender + 'gender--');\r\n    form.alternateMobile = data.alternateMobile;\r\n    form.phone = data.phone;\r\n    console.log(form.phone);\r\n    form.dob = data.dob;\r\n    form.roleId = data.roleId;\r\n    form.status = data.status;\r\n    form.imageId = data.imageId;\r\n    console.log(form.status + 'status---');\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataValidator {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  trim(valueToWhite: string) {\r\n    return valueToWhite.replace(/\\s/g, \"\");\r\n  }\r\n  /**\r\n   * Check is string is not empty\r\n   * @param val \r\n   */\r\n  isNotNull(val: string) {\r\n    let flag = true;\r\n    try {\r\n      if (val) {\r\n        val = this.trim(val);\r\n        flag = val.length > 0;\r\n      } else {\r\n        flag = false;\r\n      }\r\n    } catch (error) {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  \r\n\r\n  /**\r\n * Is string is empty\r\n * @param val\r\n */\r\n  isNull(val: any) {\r\n    return !this.isNotNullObject(val);\r\n  }\r\n\r\n  /**\r\n   * Is not null object\r\n   */\r\n  isNotNullObject(val: any) {\r\n    let flag = true;\r\n    try {\r\n      if (val) {\r\n        flag = true;\r\n      } else {\r\n        flag = false;\r\n      }\r\n    } catch (error) {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * Is null object\r\n   */\r\n  isNullObject(val: any) {\r\n    return !this.isNotNullObject(val);\r\n  }\r\n\r\n\r\n  isTrue(val: boolean) {\r\n    let flag = true;\r\n    if (val) {\r\n      flag = true;\r\n    } else {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param val Convets string into number\r\n   */\r\n  toInt(val: any) {\r\n    let returnVal = 0;\r\n    if (val) {\r\n      try {\r\n        returnVal = parseInt(val);\r\n        if (isNaN(returnVal)) {\r\n          returnVal = 0;\r\n        }\r\n      } catch (error) {\r\n        returnVal = 0;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  toFloat(val: any) {\r\n    let returnVal = 0;\r\n    if (val) {\r\n      try {\r\n        returnVal = parseFloat(val);\r\n        if (isNaN(returnVal)) {\r\n          returnVal = 0;\r\n        }\r\n      } catch (error) {\r\n        returnVal = 0;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  /**\r\n   * Create clone pobject\r\n   * \r\n   * @param obj \r\n   */\r\n  getClone(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZlaGljbGV0cmFja2luZy92ZWhpY2xldHJhY2tpbmcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .required-field {\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .alertRedColor {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    padding: 2rem;\\r\\n  }\\r\\n\\r\\n  .input-group-text i {\\r\\n    width: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .btn-primary,\\r\\n  .btn-success,\\r\\n  .btn-warning {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-control {\\r\\n    height: calc(2.25rem + 2px);\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text {\\r\\n    background-color: #e9ecef;\\r\\n    border: 1px solid #ced4da;\\r\\n  }\\r\\n\\r\\n  .input-group-prepend .input-group-text i {\\r\\n    color: #495057;\\r\\n  }\\r\\n\\r\\n  .row {\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n  }\\r\\n\\r\\n  .textarea-height {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin: auto;\\r\\n    max-width: 500px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container-fluid\\\"\\r\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body input-group-addon grad\\\">\\r\\n          <form name=\\\"userForm\\\">\\r\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Vehicle Tracking' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Vehicle Tracking' |\\r\\n              translate }}\\r\\n            </h2>\\r\\n\\r\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n              {{ form.message }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'VehicleId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.data.vehicleIdId\\\"\\r\\n                  aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select vehicleId' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.vehicleIdId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.vehicleIdId}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\" maxlength=\\\"30\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Lat' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"number\\\" name=\\\"lat\\\" [(ngModel)]=\\\"form.data.lat\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter lat' | translate }}\\\">\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.lat\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.lat}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'longitude' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"number\\\" name=\\\"longitude\\\" [(ngModel)]=\\\"form.data.longitude\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{ 'Enter longitude' | translate }}\\\">\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.lat\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.longitude}}</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label><b>{{ 'Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.date=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\r\\n              </div>\\r\\n              <span *ngIf=\\\"form.inputerror.date\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.date\\r\\n                }}</span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\r\\n                  }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/vehicletrackinglist']\\\">{{ 'List' | translate\\r\\n                  }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-vehicletracking',\r\n  templateUrl: './vehicletracking.component.html',\r\n  styleUrls: ['./vehicletracking.component.css']\r\n})\r\nexport class VehicletrackingComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.VEHICLETRACKING, locator, route);\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n  \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {}; // Clear input errors here\r\n  \r\n      if (res.success) {\r\n        _self.form.error = false; // Set error to false on success\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Rahul----------.\");\r\n  \r\n        // Clear form data if needed\r\n        // _self.form.data = {};\r\n  \r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n\r\n\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"--------------------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  onUpload(userform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.vehicleIdId);\r\n    console.log(form.vehicleIdId);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    console.log(form.name);\r\n    flag = flag && validator.isNotNullObject(form.lat);\r\n    console.log(form.lat);\r\n    flag = flag && validator.isNotNullObject(form.longitude);\r\n    console.log(form.longitude);\r\n    flag = flag && validator.isNotNullObject(form.date);\r\n    console.log(form.date);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in shoppingcomponent');\r\n    form.name = data.name;\r\n    form.lat = data.lat;\r\n    form.longitude = data.longitude;\r\n    form.date = data.date;\r\n    form.vehicleIdId = data.vehicleIdId;\r\n\r\n\r\n  }\r\n\r\n  validatePhone(event: KeyboardEvent) {\r\n    const input = event.key;\r\n    // Check if the input is a number or backspace\r\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\r\n      event.preventDefault();\r\n    }\r\n    // Limit the input to 10 characters\r\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateAlphabetInput(event) {\r\n    const charCode = event.which || event.keyCode;\r\n    const charStr = String.fromCharCode(charCode);\r\n\r\n    // Regular expression to test if the character is a letter\r\n    const letterRegex = /^[a-zA-Z\\s]+$/;\r\n\r\n    // Test if the input matches the allowed characters\r\n    if (!letterRegex.test(charStr)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // Optionally, check the entire value against the name format regex\r\n    const inputElement = event.target;\r\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\r\n\r\n    // Regex for valid name format \"FirstName LastName\"\r\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n    // Check if the current value matches the valid name format\r\n    if (!nameRegex.test(inputValue)) {\r\n      // Handle invalid input (e.g., disable submit button, show error message)\r\n      // Example:\r\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\r\n    } else {\r\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  test() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZlaGljbGV0cmFja2luZy92ZWhpY2xldHJhY2tpbmdsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .search-inputs {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n\\r\\n  .search-inputs .form-control,\\r\\n  .search-inputs .btn {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n  .content-wrapper {\\r\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    width: auto;\\r\\n    height: 105vh;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  .table-responsive {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Vehicle Tracking List' | translate }}</h1>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" maxlength=\\\"30\\\" (input)=\\\"validateInput($event, 'name')\\\">\\r\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\r\\n        </div>\\r\\n        <!--  <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\r\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\r\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\"\\r\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search date' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lat\\\"\\r\\n            placeholder=\\\"{{ 'Search lat' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.longitude\\\"\\r\\n            placeholder=\\\"{{ 'Search longitude' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.searchParams.vehicleIdId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"null\\\">{{ 'Select vehicle' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.key }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"forward('/vehicletracking')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add vehicle tracking' |\\r\\n            translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{ form.message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-responsive mt-3\\\">\\r\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\r\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\r\\n            <tr align=\\\"center\\\">\\r\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\r\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n              <th>{{ 'S.No' }}</th>\\r\\n              <th>{{ 'name' }}</th>\\r\\n              <th>{{ 'lat' }}</th>\\r\\n              <th>{{ 'longitude' }}</th>\\r\\n              <th>{{ 'date' }}</th>\\r\\n              <th>{{ 'vehicleId' }}</th>\\r\\n              <th>{{ 'Edit' }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\r\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\r\\n              <td>{{ m.name }}</td>\\r\\n              <td>{{ m.lat }}</td>\\r\\n              <td>{{ m.longitude }}</td>\\r\\n              <td>{{ convertToLocalDate(m.date) }}</td>\\r\\n              <td>{{ m.vehicleIdId }}</td>\\r\\n              <td>\\r\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/vehicletracking/' + m.id)\\\"></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\r\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\r\\n          }}</button>\\r\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\r\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/vehicletrackinglist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\r\\n            translate }}</a>\\r\\n        </div>\\r\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-vehicletrackinglist',\r\n  templateUrl: './vehicletrackinglist.component.html',\r\n  styleUrls: ['./vehicletrackinglist.component.css']\r\n})\r\nexport class VehicletrackinglistComponent extends BaseListCtl implements OnInit {\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: {\r\n      vehicleIdList: [] // Initialize vehicle list\r\n    },\r\n    data: { id: null },\r\n    inputerror: { quantity: '', productName: '' },\r\n    searchParams: {\r\n      name: '',\r\n      lat: '',\r\n      date: '', // Initialize date field\r\n      vehicleIdId: null, // Initialize vehicleId to null\r\n      longitude: '',\r\n      \r\n    },\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0\r\n  };\r\n\r\n  isValidMobileInput: boolean = true;\r\n  isValidNameInput: boolean = true;\r\n  nameErrorMessage: string = '';\r\n  mobileErrorMessage: string = '';\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.VEHICLETRACKING, locator, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  // Format date function\r\n  formatDate(event: any) {\r\n    const selectedDate = new Date(event);\r\n    const formattedDate = selectedDate.toISOString().split('T')[0];\r\n    this.form.searchParams.date = formattedDate;\r\n  }\r\n\r\n  // Convert date to local format for display\r\n  convertToLocalDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    // Format date to 'MM/DD/YYYY'\r\n    const options:any = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  }\r\n\r\n  // Validate input for name and mobile fields\r\n  validateInput(event: any, field: string) {\r\n    const value = event.target.value;\r\n    if (field === 'mobile') {\r\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\r\n      if (!this.isValidMobileInput) {\r\n        this.mobileErrorMessage = 'Please type numbers only';\r\n      } else {\r\n        this.mobileErrorMessage = '';\r\n      }\r\n    } else if (field === 'name') {\r\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\r\n      if (!this.isValidNameInput) {\r\n        this.nameErrorMessage = 'Please type alphabets only';\r\n      } else {\r\n        this.nameErrorMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // Submit method\r\n  submit() {\r\n    // Reset page number before searching\r\n    this.form.pageNo = 0;\r\n    // Call the search method after formatting the date\r\n    this.search();\r\n  }\r\n\r\n\r\n  // Search method\r\n  search() {\r\n    // Clear previous search message\r\n    this.form.searchMessage = null;\r\n    // Perform the search operation with the search parameters\r\n    super.search();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}